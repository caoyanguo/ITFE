    
package com.cfcc.itfe.persistence.dto;

import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Time;
import java.sql.Timestamp ;

import java.lang.reflect.Array;

import com.cfcc.jaf.persistence.jaform.parent.IDto ;
import com.cfcc.jaf.persistence.jaform.parent.IPK;
import com.cfcc.itfe.persistence.pk.TsDrawbackreasonPK;
/**
 * <p>Title: DTO of table: TS_DRAWBACKREASON</p>
 * <p>Description:  Data Transfer Object </p>
 * <p>Copyright: Copyright (c) 2005</p>
 * <p>Company: CFCC </p>
 * <p>Generation Time: 2014-12-25 15:29:00 </p>
 *  Do NOT change this file by hand.
 *  This java source file is generated by JAF_ORM .
 *  dto.vm version timestamp: 2008-01-08 16:30:00 
 *
 * @author win7
 */

public class TsDrawbackreasonDto   
                              implements IDto  {
/********************************************************
 *   fields
 ********************************************************/

    /**
    *  S_BOOKORGCODE CHARACTER , PK   , NOT NULL       */
    protected String sbookorgcode;
    /**
    *  S_TBSDRAWCODE VARCHAR , PK   , NOT NULL       */
    protected String stbsdrawcode;
    /**
    *  S_TBSDRAWNAME VARCHAR   , NOT NULL       */
    protected String stbsdrawname;
    /**
    *  S_TCBSDRAWCODE VARCHAR   , NOT NULL       */
    protected String stcbsdrawcode;
    /**
    *  S_TCBSDRAWNAME VARCHAR   , NOT NULL       */
    protected String stcbsdrawname;
    /**
    *  TS_SYSUPDATE TIMESTAMP         */
    protected Timestamp tssysupdate;


/******************************************************
*
*  getter and setter
*
*******************************************************/


    public String getSbookorgcode()
    {
        return sbookorgcode;
    }
     /**
     *   Setter S_BOOKORGCODE, PK , NOT NULL        * */
    public void setSbookorgcode(String _sbookorgcode) {
        this.sbookorgcode = _sbookorgcode;
    }


    public String getStbsdrawcode()
    {
        return stbsdrawcode;
    }
     /**
     *   Setter S_TBSDRAWCODE, PK , NOT NULL        * */
    public void setStbsdrawcode(String _stbsdrawcode) {
        this.stbsdrawcode = _stbsdrawcode;
    }


    public String getStbsdrawname()
    {
        return stbsdrawname;
    }
     /**
     *   Setter S_TBSDRAWNAME , NOT NULL        * */
    public void setStbsdrawname(String _stbsdrawname) {
        this.stbsdrawname = _stbsdrawname;
    }


    public String getStcbsdrawcode()
    {
        return stcbsdrawcode;
    }
     /**
     *   Setter S_TCBSDRAWCODE , NOT NULL        * */
    public void setStcbsdrawcode(String _stcbsdrawcode) {
        this.stcbsdrawcode = _stcbsdrawcode;
    }


    public String getStcbsdrawname()
    {
        return stcbsdrawname;
    }
     /**
     *   Setter S_TCBSDRAWNAME , NOT NULL        * */
    public void setStcbsdrawname(String _stcbsdrawname) {
        this.stcbsdrawname = _stcbsdrawname;
    }


    public Timestamp getTssysupdate()
    {
        return tssysupdate;
    }
     /**
     *   Setter TS_SYSUPDATE        * */
    public void setTssysupdate(Timestamp _tssysupdate) {
        this.tssysupdate = _tssysupdate;
    }




/******************************************************
*
*  Get Column Name
*
*******************************************************/
    /**
    *   Getter S_BOOKORGCODE, PK , NOT NULL       * */
    public static String  columnSbookorgcode()
    {
        return "S_BOOKORGCODE";
    }
   
    /**
    *   Getter S_TBSDRAWCODE, PK , NOT NULL       * */
    public static String  columnStbsdrawcode()
    {
        return "S_TBSDRAWCODE";
    }
   
    /**
    *   Getter S_TBSDRAWNAME , NOT NULL       * */
    public static String  columnStbsdrawname()
    {
        return "S_TBSDRAWNAME";
    }
   
    /**
    *   Getter S_TCBSDRAWCODE , NOT NULL       * */
    public static String  columnStcbsdrawcode()
    {
        return "S_TCBSDRAWCODE";
    }
   
    /**
    *   Getter S_TCBSDRAWNAME , NOT NULL       * */
    public static String  columnStcbsdrawname()
    {
        return "S_TCBSDRAWNAME";
    }
   
    /**
    *   Getter TS_SYSUPDATE       * */
    public static String  columnTssysupdate()
    {
        return "TS_SYSUPDATE";
    }
   


    /**
    *  Table Name
    */
    public static String tableName(){
        return "TS_DRAWBACKREASON";
    }
    
    /**
    *  Columns
    */
    public static String[] columnNames(){
        String[] columnNames = new String[6];        
        columnNames[0]="S_BOOKORGCODE";
        columnNames[1]="S_TBSDRAWCODE";
        columnNames[2]="S_TBSDRAWNAME";
        columnNames[3]="S_TCBSDRAWCODE";
        columnNames[4]="S_TCBSDRAWNAME";
        columnNames[5]="TS_SYSUPDATE";
        return columnNames;     
    }
/*******************************************************
*
*  supplementary methods
*
*****************************************************/


    /* Indicates whether some other object is "equal to" this one. */
    public boolean equals(Object obj)
    {
        if (this == obj)
            return true;

        if (obj == null || !(obj instanceof TsDrawbackreasonDto))
            return false;

        TsDrawbackreasonDto bean = (TsDrawbackreasonDto) obj;


      //compare field sbookorgcode
      if((this.sbookorgcode==null && bean.sbookorgcode!=null) || (this.sbookorgcode!=null && bean.sbookorgcode==null))
          return false;
        else if(this.sbookorgcode==null && bean.sbookorgcode==null){
        }
        else{
          if(!bean.sbookorgcode.equals(this.sbookorgcode))
               return false;
     }
      //compare field stbsdrawcode
      if((this.stbsdrawcode==null && bean.stbsdrawcode!=null) || (this.stbsdrawcode!=null && bean.stbsdrawcode==null))
          return false;
        else if(this.stbsdrawcode==null && bean.stbsdrawcode==null){
        }
        else{
          if(!bean.stbsdrawcode.equals(this.stbsdrawcode))
               return false;
     }
      //compare field stbsdrawname
      if((this.stbsdrawname==null && bean.stbsdrawname!=null) || (this.stbsdrawname!=null && bean.stbsdrawname==null))
          return false;
        else if(this.stbsdrawname==null && bean.stbsdrawname==null){
        }
        else{
          if(!bean.stbsdrawname.equals(this.stbsdrawname))
               return false;
     }
      //compare field stcbsdrawcode
      if((this.stcbsdrawcode==null && bean.stcbsdrawcode!=null) || (this.stcbsdrawcode!=null && bean.stcbsdrawcode==null))
          return false;
        else if(this.stcbsdrawcode==null && bean.stcbsdrawcode==null){
        }
        else{
          if(!bean.stcbsdrawcode.equals(this.stcbsdrawcode))
               return false;
     }
      //compare field stcbsdrawname
      if((this.stcbsdrawname==null && bean.stcbsdrawname!=null) || (this.stcbsdrawname!=null && bean.stcbsdrawname==null))
          return false;
        else if(this.stcbsdrawname==null && bean.stcbsdrawname==null){
        }
        else{
          if(!bean.stcbsdrawname.equals(this.stcbsdrawname))
               return false;
     }
      //compare field tssysupdate
      if((this.tssysupdate==null && bean.tssysupdate!=null) || (this.tssysupdate!=null && bean.tssysupdate==null))
          return false;
        else if(this.tssysupdate==null && bean.tssysupdate==null){
        }
        else{
          if(!bean.tssysupdate.equals(this.tssysupdate))
               return false;
     }



        return true;
    }

    /* return hashCode ,if A.equals(B) that A.hashCode()==B.hashCode() */
	public int hashCode()
	{
  
		int _hash_ = 1;
		
        if(this.sbookorgcode!=null)
          _hash_ = _hash_ * 31+ this.sbookorgcode.hashCode() ;
        if(this.stbsdrawcode!=null)
          _hash_ = _hash_ * 31+ this.stbsdrawcode.hashCode() ;
        if(this.stbsdrawname!=null)
          _hash_ = _hash_ * 31+ this.stbsdrawname.hashCode() ;
        if(this.stcbsdrawcode!=null)
          _hash_ = _hash_ * 31+ this.stcbsdrawcode.hashCode() ;
        if(this.stcbsdrawname!=null)
          _hash_ = _hash_ * 31+ this.stcbsdrawname.hashCode() ;
        if(this.tssysupdate!=null)
          _hash_ = _hash_ * 31+ this.tssysupdate.hashCode() ;

		return _hash_;
	
	}

     /* Creates and returns a copy of this object. */
    public Object clone()
    {
        TsDrawbackreasonDto bean = new TsDrawbackreasonDto();

          bean.sbookorgcode = this.sbookorgcode;

          bean.stbsdrawcode = this.stbsdrawcode;

          if (this.stbsdrawname != null)
            bean.stbsdrawname = new String(this.stbsdrawname);
          if (this.stcbsdrawcode != null)
            bean.stcbsdrawcode = new String(this.stcbsdrawcode);
          if (this.stcbsdrawname != null)
            bean.stcbsdrawname = new String(this.stcbsdrawname);
          if (this.tssysupdate != null)
            bean.tssysupdate = (Timestamp) this.tssysupdate.clone();
  
        return bean;
    }


   /* Returns a string representation of the object. */
    public String toString()
    {
        String sep = "; ";
        StringBuffer sb = new StringBuffer();
        sb.append("TsDrawbackreasonDto").append(sep);
        sb.append("[sbookorgcode]").append(" = ").append(sbookorgcode).append(sep);
        sb.append("[stbsdrawcode]").append(" = ").append(stbsdrawcode).append(sep);
        sb.append("[stbsdrawname]").append(" = ").append(stbsdrawname).append(sep);
        sb.append("[stcbsdrawcode]").append(" = ").append(stcbsdrawcode).append(sep);
        sb.append("[stcbsdrawname]").append(" = ").append(stcbsdrawname).append(sep);
        sb.append("[tssysupdate]").append(" = ").append(tssysupdate).append(sep);
            return sb.toString();
    }

  /* Returns value valid checking String , NULL is Valid*/
   public String  checkValid()
  {
  	StringBuffer sb = new StringBuffer() ;

    //check field S_BOOKORGCODE
      if (this.getSbookorgcode()==null)
             sb.append("S_BOOKORGCODE²»ÄÜÎª¿Õ; ");
      if (this.getSbookorgcode()!=null)
             if (this.getSbookorgcode().getBytes().length > 12)
                sb.append("S_BOOKORGCODE¿í¶È²»ÄÜ³¬¹ý "+12+"¸ö×Ö·û; ");
    
    //check field S_TBSDRAWCODE
      if (this.getStbsdrawcode()==null)
             sb.append("S_TBSDRAWCODE²»ÄÜÎª¿Õ; ");
      if (this.getStbsdrawcode()!=null)
             if (this.getStbsdrawcode().getBytes().length > 12)
                sb.append("S_TBSDRAWCODE¿í¶È²»ÄÜ³¬¹ý "+12+"¸ö×Ö·û; ");
    
    //check field S_TBSDRAWNAME
      if (this.getStbsdrawname()==null)
             sb.append("S_TBSDRAWNAME²»ÄÜÎª¿Õ; ");
      if (this.getStbsdrawname()!=null)
             if (this.getStbsdrawname().getBytes().length > 50)
                sb.append("S_TBSDRAWNAME¿í¶È²»ÄÜ³¬¹ý "+50+"¸ö×Ö·û; ");
    
    //check field S_TCBSDRAWCODE
      if (this.getStcbsdrawcode()==null)
             sb.append("S_TCBSDRAWCODE²»ÄÜÎª¿Õ; ");
      if (this.getStcbsdrawcode()!=null)
             if (this.getStcbsdrawcode().getBytes().length > 10)
                sb.append("S_TCBSDRAWCODE¿í¶È²»ÄÜ³¬¹ý "+10+"¸ö×Ö·û; ");
    
    //check field S_TCBSDRAWNAME
      if (this.getStcbsdrawname()==null)
             sb.append("S_TCBSDRAWNAME²»ÄÜÎª¿Õ; ");
      if (this.getStcbsdrawname()!=null)
             if (this.getStcbsdrawname().getBytes().length > 50)
                sb.append("S_TCBSDRAWNAME¿í¶È²»ÄÜ³¬¹ý "+50+"¸ö×Ö·û; ");
    
    //don't need check field TS_SYSUPDATE,it is UpdateTimeStamp column
  

 	String msg = sb.toString() ;
	if (msg.length() == 0)
		  return null ;

  return  msg;
  }
  /* Returns value valid checking String , NULL is Valid*/
   public String  checkValid(String[] _columnNames)
  {
  	StringBuffer sb = new StringBuffer() ;
    // check columnNames
    String checkNameMsg = checkColumnNamesValid(_columnNames);
    if (checkNameMsg != null) {
         return checkNameMsg;
    }
    //check field S_BOOKORGCODE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_BOOKORGCODE")) {
               if (this.getSbookorgcode()==null)
                    sb.append("S_BOOKORGCODE ²»ÄÜÎª¿Õ; ");
               if (this.getSbookorgcode()!=null)
                    if (this.getSbookorgcode().getBytes().length > 12)
                        sb.append("S_BOOKORGCODE ¿í¶È²»ÄÜ³¬¹ý "+12+"¸ö×Ö·û");
             break;
         }
  }
    
    //check field S_TBSDRAWCODE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_TBSDRAWCODE")) {
               if (this.getStbsdrawcode()==null)
                    sb.append("S_TBSDRAWCODE ²»ÄÜÎª¿Õ; ");
               if (this.getStbsdrawcode()!=null)
                    if (this.getStbsdrawcode().getBytes().length > 12)
                        sb.append("S_TBSDRAWCODE ¿í¶È²»ÄÜ³¬¹ý "+12+"¸ö×Ö·û");
             break;
         }
  }
    
    //check field S_TBSDRAWNAME
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_TBSDRAWNAME")) {
               if (this.getStbsdrawname()==null)
                    sb.append("S_TBSDRAWNAME ²»ÄÜÎª¿Õ; ");
               if (this.getStbsdrawname()!=null)
                    if (this.getStbsdrawname().getBytes().length > 50)
                        sb.append("S_TBSDRAWNAME ¿í¶È²»ÄÜ³¬¹ý "+50+"¸ö×Ö·û");
             break;
         }
  }
    
    //check field S_TCBSDRAWCODE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_TCBSDRAWCODE")) {
               if (this.getStcbsdrawcode()==null)
                    sb.append("S_TCBSDRAWCODE ²»ÄÜÎª¿Õ; ");
               if (this.getStcbsdrawcode()!=null)
                    if (this.getStcbsdrawcode().getBytes().length > 10)
                        sb.append("S_TCBSDRAWCODE ¿í¶È²»ÄÜ³¬¹ý "+10+"¸ö×Ö·û");
             break;
         }
  }
    
    //check field S_TCBSDRAWNAME
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_TCBSDRAWNAME")) {
               if (this.getStcbsdrawname()==null)
                    sb.append("S_TCBSDRAWNAME ²»ÄÜÎª¿Õ; ");
               if (this.getStcbsdrawname()!=null)
                    if (this.getStcbsdrawname().getBytes().length > 50)
                        sb.append("S_TCBSDRAWNAME ¿í¶È²»ÄÜ³¬¹ý "+50+"¸ö×Ö·û");
             break;
         }
  }
    
    //don't need check field TS_SYSUPDATE,it is UpdateTimeStamp column
  
 	String msg = sb.toString() ;
	if (msg.length() == 0)
		  return null ;

  return  msg;
  }
  /* Returns value valid checking String , NULL is Valid*/
	public String checkValidExcept(String[] _columnNames) {
		String msg = checkColumnNamesValid(_columnNames);
		if (msg != null) {
			return msg;
		}
		String[] columnCheckNames = new String[columnNames().length
				- _columnNames.length];
		int k = 0;
		for (int i = 0; i < columnNames().length; i++) {
			boolean checkNameInColumn = true;
			for (int j = 0; j < _columnNames.length; j++) {
				if (_columnNames[i].equals(columnNames()[j])) {
					checkNameInColumn = false;
					break;
				}
			}
			if (checkNameInColumn) {
				columnCheckNames[k] = columnNames()[i];
				k++;
			}
		}
		return checkValid(columnCheckNames);
	}
	/* Returns value valid checking String , NULL is Valid */
	public String checkColumnNamesValid(String[] _columnNames) {
		StringBuffer sb = new StringBuffer();
		if (_columnNames.length > columnNames().length) {
			return "ÊäÈë×Ö¶Î¸öÊý¶àÓÚ±íÖÐ×Ö¶Î¸öÊý; ";
		}
		// check columnNames
		for (int i = 0; i < _columnNames.length; i++) {
			boolean checkNameValid = false;
			for (int j = 0; j < columnNames().length; j++) {
				if (_columnNames[i] != null
						&& _columnNames[i].equals(columnNames()[j])) {
					checkNameValid = true;
					break;
				}
			}
			if (!checkNameValid)
				sb.append("ÊäÈë×Ö¶Î " + _columnNames[i] + " ²»ÔÚ¸Ã±í×Ö¶ÎÖÐ; ");
		}
		String msg = sb.toString();
		if (msg.length() == 0)
			return null;

		return msg;
	}
/*******************************************************
*
*  implement IDto
*
*****************************************************/

  /* if this Dto has children Dtos*/
  public boolean  isParent() {
     return false;
  };

  /* get the children Dtos if this has children*/
  public IDto[]  getChildren() {
     return null;
  };

  /* set the children Dtos if this has children*/
  public void  setChildren(IDto[] _dtos) 
  {
     throw new RuntimeException("´ËdtoÃ»ÓÐÏà¹ØÁªµÄ×Ódto£¬²»ÄÜ½øÐÐ´Ë²Ù×÷");
  };
  
  /* return the IPK class  */
    public IPK      getPK(){
      TsDrawbackreasonPK pk = new TsDrawbackreasonPK();
      pk.setSbookorgcode(getSbookorgcode());
      pk.setStbsdrawcode(getStbsdrawcode());
      return pk;
    };
}
