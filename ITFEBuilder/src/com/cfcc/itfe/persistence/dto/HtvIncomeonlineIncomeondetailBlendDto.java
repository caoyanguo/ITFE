    
package com.cfcc.itfe.persistence.dto;

import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Time;
import java.sql.Timestamp ;

import java.lang.reflect.Array;

import com.cfcc.jaf.persistence.jaform.parent.IDto ;
import com.cfcc.jaf.persistence.jaform.parent.IPK;
import com.cfcc.itfe.persistence.pk.HtvIncomeonlineIncomeondetailBlendPK;
/**
 * <p>Title: DTO of table: HTV_INCOMEONLINE_INCOMEONDETAIL_BLEND</p>
 * <p>Description: 电子税票入库流水勾兑表 Data Transfer Object </p>
 * <p>Copyright: Copyright (c) 2005</p>
 * <p>Company: CFCC </p>
 * <p>Generation Time: 2014-12-25 15:28:56 </p>
 *  Do NOT change this file by hand.
 *  This java source file is generated by JAF_ORM .
 *  dto.vm version timestamp: 2008-01-08 16:30:00 
 *
 * @author win7
 */

public class HtvIncomeonlineIncomeondetailBlendDto   
                              implements IDto  {
/********************************************************
 *   fields
 ********************************************************/

    /**
    * 主键 S_SEQ VARCHAR , PK   , NOT NULL       */
    protected String sseq;
    /**
    * 财政机关代码 S_FINORGCODE VARCHAR   , NOT NULL       */
    protected String sfinorgcode;
    /**
    * 税票日期 S_APPLYDATE VARCHAR   , NOT NULL       */
    protected String sapplydate;
    /**
    * 入库日期 S_INTREDATE VARCHAR         */
    protected String sintredate;
    /**
    * 勾兑日期 S_BLEND VARCHAR   , NOT NULL       */
    protected String sblend;
    /**
    * 包流水号 S_PACKNO VARCHAR   , NOT NULL       */
    protected String spackno;
    /**
    * 国库代码 S_TRECODE VARCHAR   , NOT NULL       */
    protected String strecode;
    /**
    * 国库名称 S_TRENAME VARCHAR         */
    protected String strename;
    /**
    * 征收机关代码 S_TAXORGCODE VARCHAR   , NOT NULL       */
    protected String staxorgcode;
    /**
    * 付款行行号 S_PAYBNKNO VARCHAR         */
    protected String spaybnkno;
    /**
    * 交易流水号 S_TRANO VARCHAR   , NOT NULL       */
    protected String strano;
    /**
    * 原报文编号 S_ORIMSGNO VARCHAR   , NOT NULL       */
    protected String sorimsgno;
    /**
    * 税票金额 F_TRAAMT DECIMAL   , NOT NULL       */
    protected BigDecimal ftraamt;
    /**
    * 入库金额 F_AMT DECIMAL   , NOT NULL       */
    protected BigDecimal famt;
    /**
    * 付款人开户行行号 S_PAYEROPNBNKNO VARCHAR         */
    protected String spayeropnbnkno;
    /**
    * 付款开户行名称 S_PAYEROPBKNAME VARCHAR         */
    protected String spayeropbkname;
    /**
    * 缴款单位名称 S_HANDORGNAME VARCHAR   , NOT NULL       */
    protected String shandorgname;
    /**
    * 付款人账号 S_PAYACCT VARCHAR         */
    protected String spayacct;
    /**
    * 税票号码 S_TAXVOUNO VARCHAR   , NOT NULL       */
    protected String staxvouno;
    /**
    * 开票日期 S_BILLDATE VARCHAR         */
    protected String sbilldate;
    /**
    * 纳税人编号 S_TAXPAYCODE VARCHAR   , NOT NULL       */
    protected String staxpaycode;
    /**
    * 纳税人名称 S_TAXPAYNAME VARCHAR   , NOT NULL       */
    protected String staxpayname;
    /**
    * 预算种类 S_BUDGETTYPE VARCHAR   , NOT NULL       */
    protected String sbudgettype;
    /**
    * 调整期标志 S_TRIMFLAG VARCHAR   , NOT NULL       */
    protected String strimflag;
    /**
    * 企业代码 S_ETPCODE VARCHAR         */
    protected String setpcode;
    /**
    * 企业名称 S_ETPNAME VARCHAR         */
    protected String setpname;
    /**
    * 企业类型 S_ETPTYPE VARCHAR         */
    protected String setptype;
    /**
    * 预算科目代码 S_BDGSBTCODE VARCHAR   , NOT NULL       */
    protected String sbdgsbtcode;
    /**
    * 预算科目代码 S_BDGSBTNAME VARCHAR         */
    protected String sbdgsbtname;
    /**
    * 限缴日期 S_LIMIT VARCHAR   , NOT NULL       */
    protected String slimit;
    /**
    * 税种代码 S_TAXTYPECODE VARCHAR         */
    protected String staxtypecode;
    /**
    * 税种名称 S_TAXKINDNAME VARCHAR         */
    protected String staxkindname;
    /**
    * 预算级次 S_BDGLEVEL VARCHAR   , NOT NULL       */
    protected String sbdglevel;
    /**
    * 预算级次名称 S_BDGLEVELNAME VARCHAR         */
    protected String sbdglevelname;
    /**
    * 税款所属日期起 S_TAXSTARTDATE VARCHAR   , NOT NULL       */
    protected String staxstartdate;
    /**
    * 税款所属日期止 S_TAXENDDATE VARCHAR   , NOT NULL       */
    protected String staxenddate;
    /**
    * 辅助标志 S_ASTFLAG VARCHAR         */
    protected String sastflag;
    /**
    * 税款类型 S_TAXTYPE VARCHAR   , NOT NULL       */
    protected String staxtype;
    /**
    * 账务日期 S_ACCT VARCHAR   , NOT NULL       */
    protected String sacct;
    /**
    * 处理状态 S_TRASTATE VARCHAR   , NOT NULL       */
    protected String strastate;
    /**
    * 录入员代码 S_INPUTERID VARCHAR         */
    protected String sinputerid;
    /**
    * 系统更新时间 TS_SYSUPDATE TIMESTAMP   , NOT NULL       */
    protected Timestamp tssysupdate;
    /**
    * 凭证来源 S_VOUCHANNEL VARCHAR         */
    protected String svouchannel;
    /**
    * 勾兑状态 S_STATUS VARCHAR   , NOT NULL       */
    protected String sstatus;
    /**
    * 备注 S_REMARK VARCHAR         */
    protected String sremark;
    /**
    * 备注 S_REMARK1 VARCHAR         */
    protected String sremark1;
    /**
    * 备注 S_REMARK2 VARCHAR         */
    protected String sremark2;
    /**
    * 备注 S_REMARK3 VARCHAR         */
    protected String sremark3;
    /**
    * 备注 S_REMARK4 VARCHAR         */
    protected String sremark4;
    /**
    * 备注 S_REMARK5 VARCHAR         */
    protected String sremark5;


/******************************************************
*
*  getter and setter
*
*******************************************************/


    public String getSseq()
    {
        return sseq;
    }
     /**
     *  主键 Setter S_SEQ, PK , NOT NULL        * */
    public void setSseq(String _sseq) {
        this.sseq = _sseq;
    }


    public String getSfinorgcode()
    {
        return sfinorgcode;
    }
     /**
     *  财政机关代码 Setter S_FINORGCODE , NOT NULL        * */
    public void setSfinorgcode(String _sfinorgcode) {
        this.sfinorgcode = _sfinorgcode;
    }


    public String getSapplydate()
    {
        return sapplydate;
    }
     /**
     *  税票日期 Setter S_APPLYDATE , NOT NULL        * */
    public void setSapplydate(String _sapplydate) {
        this.sapplydate = _sapplydate;
    }


    public String getSintredate()
    {
        return sintredate;
    }
     /**
     *  入库日期 Setter S_INTREDATE        * */
    public void setSintredate(String _sintredate) {
        this.sintredate = _sintredate;
    }


    public String getSblend()
    {
        return sblend;
    }
     /**
     *  勾兑日期 Setter S_BLEND , NOT NULL        * */
    public void setSblend(String _sblend) {
        this.sblend = _sblend;
    }


    public String getSpackno()
    {
        return spackno;
    }
     /**
     *  包流水号 Setter S_PACKNO , NOT NULL        * */
    public void setSpackno(String _spackno) {
        this.spackno = _spackno;
    }


    public String getStrecode()
    {
        return strecode;
    }
     /**
     *  国库代码 Setter S_TRECODE , NOT NULL        * */
    public void setStrecode(String _strecode) {
        this.strecode = _strecode;
    }


    public String getStrename()
    {
        return strename;
    }
     /**
     *  国库名称 Setter S_TRENAME        * */
    public void setStrename(String _strename) {
        this.strename = _strename;
    }


    public String getStaxorgcode()
    {
        return staxorgcode;
    }
     /**
     *  征收机关代码 Setter S_TAXORGCODE , NOT NULL        * */
    public void setStaxorgcode(String _staxorgcode) {
        this.staxorgcode = _staxorgcode;
    }


    public String getSpaybnkno()
    {
        return spaybnkno;
    }
     /**
     *  付款行行号 Setter S_PAYBNKNO        * */
    public void setSpaybnkno(String _spaybnkno) {
        this.spaybnkno = _spaybnkno;
    }


    public String getStrano()
    {
        return strano;
    }
     /**
     *  交易流水号 Setter S_TRANO , NOT NULL        * */
    public void setStrano(String _strano) {
        this.strano = _strano;
    }


    public String getSorimsgno()
    {
        return sorimsgno;
    }
     /**
     *  原报文编号 Setter S_ORIMSGNO , NOT NULL        * */
    public void setSorimsgno(String _sorimsgno) {
        this.sorimsgno = _sorimsgno;
    }


    public BigDecimal getFtraamt()
    {
        return ftraamt;
    }
     /**
     *  税票金额 Setter F_TRAAMT , NOT NULL        * */
    public void setFtraamt(BigDecimal _ftraamt) {
        this.ftraamt = _ftraamt;
    }


    public BigDecimal getFamt()
    {
        return famt;
    }
     /**
     *  入库金额 Setter F_AMT , NOT NULL        * */
    public void setFamt(BigDecimal _famt) {
        this.famt = _famt;
    }


    public String getSpayeropnbnkno()
    {
        return spayeropnbnkno;
    }
     /**
     *  付款人开户行行号 Setter S_PAYEROPNBNKNO        * */
    public void setSpayeropnbnkno(String _spayeropnbnkno) {
        this.spayeropnbnkno = _spayeropnbnkno;
    }


    public String getSpayeropbkname()
    {
        return spayeropbkname;
    }
     /**
     *  付款开户行名称 Setter S_PAYEROPBKNAME        * */
    public void setSpayeropbkname(String _spayeropbkname) {
        this.spayeropbkname = _spayeropbkname;
    }


    public String getShandorgname()
    {
        return shandorgname;
    }
     /**
     *  缴款单位名称 Setter S_HANDORGNAME , NOT NULL        * */
    public void setShandorgname(String _shandorgname) {
        this.shandorgname = _shandorgname;
    }


    public String getSpayacct()
    {
        return spayacct;
    }
     /**
     *  付款人账号 Setter S_PAYACCT        * */
    public void setSpayacct(String _spayacct) {
        this.spayacct = _spayacct;
    }


    public String getStaxvouno()
    {
        return staxvouno;
    }
     /**
     *  税票号码 Setter S_TAXVOUNO , NOT NULL        * */
    public void setStaxvouno(String _staxvouno) {
        this.staxvouno = _staxvouno;
    }


    public String getSbilldate()
    {
        return sbilldate;
    }
     /**
     *  开票日期 Setter S_BILLDATE        * */
    public void setSbilldate(String _sbilldate) {
        this.sbilldate = _sbilldate;
    }


    public String getStaxpaycode()
    {
        return staxpaycode;
    }
     /**
     *  纳税人编号 Setter S_TAXPAYCODE , NOT NULL        * */
    public void setStaxpaycode(String _staxpaycode) {
        this.staxpaycode = _staxpaycode;
    }


    public String getStaxpayname()
    {
        return staxpayname;
    }
     /**
     *  纳税人名称 Setter S_TAXPAYNAME , NOT NULL        * */
    public void setStaxpayname(String _staxpayname) {
        this.staxpayname = _staxpayname;
    }


    public String getSbudgettype()
    {
        return sbudgettype;
    }
     /**
     *  预算种类 Setter S_BUDGETTYPE , NOT NULL        * */
    public void setSbudgettype(String _sbudgettype) {
        this.sbudgettype = _sbudgettype;
    }


    public String getStrimflag()
    {
        return strimflag;
    }
     /**
     *  调整期标志 Setter S_TRIMFLAG , NOT NULL        * */
    public void setStrimflag(String _strimflag) {
        this.strimflag = _strimflag;
    }


    public String getSetpcode()
    {
        return setpcode;
    }
     /**
     *  企业代码 Setter S_ETPCODE        * */
    public void setSetpcode(String _setpcode) {
        this.setpcode = _setpcode;
    }


    public String getSetpname()
    {
        return setpname;
    }
     /**
     *  企业名称 Setter S_ETPNAME        * */
    public void setSetpname(String _setpname) {
        this.setpname = _setpname;
    }


    public String getSetptype()
    {
        return setptype;
    }
     /**
     *  企业类型 Setter S_ETPTYPE        * */
    public void setSetptype(String _setptype) {
        this.setptype = _setptype;
    }


    public String getSbdgsbtcode()
    {
        return sbdgsbtcode;
    }
     /**
     *  预算科目代码 Setter S_BDGSBTCODE , NOT NULL        * */
    public void setSbdgsbtcode(String _sbdgsbtcode) {
        this.sbdgsbtcode = _sbdgsbtcode;
    }


    public String getSbdgsbtname()
    {
        return sbdgsbtname;
    }
     /**
     *  预算科目代码 Setter S_BDGSBTNAME        * */
    public void setSbdgsbtname(String _sbdgsbtname) {
        this.sbdgsbtname = _sbdgsbtname;
    }


    public String getSlimit()
    {
        return slimit;
    }
     /**
     *  限缴日期 Setter S_LIMIT , NOT NULL        * */
    public void setSlimit(String _slimit) {
        this.slimit = _slimit;
    }


    public String getStaxtypecode()
    {
        return staxtypecode;
    }
     /**
     *  税种代码 Setter S_TAXTYPECODE        * */
    public void setStaxtypecode(String _staxtypecode) {
        this.staxtypecode = _staxtypecode;
    }


    public String getStaxkindname()
    {
        return staxkindname;
    }
     /**
     *  税种名称 Setter S_TAXKINDNAME        * */
    public void setStaxkindname(String _staxkindname) {
        this.staxkindname = _staxkindname;
    }


    public String getSbdglevel()
    {
        return sbdglevel;
    }
     /**
     *  预算级次 Setter S_BDGLEVEL , NOT NULL        * */
    public void setSbdglevel(String _sbdglevel) {
        this.sbdglevel = _sbdglevel;
    }


    public String getSbdglevelname()
    {
        return sbdglevelname;
    }
     /**
     *  预算级次名称 Setter S_BDGLEVELNAME        * */
    public void setSbdglevelname(String _sbdglevelname) {
        this.sbdglevelname = _sbdglevelname;
    }


    public String getStaxstartdate()
    {
        return staxstartdate;
    }
     /**
     *  税款所属日期起 Setter S_TAXSTARTDATE , NOT NULL        * */
    public void setStaxstartdate(String _staxstartdate) {
        this.staxstartdate = _staxstartdate;
    }


    public String getStaxenddate()
    {
        return staxenddate;
    }
     /**
     *  税款所属日期止 Setter S_TAXENDDATE , NOT NULL        * */
    public void setStaxenddate(String _staxenddate) {
        this.staxenddate = _staxenddate;
    }


    public String getSastflag()
    {
        return sastflag;
    }
     /**
     *  辅助标志 Setter S_ASTFLAG        * */
    public void setSastflag(String _sastflag) {
        this.sastflag = _sastflag;
    }


    public String getStaxtype()
    {
        return staxtype;
    }
     /**
     *  税款类型 Setter S_TAXTYPE , NOT NULL        * */
    public void setStaxtype(String _staxtype) {
        this.staxtype = _staxtype;
    }


    public String getSacct()
    {
        return sacct;
    }
     /**
     *  账务日期 Setter S_ACCT , NOT NULL        * */
    public void setSacct(String _sacct) {
        this.sacct = _sacct;
    }


    public String getStrastate()
    {
        return strastate;
    }
     /**
     *  处理状态 Setter S_TRASTATE , NOT NULL        * */
    public void setStrastate(String _strastate) {
        this.strastate = _strastate;
    }


    public String getSinputerid()
    {
        return sinputerid;
    }
     /**
     *  录入员代码 Setter S_INPUTERID        * */
    public void setSinputerid(String _sinputerid) {
        this.sinputerid = _sinputerid;
    }


    public Timestamp getTssysupdate()
    {
        return tssysupdate;
    }
     /**
     *  系统更新时间 Setter TS_SYSUPDATE , NOT NULL        * */
    public void setTssysupdate(Timestamp _tssysupdate) {
        this.tssysupdate = _tssysupdate;
    }


    public String getSvouchannel()
    {
        return svouchannel;
    }
     /**
     *  凭证来源 Setter S_VOUCHANNEL        * */
    public void setSvouchannel(String _svouchannel) {
        this.svouchannel = _svouchannel;
    }


    public String getSstatus()
    {
        return sstatus;
    }
     /**
     *  勾兑状态 Setter S_STATUS , NOT NULL        * */
    public void setSstatus(String _sstatus) {
        this.sstatus = _sstatus;
    }


    public String getSremark()
    {
        return sremark;
    }
     /**
     *  备注 Setter S_REMARK        * */
    public void setSremark(String _sremark) {
        this.sremark = _sremark;
    }


    public String getSremark1()
    {
        return sremark1;
    }
     /**
     *  备注 Setter S_REMARK1        * */
    public void setSremark1(String _sremark1) {
        this.sremark1 = _sremark1;
    }


    public String getSremark2()
    {
        return sremark2;
    }
     /**
     *  备注 Setter S_REMARK2        * */
    public void setSremark2(String _sremark2) {
        this.sremark2 = _sremark2;
    }


    public String getSremark3()
    {
        return sremark3;
    }
     /**
     *  备注 Setter S_REMARK3        * */
    public void setSremark3(String _sremark3) {
        this.sremark3 = _sremark3;
    }


    public String getSremark4()
    {
        return sremark4;
    }
     /**
     *  备注 Setter S_REMARK4        * */
    public void setSremark4(String _sremark4) {
        this.sremark4 = _sremark4;
    }


    public String getSremark5()
    {
        return sremark5;
    }
     /**
     *  备注 Setter S_REMARK5        * */
    public void setSremark5(String _sremark5) {
        this.sremark5 = _sremark5;
    }




/******************************************************
*
*  Get Column Name
*
*******************************************************/
    /**
    *  主键 Getter S_SEQ, PK , NOT NULL       * */
    public static String  columnSseq()
    {
        return "S_SEQ";
    }
   
    /**
    *  财政机关代码 Getter S_FINORGCODE , NOT NULL       * */
    public static String  columnSfinorgcode()
    {
        return "S_FINORGCODE";
    }
   
    /**
    *  税票日期 Getter S_APPLYDATE , NOT NULL       * */
    public static String  columnSapplydate()
    {
        return "S_APPLYDATE";
    }
   
    /**
    *  入库日期 Getter S_INTREDATE       * */
    public static String  columnSintredate()
    {
        return "S_INTREDATE";
    }
   
    /**
    *  勾兑日期 Getter S_BLEND , NOT NULL       * */
    public static String  columnSblend()
    {
        return "S_BLEND";
    }
   
    /**
    *  包流水号 Getter S_PACKNO , NOT NULL       * */
    public static String  columnSpackno()
    {
        return "S_PACKNO";
    }
   
    /**
    *  国库代码 Getter S_TRECODE , NOT NULL       * */
    public static String  columnStrecode()
    {
        return "S_TRECODE";
    }
   
    /**
    *  国库名称 Getter S_TRENAME       * */
    public static String  columnStrename()
    {
        return "S_TRENAME";
    }
   
    /**
    *  征收机关代码 Getter S_TAXORGCODE , NOT NULL       * */
    public static String  columnStaxorgcode()
    {
        return "S_TAXORGCODE";
    }
   
    /**
    *  付款行行号 Getter S_PAYBNKNO       * */
    public static String  columnSpaybnkno()
    {
        return "S_PAYBNKNO";
    }
   
    /**
    *  交易流水号 Getter S_TRANO , NOT NULL       * */
    public static String  columnStrano()
    {
        return "S_TRANO";
    }
   
    /**
    *  原报文编号 Getter S_ORIMSGNO , NOT NULL       * */
    public static String  columnSorimsgno()
    {
        return "S_ORIMSGNO";
    }
   
    /**
    *  税票金额 Getter F_TRAAMT , NOT NULL       * */
    public static String  columnFtraamt()
    {
        return "F_TRAAMT";
    }
   
    /**
    *  入库金额 Getter F_AMT , NOT NULL       * */
    public static String  columnFamt()
    {
        return "F_AMT";
    }
   
    /**
    *  付款人开户行行号 Getter S_PAYEROPNBNKNO       * */
    public static String  columnSpayeropnbnkno()
    {
        return "S_PAYEROPNBNKNO";
    }
   
    /**
    *  付款开户行名称 Getter S_PAYEROPBKNAME       * */
    public static String  columnSpayeropbkname()
    {
        return "S_PAYEROPBKNAME";
    }
   
    /**
    *  缴款单位名称 Getter S_HANDORGNAME , NOT NULL       * */
    public static String  columnShandorgname()
    {
        return "S_HANDORGNAME";
    }
   
    /**
    *  付款人账号 Getter S_PAYACCT       * */
    public static String  columnSpayacct()
    {
        return "S_PAYACCT";
    }
   
    /**
    *  税票号码 Getter S_TAXVOUNO , NOT NULL       * */
    public static String  columnStaxvouno()
    {
        return "S_TAXVOUNO";
    }
   
    /**
    *  开票日期 Getter S_BILLDATE       * */
    public static String  columnSbilldate()
    {
        return "S_BILLDATE";
    }
   
    /**
    *  纳税人编号 Getter S_TAXPAYCODE , NOT NULL       * */
    public static String  columnStaxpaycode()
    {
        return "S_TAXPAYCODE";
    }
   
    /**
    *  纳税人名称 Getter S_TAXPAYNAME , NOT NULL       * */
    public static String  columnStaxpayname()
    {
        return "S_TAXPAYNAME";
    }
   
    /**
    *  预算种类 Getter S_BUDGETTYPE , NOT NULL       * */
    public static String  columnSbudgettype()
    {
        return "S_BUDGETTYPE";
    }
   
    /**
    *  调整期标志 Getter S_TRIMFLAG , NOT NULL       * */
    public static String  columnStrimflag()
    {
        return "S_TRIMFLAG";
    }
   
    /**
    *  企业代码 Getter S_ETPCODE       * */
    public static String  columnSetpcode()
    {
        return "S_ETPCODE";
    }
   
    /**
    *  企业名称 Getter S_ETPNAME       * */
    public static String  columnSetpname()
    {
        return "S_ETPNAME";
    }
   
    /**
    *  企业类型 Getter S_ETPTYPE       * */
    public static String  columnSetptype()
    {
        return "S_ETPTYPE";
    }
   
    /**
    *  预算科目代码 Getter S_BDGSBTCODE , NOT NULL       * */
    public static String  columnSbdgsbtcode()
    {
        return "S_BDGSBTCODE";
    }
   
    /**
    *  预算科目代码 Getter S_BDGSBTNAME       * */
    public static String  columnSbdgsbtname()
    {
        return "S_BDGSBTNAME";
    }
   
    /**
    *  限缴日期 Getter S_LIMIT , NOT NULL       * */
    public static String  columnSlimit()
    {
        return "S_LIMIT";
    }
   
    /**
    *  税种代码 Getter S_TAXTYPECODE       * */
    public static String  columnStaxtypecode()
    {
        return "S_TAXTYPECODE";
    }
   
    /**
    *  税种名称 Getter S_TAXKINDNAME       * */
    public static String  columnStaxkindname()
    {
        return "S_TAXKINDNAME";
    }
   
    /**
    *  预算级次 Getter S_BDGLEVEL , NOT NULL       * */
    public static String  columnSbdglevel()
    {
        return "S_BDGLEVEL";
    }
   
    /**
    *  预算级次名称 Getter S_BDGLEVELNAME       * */
    public static String  columnSbdglevelname()
    {
        return "S_BDGLEVELNAME";
    }
   
    /**
    *  税款所属日期起 Getter S_TAXSTARTDATE , NOT NULL       * */
    public static String  columnStaxstartdate()
    {
        return "S_TAXSTARTDATE";
    }
   
    /**
    *  税款所属日期止 Getter S_TAXENDDATE , NOT NULL       * */
    public static String  columnStaxenddate()
    {
        return "S_TAXENDDATE";
    }
   
    /**
    *  辅助标志 Getter S_ASTFLAG       * */
    public static String  columnSastflag()
    {
        return "S_ASTFLAG";
    }
   
    /**
    *  税款类型 Getter S_TAXTYPE , NOT NULL       * */
    public static String  columnStaxtype()
    {
        return "S_TAXTYPE";
    }
   
    /**
    *  账务日期 Getter S_ACCT , NOT NULL       * */
    public static String  columnSacct()
    {
        return "S_ACCT";
    }
   
    /**
    *  处理状态 Getter S_TRASTATE , NOT NULL       * */
    public static String  columnStrastate()
    {
        return "S_TRASTATE";
    }
   
    /**
    *  录入员代码 Getter S_INPUTERID       * */
    public static String  columnSinputerid()
    {
        return "S_INPUTERID";
    }
   
    /**
    *  系统更新时间 Getter TS_SYSUPDATE , NOT NULL       * */
    public static String  columnTssysupdate()
    {
        return "TS_SYSUPDATE";
    }
   
    /**
    *  凭证来源 Getter S_VOUCHANNEL       * */
    public static String  columnSvouchannel()
    {
        return "S_VOUCHANNEL";
    }
   
    /**
    *  勾兑状态 Getter S_STATUS , NOT NULL       * */
    public static String  columnSstatus()
    {
        return "S_STATUS";
    }
   
    /**
    *  备注 Getter S_REMARK       * */
    public static String  columnSremark()
    {
        return "S_REMARK";
    }
   
    /**
    *  备注 Getter S_REMARK1       * */
    public static String  columnSremark1()
    {
        return "S_REMARK1";
    }
   
    /**
    *  备注 Getter S_REMARK2       * */
    public static String  columnSremark2()
    {
        return "S_REMARK2";
    }
   
    /**
    *  备注 Getter S_REMARK3       * */
    public static String  columnSremark3()
    {
        return "S_REMARK3";
    }
   
    /**
    *  备注 Getter S_REMARK4       * */
    public static String  columnSremark4()
    {
        return "S_REMARK4";
    }
   
    /**
    *  备注 Getter S_REMARK5       * */
    public static String  columnSremark5()
    {
        return "S_REMARK5";
    }
   


    /**
    *  Table Name
    */
    public static String tableName(){
        return "HTV_INCOMEONLINE_INCOMEONDETAIL_BLEND";
    }
    
    /**
    *  Columns
    */
    public static String[] columnNames(){
        String[] columnNames = new String[50];        
        columnNames[0]="S_SEQ";
        columnNames[1]="S_FINORGCODE";
        columnNames[2]="S_APPLYDATE";
        columnNames[3]="S_INTREDATE";
        columnNames[4]="S_BLEND";
        columnNames[5]="S_PACKNO";
        columnNames[6]="S_TRECODE";
        columnNames[7]="S_TRENAME";
        columnNames[8]="S_TAXORGCODE";
        columnNames[9]="S_PAYBNKNO";
        columnNames[10]="S_TRANO";
        columnNames[11]="S_ORIMSGNO";
        columnNames[12]="F_TRAAMT";
        columnNames[13]="F_AMT";
        columnNames[14]="S_PAYEROPNBNKNO";
        columnNames[15]="S_PAYEROPBKNAME";
        columnNames[16]="S_HANDORGNAME";
        columnNames[17]="S_PAYACCT";
        columnNames[18]="S_TAXVOUNO";
        columnNames[19]="S_BILLDATE";
        columnNames[20]="S_TAXPAYCODE";
        columnNames[21]="S_TAXPAYNAME";
        columnNames[22]="S_BUDGETTYPE";
        columnNames[23]="S_TRIMFLAG";
        columnNames[24]="S_ETPCODE";
        columnNames[25]="S_ETPNAME";
        columnNames[26]="S_ETPTYPE";
        columnNames[27]="S_BDGSBTCODE";
        columnNames[28]="S_BDGSBTNAME";
        columnNames[29]="S_LIMIT";
        columnNames[30]="S_TAXTYPECODE";
        columnNames[31]="S_TAXKINDNAME";
        columnNames[32]="S_BDGLEVEL";
        columnNames[33]="S_BDGLEVELNAME";
        columnNames[34]="S_TAXSTARTDATE";
        columnNames[35]="S_TAXENDDATE";
        columnNames[36]="S_ASTFLAG";
        columnNames[37]="S_TAXTYPE";
        columnNames[38]="S_ACCT";
        columnNames[39]="S_TRASTATE";
        columnNames[40]="S_INPUTERID";
        columnNames[41]="TS_SYSUPDATE";
        columnNames[42]="S_VOUCHANNEL";
        columnNames[43]="S_STATUS";
        columnNames[44]="S_REMARK";
        columnNames[45]="S_REMARK1";
        columnNames[46]="S_REMARK2";
        columnNames[47]="S_REMARK3";
        columnNames[48]="S_REMARK4";
        columnNames[49]="S_REMARK5";
        return columnNames;     
    }
/*******************************************************
*
*  supplementary methods
*
*****************************************************/


    /* Indicates whether some other object is "equal to" this one. */
    public boolean equals(Object obj)
    {
        if (this == obj)
            return true;

        if (obj == null || !(obj instanceof HtvIncomeonlineIncomeondetailBlendDto))
            return false;

        HtvIncomeonlineIncomeondetailBlendDto bean = (HtvIncomeonlineIncomeondetailBlendDto) obj;


      //compare field sseq
      if((this.sseq==null && bean.sseq!=null) || (this.sseq!=null && bean.sseq==null))
          return false;
        else if(this.sseq==null && bean.sseq==null){
        }
        else{
          if(!bean.sseq.equals(this.sseq))
               return false;
     }
      //compare field sfinorgcode
      if((this.sfinorgcode==null && bean.sfinorgcode!=null) || (this.sfinorgcode!=null && bean.sfinorgcode==null))
          return false;
        else if(this.sfinorgcode==null && bean.sfinorgcode==null){
        }
        else{
          if(!bean.sfinorgcode.equals(this.sfinorgcode))
               return false;
     }
      //compare field sapplydate
      if((this.sapplydate==null && bean.sapplydate!=null) || (this.sapplydate!=null && bean.sapplydate==null))
          return false;
        else if(this.sapplydate==null && bean.sapplydate==null){
        }
        else{
          if(!bean.sapplydate.equals(this.sapplydate))
               return false;
     }
      //compare field sintredate
      if((this.sintredate==null && bean.sintredate!=null) || (this.sintredate!=null && bean.sintredate==null))
          return false;
        else if(this.sintredate==null && bean.sintredate==null){
        }
        else{
          if(!bean.sintredate.equals(this.sintredate))
               return false;
     }
      //compare field sblend
      if((this.sblend==null && bean.sblend!=null) || (this.sblend!=null && bean.sblend==null))
          return false;
        else if(this.sblend==null && bean.sblend==null){
        }
        else{
          if(!bean.sblend.equals(this.sblend))
               return false;
     }
      //compare field spackno
      if((this.spackno==null && bean.spackno!=null) || (this.spackno!=null && bean.spackno==null))
          return false;
        else if(this.spackno==null && bean.spackno==null){
        }
        else{
          if(!bean.spackno.equals(this.spackno))
               return false;
     }
      //compare field strecode
      if((this.strecode==null && bean.strecode!=null) || (this.strecode!=null && bean.strecode==null))
          return false;
        else if(this.strecode==null && bean.strecode==null){
        }
        else{
          if(!bean.strecode.equals(this.strecode))
               return false;
     }
      //compare field strename
      if((this.strename==null && bean.strename!=null) || (this.strename!=null && bean.strename==null))
          return false;
        else if(this.strename==null && bean.strename==null){
        }
        else{
          if(!bean.strename.equals(this.strename))
               return false;
     }
      //compare field staxorgcode
      if((this.staxorgcode==null && bean.staxorgcode!=null) || (this.staxorgcode!=null && bean.staxorgcode==null))
          return false;
        else if(this.staxorgcode==null && bean.staxorgcode==null){
        }
        else{
          if(!bean.staxorgcode.equals(this.staxorgcode))
               return false;
     }
      //compare field spaybnkno
      if((this.spaybnkno==null && bean.spaybnkno!=null) || (this.spaybnkno!=null && bean.spaybnkno==null))
          return false;
        else if(this.spaybnkno==null && bean.spaybnkno==null){
        }
        else{
          if(!bean.spaybnkno.equals(this.spaybnkno))
               return false;
     }
      //compare field strano
      if((this.strano==null && bean.strano!=null) || (this.strano!=null && bean.strano==null))
          return false;
        else if(this.strano==null && bean.strano==null){
        }
        else{
          if(!bean.strano.equals(this.strano))
               return false;
     }
      //compare field sorimsgno
      if((this.sorimsgno==null && bean.sorimsgno!=null) || (this.sorimsgno!=null && bean.sorimsgno==null))
          return false;
        else if(this.sorimsgno==null && bean.sorimsgno==null){
        }
        else{
          if(!bean.sorimsgno.equals(this.sorimsgno))
               return false;
     }
      //compare field ftraamt
      if((this.ftraamt==null && bean.ftraamt!=null) || (this.ftraamt!=null && bean.ftraamt==null))
          return false;
        else if(this.ftraamt==null && bean.ftraamt==null){
        }
        else{
          if(!bean.ftraamt.equals(this.ftraamt))
               return false;
     }
      //compare field famt
      if((this.famt==null && bean.famt!=null) || (this.famt!=null && bean.famt==null))
          return false;
        else if(this.famt==null && bean.famt==null){
        }
        else{
          if(!bean.famt.equals(this.famt))
               return false;
     }
      //compare field spayeropnbnkno
      if((this.spayeropnbnkno==null && bean.spayeropnbnkno!=null) || (this.spayeropnbnkno!=null && bean.spayeropnbnkno==null))
          return false;
        else if(this.spayeropnbnkno==null && bean.spayeropnbnkno==null){
        }
        else{
          if(!bean.spayeropnbnkno.equals(this.spayeropnbnkno))
               return false;
     }
      //compare field spayeropbkname
      if((this.spayeropbkname==null && bean.spayeropbkname!=null) || (this.spayeropbkname!=null && bean.spayeropbkname==null))
          return false;
        else if(this.spayeropbkname==null && bean.spayeropbkname==null){
        }
        else{
          if(!bean.spayeropbkname.equals(this.spayeropbkname))
               return false;
     }
      //compare field shandorgname
      if((this.shandorgname==null && bean.shandorgname!=null) || (this.shandorgname!=null && bean.shandorgname==null))
          return false;
        else if(this.shandorgname==null && bean.shandorgname==null){
        }
        else{
          if(!bean.shandorgname.equals(this.shandorgname))
               return false;
     }
      //compare field spayacct
      if((this.spayacct==null && bean.spayacct!=null) || (this.spayacct!=null && bean.spayacct==null))
          return false;
        else if(this.spayacct==null && bean.spayacct==null){
        }
        else{
          if(!bean.spayacct.equals(this.spayacct))
               return false;
     }
      //compare field staxvouno
      if((this.staxvouno==null && bean.staxvouno!=null) || (this.staxvouno!=null && bean.staxvouno==null))
          return false;
        else if(this.staxvouno==null && bean.staxvouno==null){
        }
        else{
          if(!bean.staxvouno.equals(this.staxvouno))
               return false;
     }
      //compare field sbilldate
      if((this.sbilldate==null && bean.sbilldate!=null) || (this.sbilldate!=null && bean.sbilldate==null))
          return false;
        else if(this.sbilldate==null && bean.sbilldate==null){
        }
        else{
          if(!bean.sbilldate.equals(this.sbilldate))
               return false;
     }
      //compare field staxpaycode
      if((this.staxpaycode==null && bean.staxpaycode!=null) || (this.staxpaycode!=null && bean.staxpaycode==null))
          return false;
        else if(this.staxpaycode==null && bean.staxpaycode==null){
        }
        else{
          if(!bean.staxpaycode.equals(this.staxpaycode))
               return false;
     }
      //compare field staxpayname
      if((this.staxpayname==null && bean.staxpayname!=null) || (this.staxpayname!=null && bean.staxpayname==null))
          return false;
        else if(this.staxpayname==null && bean.staxpayname==null){
        }
        else{
          if(!bean.staxpayname.equals(this.staxpayname))
               return false;
     }
      //compare field sbudgettype
      if((this.sbudgettype==null && bean.sbudgettype!=null) || (this.sbudgettype!=null && bean.sbudgettype==null))
          return false;
        else if(this.sbudgettype==null && bean.sbudgettype==null){
        }
        else{
          if(!bean.sbudgettype.equals(this.sbudgettype))
               return false;
     }
      //compare field strimflag
      if((this.strimflag==null && bean.strimflag!=null) || (this.strimflag!=null && bean.strimflag==null))
          return false;
        else if(this.strimflag==null && bean.strimflag==null){
        }
        else{
          if(!bean.strimflag.equals(this.strimflag))
               return false;
     }
      //compare field setpcode
      if((this.setpcode==null && bean.setpcode!=null) || (this.setpcode!=null && bean.setpcode==null))
          return false;
        else if(this.setpcode==null && bean.setpcode==null){
        }
        else{
          if(!bean.setpcode.equals(this.setpcode))
               return false;
     }
      //compare field setpname
      if((this.setpname==null && bean.setpname!=null) || (this.setpname!=null && bean.setpname==null))
          return false;
        else if(this.setpname==null && bean.setpname==null){
        }
        else{
          if(!bean.setpname.equals(this.setpname))
               return false;
     }
      //compare field setptype
      if((this.setptype==null && bean.setptype!=null) || (this.setptype!=null && bean.setptype==null))
          return false;
        else if(this.setptype==null && bean.setptype==null){
        }
        else{
          if(!bean.setptype.equals(this.setptype))
               return false;
     }
      //compare field sbdgsbtcode
      if((this.sbdgsbtcode==null && bean.sbdgsbtcode!=null) || (this.sbdgsbtcode!=null && bean.sbdgsbtcode==null))
          return false;
        else if(this.sbdgsbtcode==null && bean.sbdgsbtcode==null){
        }
        else{
          if(!bean.sbdgsbtcode.equals(this.sbdgsbtcode))
               return false;
     }
      //compare field sbdgsbtname
      if((this.sbdgsbtname==null && bean.sbdgsbtname!=null) || (this.sbdgsbtname!=null && bean.sbdgsbtname==null))
          return false;
        else if(this.sbdgsbtname==null && bean.sbdgsbtname==null){
        }
        else{
          if(!bean.sbdgsbtname.equals(this.sbdgsbtname))
               return false;
     }
      //compare field slimit
      if((this.slimit==null && bean.slimit!=null) || (this.slimit!=null && bean.slimit==null))
          return false;
        else if(this.slimit==null && bean.slimit==null){
        }
        else{
          if(!bean.slimit.equals(this.slimit))
               return false;
     }
      //compare field staxtypecode
      if((this.staxtypecode==null && bean.staxtypecode!=null) || (this.staxtypecode!=null && bean.staxtypecode==null))
          return false;
        else if(this.staxtypecode==null && bean.staxtypecode==null){
        }
        else{
          if(!bean.staxtypecode.equals(this.staxtypecode))
               return false;
     }
      //compare field staxkindname
      if((this.staxkindname==null && bean.staxkindname!=null) || (this.staxkindname!=null && bean.staxkindname==null))
          return false;
        else if(this.staxkindname==null && bean.staxkindname==null){
        }
        else{
          if(!bean.staxkindname.equals(this.staxkindname))
               return false;
     }
      //compare field sbdglevel
      if((this.sbdglevel==null && bean.sbdglevel!=null) || (this.sbdglevel!=null && bean.sbdglevel==null))
          return false;
        else if(this.sbdglevel==null && bean.sbdglevel==null){
        }
        else{
          if(!bean.sbdglevel.equals(this.sbdglevel))
               return false;
     }
      //compare field sbdglevelname
      if((this.sbdglevelname==null && bean.sbdglevelname!=null) || (this.sbdglevelname!=null && bean.sbdglevelname==null))
          return false;
        else if(this.sbdglevelname==null && bean.sbdglevelname==null){
        }
        else{
          if(!bean.sbdglevelname.equals(this.sbdglevelname))
               return false;
     }
      //compare field staxstartdate
      if((this.staxstartdate==null && bean.staxstartdate!=null) || (this.staxstartdate!=null && bean.staxstartdate==null))
          return false;
        else if(this.staxstartdate==null && bean.staxstartdate==null){
        }
        else{
          if(!bean.staxstartdate.equals(this.staxstartdate))
               return false;
     }
      //compare field staxenddate
      if((this.staxenddate==null && bean.staxenddate!=null) || (this.staxenddate!=null && bean.staxenddate==null))
          return false;
        else if(this.staxenddate==null && bean.staxenddate==null){
        }
        else{
          if(!bean.staxenddate.equals(this.staxenddate))
               return false;
     }
      //compare field sastflag
      if((this.sastflag==null && bean.sastflag!=null) || (this.sastflag!=null && bean.sastflag==null))
          return false;
        else if(this.sastflag==null && bean.sastflag==null){
        }
        else{
          if(!bean.sastflag.equals(this.sastflag))
               return false;
     }
      //compare field staxtype
      if((this.staxtype==null && bean.staxtype!=null) || (this.staxtype!=null && bean.staxtype==null))
          return false;
        else if(this.staxtype==null && bean.staxtype==null){
        }
        else{
          if(!bean.staxtype.equals(this.staxtype))
               return false;
     }
      //compare field sacct
      if((this.sacct==null && bean.sacct!=null) || (this.sacct!=null && bean.sacct==null))
          return false;
        else if(this.sacct==null && bean.sacct==null){
        }
        else{
          if(!bean.sacct.equals(this.sacct))
               return false;
     }
      //compare field strastate
      if((this.strastate==null && bean.strastate!=null) || (this.strastate!=null && bean.strastate==null))
          return false;
        else if(this.strastate==null && bean.strastate==null){
        }
        else{
          if(!bean.strastate.equals(this.strastate))
               return false;
     }
      //compare field sinputerid
      if((this.sinputerid==null && bean.sinputerid!=null) || (this.sinputerid!=null && bean.sinputerid==null))
          return false;
        else if(this.sinputerid==null && bean.sinputerid==null){
        }
        else{
          if(!bean.sinputerid.equals(this.sinputerid))
               return false;
     }
      //compare field tssysupdate
      if((this.tssysupdate==null && bean.tssysupdate!=null) || (this.tssysupdate!=null && bean.tssysupdate==null))
          return false;
        else if(this.tssysupdate==null && bean.tssysupdate==null){
        }
        else{
          if(!bean.tssysupdate.equals(this.tssysupdate))
               return false;
     }
      //compare field svouchannel
      if((this.svouchannel==null && bean.svouchannel!=null) || (this.svouchannel!=null && bean.svouchannel==null))
          return false;
        else if(this.svouchannel==null && bean.svouchannel==null){
        }
        else{
          if(!bean.svouchannel.equals(this.svouchannel))
               return false;
     }
      //compare field sstatus
      if((this.sstatus==null && bean.sstatus!=null) || (this.sstatus!=null && bean.sstatus==null))
          return false;
        else if(this.sstatus==null && bean.sstatus==null){
        }
        else{
          if(!bean.sstatus.equals(this.sstatus))
               return false;
     }
      //compare field sremark
      if((this.sremark==null && bean.sremark!=null) || (this.sremark!=null && bean.sremark==null))
          return false;
        else if(this.sremark==null && bean.sremark==null){
        }
        else{
          if(!bean.sremark.equals(this.sremark))
               return false;
     }
      //compare field sremark1
      if((this.sremark1==null && bean.sremark1!=null) || (this.sremark1!=null && bean.sremark1==null))
          return false;
        else if(this.sremark1==null && bean.sremark1==null){
        }
        else{
          if(!bean.sremark1.equals(this.sremark1))
               return false;
     }
      //compare field sremark2
      if((this.sremark2==null && bean.sremark2!=null) || (this.sremark2!=null && bean.sremark2==null))
          return false;
        else if(this.sremark2==null && bean.sremark2==null){
        }
        else{
          if(!bean.sremark2.equals(this.sremark2))
               return false;
     }
      //compare field sremark3
      if((this.sremark3==null && bean.sremark3!=null) || (this.sremark3!=null && bean.sremark3==null))
          return false;
        else if(this.sremark3==null && bean.sremark3==null){
        }
        else{
          if(!bean.sremark3.equals(this.sremark3))
               return false;
     }
      //compare field sremark4
      if((this.sremark4==null && bean.sremark4!=null) || (this.sremark4!=null && bean.sremark4==null))
          return false;
        else if(this.sremark4==null && bean.sremark4==null){
        }
        else{
          if(!bean.sremark4.equals(this.sremark4))
               return false;
     }
      //compare field sremark5
      if((this.sremark5==null && bean.sremark5!=null) || (this.sremark5!=null && bean.sremark5==null))
          return false;
        else if(this.sremark5==null && bean.sremark5==null){
        }
        else{
          if(!bean.sremark5.equals(this.sremark5))
               return false;
     }



        return true;
    }

    /* return hashCode ,if A.equals(B) that A.hashCode()==B.hashCode() */
	public int hashCode()
	{
  
		int _hash_ = 1;
		
        if(this.sseq!=null)
          _hash_ = _hash_ * 31+ this.sseq.hashCode() ;
        if(this.sfinorgcode!=null)
          _hash_ = _hash_ * 31+ this.sfinorgcode.hashCode() ;
        if(this.sapplydate!=null)
          _hash_ = _hash_ * 31+ this.sapplydate.hashCode() ;
        if(this.sintredate!=null)
          _hash_ = _hash_ * 31+ this.sintredate.hashCode() ;
        if(this.sblend!=null)
          _hash_ = _hash_ * 31+ this.sblend.hashCode() ;
        if(this.spackno!=null)
          _hash_ = _hash_ * 31+ this.spackno.hashCode() ;
        if(this.strecode!=null)
          _hash_ = _hash_ * 31+ this.strecode.hashCode() ;
        if(this.strename!=null)
          _hash_ = _hash_ * 31+ this.strename.hashCode() ;
        if(this.staxorgcode!=null)
          _hash_ = _hash_ * 31+ this.staxorgcode.hashCode() ;
        if(this.spaybnkno!=null)
          _hash_ = _hash_ * 31+ this.spaybnkno.hashCode() ;
        if(this.strano!=null)
          _hash_ = _hash_ * 31+ this.strano.hashCode() ;
        if(this.sorimsgno!=null)
          _hash_ = _hash_ * 31+ this.sorimsgno.hashCode() ;
        if(this.ftraamt!=null)
          _hash_ = _hash_ * 31+ this.ftraamt.hashCode() ;
        if(this.famt!=null)
          _hash_ = _hash_ * 31+ this.famt.hashCode() ;
        if(this.spayeropnbnkno!=null)
          _hash_ = _hash_ * 31+ this.spayeropnbnkno.hashCode() ;
        if(this.spayeropbkname!=null)
          _hash_ = _hash_ * 31+ this.spayeropbkname.hashCode() ;
        if(this.shandorgname!=null)
          _hash_ = _hash_ * 31+ this.shandorgname.hashCode() ;
        if(this.spayacct!=null)
          _hash_ = _hash_ * 31+ this.spayacct.hashCode() ;
        if(this.staxvouno!=null)
          _hash_ = _hash_ * 31+ this.staxvouno.hashCode() ;
        if(this.sbilldate!=null)
          _hash_ = _hash_ * 31+ this.sbilldate.hashCode() ;
        if(this.staxpaycode!=null)
          _hash_ = _hash_ * 31+ this.staxpaycode.hashCode() ;
        if(this.staxpayname!=null)
          _hash_ = _hash_ * 31+ this.staxpayname.hashCode() ;
        if(this.sbudgettype!=null)
          _hash_ = _hash_ * 31+ this.sbudgettype.hashCode() ;
        if(this.strimflag!=null)
          _hash_ = _hash_ * 31+ this.strimflag.hashCode() ;
        if(this.setpcode!=null)
          _hash_ = _hash_ * 31+ this.setpcode.hashCode() ;
        if(this.setpname!=null)
          _hash_ = _hash_ * 31+ this.setpname.hashCode() ;
        if(this.setptype!=null)
          _hash_ = _hash_ * 31+ this.setptype.hashCode() ;
        if(this.sbdgsbtcode!=null)
          _hash_ = _hash_ * 31+ this.sbdgsbtcode.hashCode() ;
        if(this.sbdgsbtname!=null)
          _hash_ = _hash_ * 31+ this.sbdgsbtname.hashCode() ;
        if(this.slimit!=null)
          _hash_ = _hash_ * 31+ this.slimit.hashCode() ;
        if(this.staxtypecode!=null)
          _hash_ = _hash_ * 31+ this.staxtypecode.hashCode() ;
        if(this.staxkindname!=null)
          _hash_ = _hash_ * 31+ this.staxkindname.hashCode() ;
        if(this.sbdglevel!=null)
          _hash_ = _hash_ * 31+ this.sbdglevel.hashCode() ;
        if(this.sbdglevelname!=null)
          _hash_ = _hash_ * 31+ this.sbdglevelname.hashCode() ;
        if(this.staxstartdate!=null)
          _hash_ = _hash_ * 31+ this.staxstartdate.hashCode() ;
        if(this.staxenddate!=null)
          _hash_ = _hash_ * 31+ this.staxenddate.hashCode() ;
        if(this.sastflag!=null)
          _hash_ = _hash_ * 31+ this.sastflag.hashCode() ;
        if(this.staxtype!=null)
          _hash_ = _hash_ * 31+ this.staxtype.hashCode() ;
        if(this.sacct!=null)
          _hash_ = _hash_ * 31+ this.sacct.hashCode() ;
        if(this.strastate!=null)
          _hash_ = _hash_ * 31+ this.strastate.hashCode() ;
        if(this.sinputerid!=null)
          _hash_ = _hash_ * 31+ this.sinputerid.hashCode() ;
        if(this.tssysupdate!=null)
          _hash_ = _hash_ * 31+ this.tssysupdate.hashCode() ;
        if(this.svouchannel!=null)
          _hash_ = _hash_ * 31+ this.svouchannel.hashCode() ;
        if(this.sstatus!=null)
          _hash_ = _hash_ * 31+ this.sstatus.hashCode() ;
        if(this.sremark!=null)
          _hash_ = _hash_ * 31+ this.sremark.hashCode() ;
        if(this.sremark1!=null)
          _hash_ = _hash_ * 31+ this.sremark1.hashCode() ;
        if(this.sremark2!=null)
          _hash_ = _hash_ * 31+ this.sremark2.hashCode() ;
        if(this.sremark3!=null)
          _hash_ = _hash_ * 31+ this.sremark3.hashCode() ;
        if(this.sremark4!=null)
          _hash_ = _hash_ * 31+ this.sremark4.hashCode() ;
        if(this.sremark5!=null)
          _hash_ = _hash_ * 31+ this.sremark5.hashCode() ;

		return _hash_;
	
	}

     /* Creates and returns a copy of this object. */
    public Object clone()
    {
        HtvIncomeonlineIncomeondetailBlendDto bean = new HtvIncomeonlineIncomeondetailBlendDto();

          bean.sseq = this.sseq;

          if (this.sfinorgcode != null)
            bean.sfinorgcode = new String(this.sfinorgcode);
          if (this.sapplydate != null)
            bean.sapplydate = new String(this.sapplydate);
          if (this.sintredate != null)
            bean.sintredate = new String(this.sintredate);
          if (this.sblend != null)
            bean.sblend = new String(this.sblend);
          if (this.spackno != null)
            bean.spackno = new String(this.spackno);
          if (this.strecode != null)
            bean.strecode = new String(this.strecode);
          if (this.strename != null)
            bean.strename = new String(this.strename);
          if (this.staxorgcode != null)
            bean.staxorgcode = new String(this.staxorgcode);
          if (this.spaybnkno != null)
            bean.spaybnkno = new String(this.spaybnkno);
          if (this.strano != null)
            bean.strano = new String(this.strano);
          if (this.sorimsgno != null)
            bean.sorimsgno = new String(this.sorimsgno);
          if (this.ftraamt != null)
            bean.ftraamt = new BigDecimal(this.ftraamt.toString());
          if (this.famt != null)
            bean.famt = new BigDecimal(this.famt.toString());
          if (this.spayeropnbnkno != null)
            bean.spayeropnbnkno = new String(this.spayeropnbnkno);
          if (this.spayeropbkname != null)
            bean.spayeropbkname = new String(this.spayeropbkname);
          if (this.shandorgname != null)
            bean.shandorgname = new String(this.shandorgname);
          if (this.spayacct != null)
            bean.spayacct = new String(this.spayacct);
          if (this.staxvouno != null)
            bean.staxvouno = new String(this.staxvouno);
          if (this.sbilldate != null)
            bean.sbilldate = new String(this.sbilldate);
          if (this.staxpaycode != null)
            bean.staxpaycode = new String(this.staxpaycode);
          if (this.staxpayname != null)
            bean.staxpayname = new String(this.staxpayname);
          if (this.sbudgettype != null)
            bean.sbudgettype = new String(this.sbudgettype);
          if (this.strimflag != null)
            bean.strimflag = new String(this.strimflag);
          if (this.setpcode != null)
            bean.setpcode = new String(this.setpcode);
          if (this.setpname != null)
            bean.setpname = new String(this.setpname);
          if (this.setptype != null)
            bean.setptype = new String(this.setptype);
          if (this.sbdgsbtcode != null)
            bean.sbdgsbtcode = new String(this.sbdgsbtcode);
          if (this.sbdgsbtname != null)
            bean.sbdgsbtname = new String(this.sbdgsbtname);
          if (this.slimit != null)
            bean.slimit = new String(this.slimit);
          if (this.staxtypecode != null)
            bean.staxtypecode = new String(this.staxtypecode);
          if (this.staxkindname != null)
            bean.staxkindname = new String(this.staxkindname);
          if (this.sbdglevel != null)
            bean.sbdglevel = new String(this.sbdglevel);
          if (this.sbdglevelname != null)
            bean.sbdglevelname = new String(this.sbdglevelname);
          if (this.staxstartdate != null)
            bean.staxstartdate = new String(this.staxstartdate);
          if (this.staxenddate != null)
            bean.staxenddate = new String(this.staxenddate);
          if (this.sastflag != null)
            bean.sastflag = new String(this.sastflag);
          if (this.staxtype != null)
            bean.staxtype = new String(this.staxtype);
          if (this.sacct != null)
            bean.sacct = new String(this.sacct);
          if (this.strastate != null)
            bean.strastate = new String(this.strastate);
          if (this.sinputerid != null)
            bean.sinputerid = new String(this.sinputerid);
          if (this.tssysupdate != null)
            bean.tssysupdate = (Timestamp) this.tssysupdate.clone();
          if (this.svouchannel != null)
            bean.svouchannel = new String(this.svouchannel);
          if (this.sstatus != null)
            bean.sstatus = new String(this.sstatus);
          if (this.sremark != null)
            bean.sremark = new String(this.sremark);
          if (this.sremark1 != null)
            bean.sremark1 = new String(this.sremark1);
          if (this.sremark2 != null)
            bean.sremark2 = new String(this.sremark2);
          if (this.sremark3 != null)
            bean.sremark3 = new String(this.sremark3);
          if (this.sremark4 != null)
            bean.sremark4 = new String(this.sremark4);
          if (this.sremark5 != null)
            bean.sremark5 = new String(this.sremark5);
  
        return bean;
    }


   /* Returns a string representation of the object. */
    public String toString()
    {
        String sep = "; ";
        StringBuffer sb = new StringBuffer();
        sb.append("HtvIncomeonlineIncomeondetailBlendDto").append(sep);
        sb.append("[sseq]").append(" = ").append(sseq).append(sep);
        sb.append("[sfinorgcode]").append(" = ").append(sfinorgcode).append(sep);
        sb.append("[sapplydate]").append(" = ").append(sapplydate).append(sep);
        sb.append("[sintredate]").append(" = ").append(sintredate).append(sep);
        sb.append("[sblend]").append(" = ").append(sblend).append(sep);
        sb.append("[spackno]").append(" = ").append(spackno).append(sep);
        sb.append("[strecode]").append(" = ").append(strecode).append(sep);
        sb.append("[strename]").append(" = ").append(strename).append(sep);
        sb.append("[staxorgcode]").append(" = ").append(staxorgcode).append(sep);
        sb.append("[spaybnkno]").append(" = ").append(spaybnkno).append(sep);
        sb.append("[strano]").append(" = ").append(strano).append(sep);
        sb.append("[sorimsgno]").append(" = ").append(sorimsgno).append(sep);
        sb.append("[ftraamt]").append(" = ").append(ftraamt).append(sep);
        sb.append("[famt]").append(" = ").append(famt).append(sep);
        sb.append("[spayeropnbnkno]").append(" = ").append(spayeropnbnkno).append(sep);
        sb.append("[spayeropbkname]").append(" = ").append(spayeropbkname).append(sep);
        sb.append("[shandorgname]").append(" = ").append(shandorgname).append(sep);
        sb.append("[spayacct]").append(" = ").append(spayacct).append(sep);
        sb.append("[staxvouno]").append(" = ").append(staxvouno).append(sep);
        sb.append("[sbilldate]").append(" = ").append(sbilldate).append(sep);
        sb.append("[staxpaycode]").append(" = ").append(staxpaycode).append(sep);
        sb.append("[staxpayname]").append(" = ").append(staxpayname).append(sep);
        sb.append("[sbudgettype]").append(" = ").append(sbudgettype).append(sep);
        sb.append("[strimflag]").append(" = ").append(strimflag).append(sep);
        sb.append("[setpcode]").append(" = ").append(setpcode).append(sep);
        sb.append("[setpname]").append(" = ").append(setpname).append(sep);
        sb.append("[setptype]").append(" = ").append(setptype).append(sep);
        sb.append("[sbdgsbtcode]").append(" = ").append(sbdgsbtcode).append(sep);
        sb.append("[sbdgsbtname]").append(" = ").append(sbdgsbtname).append(sep);
        sb.append("[slimit]").append(" = ").append(slimit).append(sep);
        sb.append("[staxtypecode]").append(" = ").append(staxtypecode).append(sep);
        sb.append("[staxkindname]").append(" = ").append(staxkindname).append(sep);
        sb.append("[sbdglevel]").append(" = ").append(sbdglevel).append(sep);
        sb.append("[sbdglevelname]").append(" = ").append(sbdglevelname).append(sep);
        sb.append("[staxstartdate]").append(" = ").append(staxstartdate).append(sep);
        sb.append("[staxenddate]").append(" = ").append(staxenddate).append(sep);
        sb.append("[sastflag]").append(" = ").append(sastflag).append(sep);
        sb.append("[staxtype]").append(" = ").append(staxtype).append(sep);
        sb.append("[sacct]").append(" = ").append(sacct).append(sep);
        sb.append("[strastate]").append(" = ").append(strastate).append(sep);
        sb.append("[sinputerid]").append(" = ").append(sinputerid).append(sep);
        sb.append("[tssysupdate]").append(" = ").append(tssysupdate).append(sep);
        sb.append("[svouchannel]").append(" = ").append(svouchannel).append(sep);
        sb.append("[sstatus]").append(" = ").append(sstatus).append(sep);
        sb.append("[sremark]").append(" = ").append(sremark).append(sep);
        sb.append("[sremark1]").append(" = ").append(sremark1).append(sep);
        sb.append("[sremark2]").append(" = ").append(sremark2).append(sep);
        sb.append("[sremark3]").append(" = ").append(sremark3).append(sep);
        sb.append("[sremark4]").append(" = ").append(sremark4).append(sep);
        sb.append("[sremark5]").append(" = ").append(sremark5).append(sep);
            return sb.toString();
    }

  /* Returns value valid checking String , NULL is Valid*/
   public String  checkValid()
  {
  	StringBuffer sb = new StringBuffer() ;

    //check field S_SEQ
      if (this.getSseq()==null)
             sb.append("S_SEQ主键不能为空; ");
      if (this.getSseq()!=null)
             if (this.getSseq().getBytes().length > 20)
                sb.append("S_SEQ主键宽度不能超过 "+20+"个字符; ");
    
    //check field S_FINORGCODE
      if (this.getSfinorgcode()==null)
             sb.append("S_FINORGCODE财政机关代码不能为空; ");
      if (this.getSfinorgcode()!=null)
             if (this.getSfinorgcode().getBytes().length > 12)
                sb.append("S_FINORGCODE财政机关代码宽度不能超过 "+12+"个字符; ");
    
    //check field S_APPLYDATE
      if (this.getSapplydate()==null)
             sb.append("S_APPLYDATE税票日期不能为空; ");
      if (this.getSapplydate()!=null)
             if (this.getSapplydate().getBytes().length > 8)
                sb.append("S_APPLYDATE税票日期宽度不能超过 "+8+"个字符; ");
    
    //check field S_INTREDATE
      if (this.getSintredate()!=null)
             if (this.getSintredate().getBytes().length > 8)
                sb.append("S_INTREDATE入库日期宽度不能超过 "+8+"个字符; ");
    
    //check field S_BLEND
      if (this.getSblend()==null)
             sb.append("S_BLEND勾兑日期不能为空; ");
      if (this.getSblend()!=null)
             if (this.getSblend().getBytes().length > 8)
                sb.append("S_BLEND勾兑日期宽度不能超过 "+8+"个字符; ");
    
    //check field S_PACKNO
      if (this.getSpackno()==null)
             sb.append("S_PACKNO包流水号不能为空; ");
      if (this.getSpackno()!=null)
             if (this.getSpackno().getBytes().length > 8)
                sb.append("S_PACKNO包流水号宽度不能超过 "+8+"个字符; ");
    
    //check field S_TRECODE
      if (this.getStrecode()==null)
             sb.append("S_TRECODE国库代码不能为空; ");
      if (this.getStrecode()!=null)
             if (this.getStrecode().getBytes().length > 10)
                sb.append("S_TRECODE国库代码宽度不能超过 "+10+"个字符; ");
    
    //check field S_TRENAME
      if (this.getStrename()!=null)
             if (this.getStrename().getBytes().length > 100)
                sb.append("S_TRENAME国库名称宽度不能超过 "+100+"个字符; ");
    
    //check field S_TAXORGCODE
      if (this.getStaxorgcode()==null)
             sb.append("S_TAXORGCODE征收机关代码不能为空; ");
      if (this.getStaxorgcode()!=null)
             if (this.getStaxorgcode().getBytes().length > 12)
                sb.append("S_TAXORGCODE征收机关代码宽度不能超过 "+12+"个字符; ");
    
    //check field S_PAYBNKNO
      if (this.getSpaybnkno()!=null)
             if (this.getSpaybnkno().getBytes().length > 12)
                sb.append("S_PAYBNKNO付款行行号宽度不能超过 "+12+"个字符; ");
    
    //check field S_TRANO
      if (this.getStrano()==null)
             sb.append("S_TRANO交易流水号不能为空; ");
      if (this.getStrano()!=null)
             if (this.getStrano().getBytes().length > 8)
                sb.append("S_TRANO交易流水号宽度不能超过 "+8+"个字符; ");
    
    //check field S_ORIMSGNO
      if (this.getSorimsgno()==null)
             sb.append("S_ORIMSGNO原报文编号不能为空; ");
      if (this.getSorimsgno()!=null)
             if (this.getSorimsgno().getBytes().length > 4)
                sb.append("S_ORIMSGNO原报文编号宽度不能超过 "+4+"个字符; ");
    
    //check field F_TRAAMT
      if (this.getFtraamt()==null)
             sb.append("F_TRAAMT税票金额不能为空; ");
      
    //check field F_AMT
      if (this.getFamt()==null)
             sb.append("F_AMT入库金额不能为空; ");
      
    //check field S_PAYEROPNBNKNO
      if (this.getSpayeropnbnkno()!=null)
             if (this.getSpayeropnbnkno().getBytes().length > 12)
                sb.append("S_PAYEROPNBNKNO付款人开户行行号宽度不能超过 "+12+"个字符; ");
    
    //check field S_PAYEROPBKNAME
      if (this.getSpayeropbkname()!=null)
             if (this.getSpayeropbkname().getBytes().length > 60)
                sb.append("S_PAYEROPBKNAME付款开户行名称宽度不能超过 "+60+"个字符; ");
    
    //check field S_HANDORGNAME
      if (this.getShandorgname()==null)
             sb.append("S_HANDORGNAME缴款单位名称不能为空; ");
      if (this.getShandorgname()!=null)
             if (this.getShandorgname().getBytes().length > 200)
                sb.append("S_HANDORGNAME缴款单位名称宽度不能超过 "+200+"个字符; ");
    
    //check field S_PAYACCT
      if (this.getSpayacct()!=null)
             if (this.getSpayacct().getBytes().length > 32)
                sb.append("S_PAYACCT付款人账号宽度不能超过 "+32+"个字符; ");
    
    //check field S_TAXVOUNO
      if (this.getStaxvouno()==null)
             sb.append("S_TAXVOUNO税票号码不能为空; ");
      if (this.getStaxvouno()!=null)
             if (this.getStaxvouno().getBytes().length > 20)
                sb.append("S_TAXVOUNO税票号码宽度不能超过 "+20+"个字符; ");
    
    //check field S_BILLDATE
      if (this.getSbilldate()!=null)
             if (this.getSbilldate().getBytes().length > 8)
                sb.append("S_BILLDATE开票日期宽度不能超过 "+8+"个字符; ");
    
    //check field S_TAXPAYCODE
      if (this.getStaxpaycode()==null)
             sb.append("S_TAXPAYCODE纳税人编号不能为空; ");
      if (this.getStaxpaycode()!=null)
             if (this.getStaxpaycode().getBytes().length > 20)
                sb.append("S_TAXPAYCODE纳税人编号宽度不能超过 "+20+"个字符; ");
    
    //check field S_TAXPAYNAME
      if (this.getStaxpayname()==null)
             sb.append("S_TAXPAYNAME纳税人名称不能为空; ");
      if (this.getStaxpayname()!=null)
             if (this.getStaxpayname().getBytes().length > 200)
                sb.append("S_TAXPAYNAME纳税人名称宽度不能超过 "+200+"个字符; ");
    
    //check field S_BUDGETTYPE
      if (this.getSbudgettype()==null)
             sb.append("S_BUDGETTYPE预算种类不能为空; ");
      if (this.getSbudgettype()!=null)
             if (this.getSbudgettype().getBytes().length > 1)
                sb.append("S_BUDGETTYPE预算种类宽度不能超过 "+1+"个字符; ");
    
    //check field S_TRIMFLAG
      if (this.getStrimflag()==null)
             sb.append("S_TRIMFLAG调整期标志不能为空; ");
      if (this.getStrimflag()!=null)
             if (this.getStrimflag().getBytes().length > 1)
                sb.append("S_TRIMFLAG调整期标志宽度不能超过 "+1+"个字符; ");
    
    //check field S_ETPCODE
      if (this.getSetpcode()!=null)
             if (this.getSetpcode().getBytes().length > 20)
                sb.append("S_ETPCODE企业代码宽度不能超过 "+20+"个字符; ");
    
    //check field S_ETPNAME
      if (this.getSetpname()!=null)
             if (this.getSetpname().getBytes().length > 200)
                sb.append("S_ETPNAME企业名称宽度不能超过 "+200+"个字符; ");
    
    //check field S_ETPTYPE
      if (this.getSetptype()!=null)
             if (this.getSetptype().getBytes().length > 20)
                sb.append("S_ETPTYPE企业类型宽度不能超过 "+20+"个字符; ");
    
    //check field S_BDGSBTCODE
      if (this.getSbdgsbtcode()==null)
             sb.append("S_BDGSBTCODE预算科目代码不能为空; ");
      if (this.getSbdgsbtcode()!=null)
             if (this.getSbdgsbtcode().getBytes().length > 30)
                sb.append("S_BDGSBTCODE预算科目代码宽度不能超过 "+30+"个字符; ");
    
    //check field S_BDGSBTNAME
      if (this.getSbdgsbtname()!=null)
             if (this.getSbdgsbtname().getBytes().length > 90)
                sb.append("S_BDGSBTNAME预算科目代码宽度不能超过 "+90+"个字符; ");
    
    //check field S_LIMIT
      if (this.getSlimit()==null)
             sb.append("S_LIMIT限缴日期不能为空; ");
      if (this.getSlimit()!=null)
             if (this.getSlimit().getBytes().length > 8)
                sb.append("S_LIMIT限缴日期宽度不能超过 "+8+"个字符; ");
    
    //check field S_TAXTYPECODE
      if (this.getStaxtypecode()!=null)
             if (this.getStaxtypecode().getBytes().length > 10)
                sb.append("S_TAXTYPECODE税种代码宽度不能超过 "+10+"个字符; ");
    
    //check field S_TAXKINDNAME
      if (this.getStaxkindname()!=null)
             if (this.getStaxkindname().getBytes().length > 60)
                sb.append("S_TAXKINDNAME税种名称宽度不能超过 "+60+"个字符; ");
    
    //check field S_BDGLEVEL
      if (this.getSbdglevel()==null)
             sb.append("S_BDGLEVEL预算级次不能为空; ");
      if (this.getSbdglevel()!=null)
             if (this.getSbdglevel().getBytes().length > 1)
                sb.append("S_BDGLEVEL预算级次宽度不能超过 "+1+"个字符; ");
    
    //check field S_BDGLEVELNAME
      if (this.getSbdglevelname()!=null)
             if (this.getSbdglevelname().getBytes().length > 60)
                sb.append("S_BDGLEVELNAME预算级次名称宽度不能超过 "+60+"个字符; ");
    
    //check field S_TAXSTARTDATE
      if (this.getStaxstartdate()==null)
             sb.append("S_TAXSTARTDATE税款所属日期起不能为空; ");
      if (this.getStaxstartdate()!=null)
             if (this.getStaxstartdate().getBytes().length > 8)
                sb.append("S_TAXSTARTDATE税款所属日期起宽度不能超过 "+8+"个字符; ");
    
    //check field S_TAXENDDATE
      if (this.getStaxenddate()==null)
             sb.append("S_TAXENDDATE税款所属日期止不能为空; ");
      if (this.getStaxenddate()!=null)
             if (this.getStaxenddate().getBytes().length > 8)
                sb.append("S_TAXENDDATE税款所属日期止宽度不能超过 "+8+"个字符; ");
    
    //check field S_ASTFLAG
      if (this.getSastflag()!=null)
             if (this.getSastflag().getBytes().length > 35)
                sb.append("S_ASTFLAG辅助标志宽度不能超过 "+35+"个字符; ");
    
    //check field S_TAXTYPE
      if (this.getStaxtype()==null)
             sb.append("S_TAXTYPE税款类型不能为空; ");
      if (this.getStaxtype()!=null)
             if (this.getStaxtype().getBytes().length > 1)
                sb.append("S_TAXTYPE税款类型宽度不能超过 "+1+"个字符; ");
    
    //check field S_ACCT
      if (this.getSacct()==null)
             sb.append("S_ACCT账务日期不能为空; ");
      if (this.getSacct()!=null)
             if (this.getSacct().getBytes().length > 8)
                sb.append("S_ACCT账务日期宽度不能超过 "+8+"个字符; ");
    
    //check field S_TRASTATE
      if (this.getStrastate()==null)
             sb.append("S_TRASTATE处理状态不能为空; ");
      if (this.getStrastate()!=null)
             if (this.getStrastate().getBytes().length > 5)
                sb.append("S_TRASTATE处理状态宽度不能超过 "+5+"个字符; ");
    
    //check field S_INPUTERID
      if (this.getSinputerid()!=null)
             if (this.getSinputerid().getBytes().length > 18)
                sb.append("S_INPUTERID录入员代码宽度不能超过 "+18+"个字符; ");
    
    //don't need check field TS_SYSUPDATE,it is UpdateTimeStamp column
  
    //check field S_VOUCHANNEL
      if (this.getSvouchannel()!=null)
             if (this.getSvouchannel().getBytes().length > 10)
                sb.append("S_VOUCHANNEL凭证来源宽度不能超过 "+10+"个字符; ");
    
    //check field S_STATUS
      if (this.getSstatus()==null)
             sb.append("S_STATUS勾兑状态不能为空; ");
      if (this.getSstatus()!=null)
             if (this.getSstatus().getBytes().length > 5)
                sb.append("S_STATUS勾兑状态宽度不能超过 "+5+"个字符; ");
    
    //check field S_REMARK
      if (this.getSremark()!=null)
             if (this.getSremark().getBytes().length > 60)
                sb.append("S_REMARK备注宽度不能超过 "+60+"个字符; ");
    
    //check field S_REMARK1
      if (this.getSremark1()!=null)
             if (this.getSremark1().getBytes().length > 60)
                sb.append("S_REMARK1备注宽度不能超过 "+60+"个字符; ");
    
    //check field S_REMARK2
      if (this.getSremark2()!=null)
             if (this.getSremark2().getBytes().length > 60)
                sb.append("S_REMARK2备注宽度不能超过 "+60+"个字符; ");
    
    //check field S_REMARK3
      if (this.getSremark3()!=null)
             if (this.getSremark3().getBytes().length > 60)
                sb.append("S_REMARK3备注宽度不能超过 "+60+"个字符; ");
    
    //check field S_REMARK4
      if (this.getSremark4()!=null)
             if (this.getSremark4().getBytes().length > 60)
                sb.append("S_REMARK4备注宽度不能超过 "+60+"个字符; ");
    
    //check field S_REMARK5
      if (this.getSremark5()!=null)
             if (this.getSremark5().getBytes().length > 60)
                sb.append("S_REMARK5备注宽度不能超过 "+60+"个字符; ");
    

 	String msg = sb.toString() ;
	if (msg.length() == 0)
		  return null ;

  return  msg;
  }
  /* Returns value valid checking String , NULL is Valid*/
   public String  checkValid(String[] _columnNames)
  {
  	StringBuffer sb = new StringBuffer() ;
    // check columnNames
    String checkNameMsg = checkColumnNamesValid(_columnNames);
    if (checkNameMsg != null) {
         return checkNameMsg;
    }
    //check field S_SEQ
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_SEQ")) {
               if (this.getSseq()==null)
                    sb.append("S_SEQ 主键不能为空; ");
               if (this.getSseq()!=null)
                    if (this.getSseq().getBytes().length > 20)
                        sb.append("S_SEQ 主键宽度不能超过 "+20+"个字符");
             break;
         }
  }
    
    //check field S_FINORGCODE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_FINORGCODE")) {
               if (this.getSfinorgcode()==null)
                    sb.append("S_FINORGCODE 财政机关代码不能为空; ");
               if (this.getSfinorgcode()!=null)
                    if (this.getSfinorgcode().getBytes().length > 12)
                        sb.append("S_FINORGCODE 财政机关代码宽度不能超过 "+12+"个字符");
             break;
         }
  }
    
    //check field S_APPLYDATE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_APPLYDATE")) {
               if (this.getSapplydate()==null)
                    sb.append("S_APPLYDATE 税票日期不能为空; ");
               if (this.getSapplydate()!=null)
                    if (this.getSapplydate().getBytes().length > 8)
                        sb.append("S_APPLYDATE 税票日期宽度不能超过 "+8+"个字符");
             break;
         }
  }
    
    //check field S_INTREDATE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_INTREDATE")) {
                 if (this.getSintredate()!=null)
                    if (this.getSintredate().getBytes().length > 8)
                        sb.append("S_INTREDATE 入库日期宽度不能超过 "+8+"个字符");
             break;
         }
  }
    
    //check field S_BLEND
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_BLEND")) {
               if (this.getSblend()==null)
                    sb.append("S_BLEND 勾兑日期不能为空; ");
               if (this.getSblend()!=null)
                    if (this.getSblend().getBytes().length > 8)
                        sb.append("S_BLEND 勾兑日期宽度不能超过 "+8+"个字符");
             break;
         }
  }
    
    //check field S_PACKNO
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_PACKNO")) {
               if (this.getSpackno()==null)
                    sb.append("S_PACKNO 包流水号不能为空; ");
               if (this.getSpackno()!=null)
                    if (this.getSpackno().getBytes().length > 8)
                        sb.append("S_PACKNO 包流水号宽度不能超过 "+8+"个字符");
             break;
         }
  }
    
    //check field S_TRECODE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_TRECODE")) {
               if (this.getStrecode()==null)
                    sb.append("S_TRECODE 国库代码不能为空; ");
               if (this.getStrecode()!=null)
                    if (this.getStrecode().getBytes().length > 10)
                        sb.append("S_TRECODE 国库代码宽度不能超过 "+10+"个字符");
             break;
         }
  }
    
    //check field S_TRENAME
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_TRENAME")) {
                 if (this.getStrename()!=null)
                    if (this.getStrename().getBytes().length > 100)
                        sb.append("S_TRENAME 国库名称宽度不能超过 "+100+"个字符");
             break;
         }
  }
    
    //check field S_TAXORGCODE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_TAXORGCODE")) {
               if (this.getStaxorgcode()==null)
                    sb.append("S_TAXORGCODE 征收机关代码不能为空; ");
               if (this.getStaxorgcode()!=null)
                    if (this.getStaxorgcode().getBytes().length > 12)
                        sb.append("S_TAXORGCODE 征收机关代码宽度不能超过 "+12+"个字符");
             break;
         }
  }
    
    //check field S_PAYBNKNO
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_PAYBNKNO")) {
                 if (this.getSpaybnkno()!=null)
                    if (this.getSpaybnkno().getBytes().length > 12)
                        sb.append("S_PAYBNKNO 付款行行号宽度不能超过 "+12+"个字符");
             break;
         }
  }
    
    //check field S_TRANO
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_TRANO")) {
               if (this.getStrano()==null)
                    sb.append("S_TRANO 交易流水号不能为空; ");
               if (this.getStrano()!=null)
                    if (this.getStrano().getBytes().length > 8)
                        sb.append("S_TRANO 交易流水号宽度不能超过 "+8+"个字符");
             break;
         }
  }
    
    //check field S_ORIMSGNO
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_ORIMSGNO")) {
               if (this.getSorimsgno()==null)
                    sb.append("S_ORIMSGNO 原报文编号不能为空; ");
               if (this.getSorimsgno()!=null)
                    if (this.getSorimsgno().getBytes().length > 4)
                        sb.append("S_ORIMSGNO 原报文编号宽度不能超过 "+4+"个字符");
             break;
         }
  }
    
    //check field F_TRAAMT
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("F_TRAAMT")) {
               if (this.getFtraamt()==null)
                    sb.append("F_TRAAMT 税票金额不能为空; ");
               break;
         }
  }
    
    //check field F_AMT
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("F_AMT")) {
               if (this.getFamt()==null)
                    sb.append("F_AMT 入库金额不能为空; ");
               break;
         }
  }
    
    //check field S_PAYEROPNBNKNO
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_PAYEROPNBNKNO")) {
                 if (this.getSpayeropnbnkno()!=null)
                    if (this.getSpayeropnbnkno().getBytes().length > 12)
                        sb.append("S_PAYEROPNBNKNO 付款人开户行行号宽度不能超过 "+12+"个字符");
             break;
         }
  }
    
    //check field S_PAYEROPBKNAME
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_PAYEROPBKNAME")) {
                 if (this.getSpayeropbkname()!=null)
                    if (this.getSpayeropbkname().getBytes().length > 60)
                        sb.append("S_PAYEROPBKNAME 付款开户行名称宽度不能超过 "+60+"个字符");
             break;
         }
  }
    
    //check field S_HANDORGNAME
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_HANDORGNAME")) {
               if (this.getShandorgname()==null)
                    sb.append("S_HANDORGNAME 缴款单位名称不能为空; ");
               if (this.getShandorgname()!=null)
                    if (this.getShandorgname().getBytes().length > 200)
                        sb.append("S_HANDORGNAME 缴款单位名称宽度不能超过 "+200+"个字符");
             break;
         }
  }
    
    //check field S_PAYACCT
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_PAYACCT")) {
                 if (this.getSpayacct()!=null)
                    if (this.getSpayacct().getBytes().length > 32)
                        sb.append("S_PAYACCT 付款人账号宽度不能超过 "+32+"个字符");
             break;
         }
  }
    
    //check field S_TAXVOUNO
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_TAXVOUNO")) {
               if (this.getStaxvouno()==null)
                    sb.append("S_TAXVOUNO 税票号码不能为空; ");
               if (this.getStaxvouno()!=null)
                    if (this.getStaxvouno().getBytes().length > 20)
                        sb.append("S_TAXVOUNO 税票号码宽度不能超过 "+20+"个字符");
             break;
         }
  }
    
    //check field S_BILLDATE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_BILLDATE")) {
                 if (this.getSbilldate()!=null)
                    if (this.getSbilldate().getBytes().length > 8)
                        sb.append("S_BILLDATE 开票日期宽度不能超过 "+8+"个字符");
             break;
         }
  }
    
    //check field S_TAXPAYCODE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_TAXPAYCODE")) {
               if (this.getStaxpaycode()==null)
                    sb.append("S_TAXPAYCODE 纳税人编号不能为空; ");
               if (this.getStaxpaycode()!=null)
                    if (this.getStaxpaycode().getBytes().length > 20)
                        sb.append("S_TAXPAYCODE 纳税人编号宽度不能超过 "+20+"个字符");
             break;
         }
  }
    
    //check field S_TAXPAYNAME
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_TAXPAYNAME")) {
               if (this.getStaxpayname()==null)
                    sb.append("S_TAXPAYNAME 纳税人名称不能为空; ");
               if (this.getStaxpayname()!=null)
                    if (this.getStaxpayname().getBytes().length > 200)
                        sb.append("S_TAXPAYNAME 纳税人名称宽度不能超过 "+200+"个字符");
             break;
         }
  }
    
    //check field S_BUDGETTYPE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_BUDGETTYPE")) {
               if (this.getSbudgettype()==null)
                    sb.append("S_BUDGETTYPE 预算种类不能为空; ");
               if (this.getSbudgettype()!=null)
                    if (this.getSbudgettype().getBytes().length > 1)
                        sb.append("S_BUDGETTYPE 预算种类宽度不能超过 "+1+"个字符");
             break;
         }
  }
    
    //check field S_TRIMFLAG
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_TRIMFLAG")) {
               if (this.getStrimflag()==null)
                    sb.append("S_TRIMFLAG 调整期标志不能为空; ");
               if (this.getStrimflag()!=null)
                    if (this.getStrimflag().getBytes().length > 1)
                        sb.append("S_TRIMFLAG 调整期标志宽度不能超过 "+1+"个字符");
             break;
         }
  }
    
    //check field S_ETPCODE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_ETPCODE")) {
                 if (this.getSetpcode()!=null)
                    if (this.getSetpcode().getBytes().length > 20)
                        sb.append("S_ETPCODE 企业代码宽度不能超过 "+20+"个字符");
             break;
         }
  }
    
    //check field S_ETPNAME
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_ETPNAME")) {
                 if (this.getSetpname()!=null)
                    if (this.getSetpname().getBytes().length > 200)
                        sb.append("S_ETPNAME 企业名称宽度不能超过 "+200+"个字符");
             break;
         }
  }
    
    //check field S_ETPTYPE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_ETPTYPE")) {
                 if (this.getSetptype()!=null)
                    if (this.getSetptype().getBytes().length > 20)
                        sb.append("S_ETPTYPE 企业类型宽度不能超过 "+20+"个字符");
             break;
         }
  }
    
    //check field S_BDGSBTCODE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_BDGSBTCODE")) {
               if (this.getSbdgsbtcode()==null)
                    sb.append("S_BDGSBTCODE 预算科目代码不能为空; ");
               if (this.getSbdgsbtcode()!=null)
                    if (this.getSbdgsbtcode().getBytes().length > 30)
                        sb.append("S_BDGSBTCODE 预算科目代码宽度不能超过 "+30+"个字符");
             break;
         }
  }
    
    //check field S_BDGSBTNAME
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_BDGSBTNAME")) {
                 if (this.getSbdgsbtname()!=null)
                    if (this.getSbdgsbtname().getBytes().length > 90)
                        sb.append("S_BDGSBTNAME 预算科目代码宽度不能超过 "+90+"个字符");
             break;
         }
  }
    
    //check field S_LIMIT
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_LIMIT")) {
               if (this.getSlimit()==null)
                    sb.append("S_LIMIT 限缴日期不能为空; ");
               if (this.getSlimit()!=null)
                    if (this.getSlimit().getBytes().length > 8)
                        sb.append("S_LIMIT 限缴日期宽度不能超过 "+8+"个字符");
             break;
         }
  }
    
    //check field S_TAXTYPECODE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_TAXTYPECODE")) {
                 if (this.getStaxtypecode()!=null)
                    if (this.getStaxtypecode().getBytes().length > 10)
                        sb.append("S_TAXTYPECODE 税种代码宽度不能超过 "+10+"个字符");
             break;
         }
  }
    
    //check field S_TAXKINDNAME
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_TAXKINDNAME")) {
                 if (this.getStaxkindname()!=null)
                    if (this.getStaxkindname().getBytes().length > 60)
                        sb.append("S_TAXKINDNAME 税种名称宽度不能超过 "+60+"个字符");
             break;
         }
  }
    
    //check field S_BDGLEVEL
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_BDGLEVEL")) {
               if (this.getSbdglevel()==null)
                    sb.append("S_BDGLEVEL 预算级次不能为空; ");
               if (this.getSbdglevel()!=null)
                    if (this.getSbdglevel().getBytes().length > 1)
                        sb.append("S_BDGLEVEL 预算级次宽度不能超过 "+1+"个字符");
             break;
         }
  }
    
    //check field S_BDGLEVELNAME
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_BDGLEVELNAME")) {
                 if (this.getSbdglevelname()!=null)
                    if (this.getSbdglevelname().getBytes().length > 60)
                        sb.append("S_BDGLEVELNAME 预算级次名称宽度不能超过 "+60+"个字符");
             break;
         }
  }
    
    //check field S_TAXSTARTDATE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_TAXSTARTDATE")) {
               if (this.getStaxstartdate()==null)
                    sb.append("S_TAXSTARTDATE 税款所属日期起不能为空; ");
               if (this.getStaxstartdate()!=null)
                    if (this.getStaxstartdate().getBytes().length > 8)
                        sb.append("S_TAXSTARTDATE 税款所属日期起宽度不能超过 "+8+"个字符");
             break;
         }
  }
    
    //check field S_TAXENDDATE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_TAXENDDATE")) {
               if (this.getStaxenddate()==null)
                    sb.append("S_TAXENDDATE 税款所属日期止不能为空; ");
               if (this.getStaxenddate()!=null)
                    if (this.getStaxenddate().getBytes().length > 8)
                        sb.append("S_TAXENDDATE 税款所属日期止宽度不能超过 "+8+"个字符");
             break;
         }
  }
    
    //check field S_ASTFLAG
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_ASTFLAG")) {
                 if (this.getSastflag()!=null)
                    if (this.getSastflag().getBytes().length > 35)
                        sb.append("S_ASTFLAG 辅助标志宽度不能超过 "+35+"个字符");
             break;
         }
  }
    
    //check field S_TAXTYPE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_TAXTYPE")) {
               if (this.getStaxtype()==null)
                    sb.append("S_TAXTYPE 税款类型不能为空; ");
               if (this.getStaxtype()!=null)
                    if (this.getStaxtype().getBytes().length > 1)
                        sb.append("S_TAXTYPE 税款类型宽度不能超过 "+1+"个字符");
             break;
         }
  }
    
    //check field S_ACCT
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_ACCT")) {
               if (this.getSacct()==null)
                    sb.append("S_ACCT 账务日期不能为空; ");
               if (this.getSacct()!=null)
                    if (this.getSacct().getBytes().length > 8)
                        sb.append("S_ACCT 账务日期宽度不能超过 "+8+"个字符");
             break;
         }
  }
    
    //check field S_TRASTATE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_TRASTATE")) {
               if (this.getStrastate()==null)
                    sb.append("S_TRASTATE 处理状态不能为空; ");
               if (this.getStrastate()!=null)
                    if (this.getStrastate().getBytes().length > 5)
                        sb.append("S_TRASTATE 处理状态宽度不能超过 "+5+"个字符");
             break;
         }
  }
    
    //check field S_INPUTERID
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_INPUTERID")) {
                 if (this.getSinputerid()!=null)
                    if (this.getSinputerid().getBytes().length > 18)
                        sb.append("S_INPUTERID 录入员代码宽度不能超过 "+18+"个字符");
             break;
         }
  }
    
    //don't need check field TS_SYSUPDATE,it is UpdateTimeStamp column
  
    //check field S_VOUCHANNEL
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_VOUCHANNEL")) {
                 if (this.getSvouchannel()!=null)
                    if (this.getSvouchannel().getBytes().length > 10)
                        sb.append("S_VOUCHANNEL 凭证来源宽度不能超过 "+10+"个字符");
             break;
         }
  }
    
    //check field S_STATUS
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_STATUS")) {
               if (this.getSstatus()==null)
                    sb.append("S_STATUS 勾兑状态不能为空; ");
               if (this.getSstatus()!=null)
                    if (this.getSstatus().getBytes().length > 5)
                        sb.append("S_STATUS 勾兑状态宽度不能超过 "+5+"个字符");
             break;
         }
  }
    
    //check field S_REMARK
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_REMARK")) {
                 if (this.getSremark()!=null)
                    if (this.getSremark().getBytes().length > 60)
                        sb.append("S_REMARK 备注宽度不能超过 "+60+"个字符");
             break;
         }
  }
    
    //check field S_REMARK1
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_REMARK1")) {
                 if (this.getSremark1()!=null)
                    if (this.getSremark1().getBytes().length > 60)
                        sb.append("S_REMARK1 备注宽度不能超过 "+60+"个字符");
             break;
         }
  }
    
    //check field S_REMARK2
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_REMARK2")) {
                 if (this.getSremark2()!=null)
                    if (this.getSremark2().getBytes().length > 60)
                        sb.append("S_REMARK2 备注宽度不能超过 "+60+"个字符");
             break;
         }
  }
    
    //check field S_REMARK3
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_REMARK3")) {
                 if (this.getSremark3()!=null)
                    if (this.getSremark3().getBytes().length > 60)
                        sb.append("S_REMARK3 备注宽度不能超过 "+60+"个字符");
             break;
         }
  }
    
    //check field S_REMARK4
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_REMARK4")) {
                 if (this.getSremark4()!=null)
                    if (this.getSremark4().getBytes().length > 60)
                        sb.append("S_REMARK4 备注宽度不能超过 "+60+"个字符");
             break;
         }
  }
    
    //check field S_REMARK5
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_REMARK5")) {
                 if (this.getSremark5()!=null)
                    if (this.getSremark5().getBytes().length > 60)
                        sb.append("S_REMARK5 备注宽度不能超过 "+60+"个字符");
             break;
         }
  }
    
 	String msg = sb.toString() ;
	if (msg.length() == 0)
		  return null ;

  return  msg;
  }
  /* Returns value valid checking String , NULL is Valid*/
	public String checkValidExcept(String[] _columnNames) {
		String msg = checkColumnNamesValid(_columnNames);
		if (msg != null) {
			return msg;
		}
		String[] columnCheckNames = new String[columnNames().length
				- _columnNames.length];
		int k = 0;
		for (int i = 0; i < columnNames().length; i++) {
			boolean checkNameInColumn = true;
			for (int j = 0; j < _columnNames.length; j++) {
				if (_columnNames[i].equals(columnNames()[j])) {
					checkNameInColumn = false;
					break;
				}
			}
			if (checkNameInColumn) {
				columnCheckNames[k] = columnNames()[i];
				k++;
			}
		}
		return checkValid(columnCheckNames);
	}
	/* Returns value valid checking String , NULL is Valid */
	public String checkColumnNamesValid(String[] _columnNames) {
		StringBuffer sb = new StringBuffer();
		if (_columnNames.length > columnNames().length) {
			return "输入字段个数多于表中字段个数; ";
		}
		// check columnNames
		for (int i = 0; i < _columnNames.length; i++) {
			boolean checkNameValid = false;
			for (int j = 0; j < columnNames().length; j++) {
				if (_columnNames[i] != null
						&& _columnNames[i].equals(columnNames()[j])) {
					checkNameValid = true;
					break;
				}
			}
			if (!checkNameValid)
				sb.append("输入字段 " + _columnNames[i] + " 不在该表字段中; ");
		}
		String msg = sb.toString();
		if (msg.length() == 0)
			return null;

		return msg;
	}
/*******************************************************
*
*  implement IDto
*
*****************************************************/

  /* if this Dto has children Dtos*/
  public boolean  isParent() {
     return false;
  };

  /* get the children Dtos if this has children*/
  public IDto[]  getChildren() {
     return null;
  };

  /* set the children Dtos if this has children*/
  public void  setChildren(IDto[] _dtos) 
  {
     throw new RuntimeException("此dto没有相关联的子dto，不能进行此操作");
  };
  
  /* return the IPK class  */
    public IPK      getPK(){
      HtvIncomeonlineIncomeondetailBlendPK pk = new HtvIncomeonlineIncomeondetailBlendPK();
      pk.setSseq(getSseq());
      return pk;
    };
}
