    
package com.cfcc.itfe.persistence.dto;

import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Time;
import java.sql.Timestamp ;

import java.lang.reflect.Array;

import com.cfcc.jaf.persistence.jaform.parent.IDto ;
import com.cfcc.jaf.persistence.jaform.parent.IPK;
import com.cfcc.itfe.persistence.pk.HtfReconcilePayquotaSubPK;
/**
 * <p>Title: DTO of table: HTF_RECONCILE_PAYQUOTA_SUB</p>
 * <p>Description: 清算额度对帐子表历史表3510 Data Transfer Object </p>
 * <p>Copyright: Copyright (c) 2005</p>
 * <p>Company: CFCC </p>
 * <p>Generation Time: 2014-12-25 15:28:54 </p>
 *  Do NOT change this file by hand.
 *  This java source file is generated by JAF_ORM .
 *  dto.vm version timestamp: 2008-01-08 16:30:00 
 *
 * @author win7
 */

public class HtfReconcilePayquotaSubDto   
                              implements IDto  {
/********************************************************
 *   fields
 ********************************************************/

    /**
    * 外键联合主键 I_VOUSRLNO BIGINT , PK   , NOT NULL       */
    protected Long ivousrlno;
    /**
    * 联合主键 I_SEQNO BIGINT , PK   , NOT NULL       */
    protected Long iseqno;
    /**
    * 序号 S_ID VARCHAR   , NOT NULL       */
    protected String sid;
    /**
    * 一级预算单位编码 S_SUPDEPCODE VARCHAR   , NOT NULL       */
    protected String ssupdepcode;
    /**
    * 一级预算单位名称 S_SUPDEPNAME VARCHAR   , NOT NULL       */
    protected String ssupdepname;
    /**
    * 资金性质编码 S_FUNDTYPECODE VARCHAR         */
    protected String sfundtypecode;
    /**
    * 资金性质名称 S_FUNDTYPENAME VARCHAR         */
    protected String sfundtypename;
    /**
    * 代理银行编码 S_PAYBANKCODE VARCHAR         */
    protected String spaybankcode;
    /**
    * 代理银行名称 S_PAYBANKNAME VARCHAR         */
    protected String spaybankname;
    /**
    * 代理银行行号 S_PAYBANKNO VARCHAR   , NOT NULL       */
    protected String spaybankno;
    /**
    * 支出功能分类科目编码 S_EXPFUNCCODE VARCHAR   , NOT NULL       */
    protected String sexpfunccode;
    /**
    * 支出功能分类科目名称 S_EXPFUNCNAME VARCHAR   , NOT NULL       */
    protected String sexpfuncname;
    /**
    * 收支管理编码 S_PROCATCODE VARCHAR         */
    protected String sprocatcode;
    /**
    * 收支管理名称 S_PROCATNAME VARCHAR         */
    protected String sprocatname;
    /**
    * 支付方式编码 S_PAYTYPECODE VARCHAR   , NOT NULL       */
    protected String spaytypecode;
    /**
    * 支付方式名称 S_PAYTYPENAME VARCHAR   , NOT NULL       */
    protected String spaytypename;
    /**
    * 上期额度余额 N_PREDATEMONEY DECIMAL         */
    protected BigDecimal npredatemoney;
    /**
    * 本期新增清算额度 N_CLEARAMT DECIMAL   , NOT NULL       */
    protected BigDecimal nclearamt;
    /**
    * 本期已清算额度 N_CURRECKMONEY DECIMAL         */
    protected BigDecimal ncurreckmoney;
    /**
    * 本期额度余额 N_CURDATEMONEY DECIMAL         */
    protected BigDecimal ncurdatemoney;
    /**
    * 对帐结果 S_XCHECKRESULT VARCHAR         */
    protected String sxcheckresult;
    /**
    * 不符原因 S_XCHECKREASON VARCHAR         */
    protected String sxcheckreason;
    /**
    * 预留字段1 S_HOLD1 VARCHAR         */
    protected String shold1;
    /**
    * 预留字段2 S_HOLD2 VARCHAR         */
    protected String shold2;
    /**
    * 预留字段3 S_HOLD3 VARCHAR         */
    protected String shold3;
    /**
    * 预留字段4 S_HOLD4 VARCHAR         */
    protected String shold4;
    /**
    * 扩展 S_EXT1 VARCHAR         */
    protected String sext1;
    /**
    * 扩展 S_EXT2 VARCHAR         */
    protected String sext2;
    /**
    * 扩展 S_EXT3 VARCHAR         */
    protected String sext3;
    /**
    * 扩展 S_EXT4 VARCHAR         */
    protected String sext4;
    /**
    * 扩展 S_EXT5 VARCHAR         */
    protected String sext5;


/******************************************************
*
*  getter and setter
*
*******************************************************/


    public Long getIvousrlno()
    {
        return ivousrlno;
    }
     /**
     *  外键联合主键 Setter I_VOUSRLNO, PK , NOT NULL        * */
    public void setIvousrlno(Long _ivousrlno) {
        this.ivousrlno = _ivousrlno;
    }


    public Long getIseqno()
    {
        return iseqno;
    }
     /**
     *  联合主键 Setter I_SEQNO, PK , NOT NULL        * */
    public void setIseqno(Long _iseqno) {
        this.iseqno = _iseqno;
    }


    public String getSid()
    {
        return sid;
    }
     /**
     *  序号 Setter S_ID , NOT NULL        * */
    public void setSid(String _sid) {
        this.sid = _sid;
    }


    public String getSsupdepcode()
    {
        return ssupdepcode;
    }
     /**
     *  一级预算单位编码 Setter S_SUPDEPCODE , NOT NULL        * */
    public void setSsupdepcode(String _ssupdepcode) {
        this.ssupdepcode = _ssupdepcode;
    }


    public String getSsupdepname()
    {
        return ssupdepname;
    }
     /**
     *  一级预算单位名称 Setter S_SUPDEPNAME , NOT NULL        * */
    public void setSsupdepname(String _ssupdepname) {
        this.ssupdepname = _ssupdepname;
    }


    public String getSfundtypecode()
    {
        return sfundtypecode;
    }
     /**
     *  资金性质编码 Setter S_FUNDTYPECODE        * */
    public void setSfundtypecode(String _sfundtypecode) {
        this.sfundtypecode = _sfundtypecode;
    }


    public String getSfundtypename()
    {
        return sfundtypename;
    }
     /**
     *  资金性质名称 Setter S_FUNDTYPENAME        * */
    public void setSfundtypename(String _sfundtypename) {
        this.sfundtypename = _sfundtypename;
    }


    public String getSpaybankcode()
    {
        return spaybankcode;
    }
     /**
     *  代理银行编码 Setter S_PAYBANKCODE        * */
    public void setSpaybankcode(String _spaybankcode) {
        this.spaybankcode = _spaybankcode;
    }


    public String getSpaybankname()
    {
        return spaybankname;
    }
     /**
     *  代理银行名称 Setter S_PAYBANKNAME        * */
    public void setSpaybankname(String _spaybankname) {
        this.spaybankname = _spaybankname;
    }


    public String getSpaybankno()
    {
        return spaybankno;
    }
     /**
     *  代理银行行号 Setter S_PAYBANKNO , NOT NULL        * */
    public void setSpaybankno(String _spaybankno) {
        this.spaybankno = _spaybankno;
    }


    public String getSexpfunccode()
    {
        return sexpfunccode;
    }
     /**
     *  支出功能分类科目编码 Setter S_EXPFUNCCODE , NOT NULL        * */
    public void setSexpfunccode(String _sexpfunccode) {
        this.sexpfunccode = _sexpfunccode;
    }


    public String getSexpfuncname()
    {
        return sexpfuncname;
    }
     /**
     *  支出功能分类科目名称 Setter S_EXPFUNCNAME , NOT NULL        * */
    public void setSexpfuncname(String _sexpfuncname) {
        this.sexpfuncname = _sexpfuncname;
    }


    public String getSprocatcode()
    {
        return sprocatcode;
    }
     /**
     *  收支管理编码 Setter S_PROCATCODE        * */
    public void setSprocatcode(String _sprocatcode) {
        this.sprocatcode = _sprocatcode;
    }


    public String getSprocatname()
    {
        return sprocatname;
    }
     /**
     *  收支管理名称 Setter S_PROCATNAME        * */
    public void setSprocatname(String _sprocatname) {
        this.sprocatname = _sprocatname;
    }


    public String getSpaytypecode()
    {
        return spaytypecode;
    }
     /**
     *  支付方式编码 Setter S_PAYTYPECODE , NOT NULL        * */
    public void setSpaytypecode(String _spaytypecode) {
        this.spaytypecode = _spaytypecode;
    }


    public String getSpaytypename()
    {
        return spaytypename;
    }
     /**
     *  支付方式名称 Setter S_PAYTYPENAME , NOT NULL        * */
    public void setSpaytypename(String _spaytypename) {
        this.spaytypename = _spaytypename;
    }


    public BigDecimal getNpredatemoney()
    {
        return npredatemoney;
    }
     /**
     *  上期额度余额 Setter N_PREDATEMONEY        * */
    public void setNpredatemoney(BigDecimal _npredatemoney) {
        this.npredatemoney = _npredatemoney;
    }


    public BigDecimal getNclearamt()
    {
        return nclearamt;
    }
     /**
     *  本期新增清算额度 Setter N_CLEARAMT , NOT NULL        * */
    public void setNclearamt(BigDecimal _nclearamt) {
        this.nclearamt = _nclearamt;
    }


    public BigDecimal getNcurreckmoney()
    {
        return ncurreckmoney;
    }
     /**
     *  本期已清算额度 Setter N_CURRECKMONEY        * */
    public void setNcurreckmoney(BigDecimal _ncurreckmoney) {
        this.ncurreckmoney = _ncurreckmoney;
    }


    public BigDecimal getNcurdatemoney()
    {
        return ncurdatemoney;
    }
     /**
     *  本期额度余额 Setter N_CURDATEMONEY        * */
    public void setNcurdatemoney(BigDecimal _ncurdatemoney) {
        this.ncurdatemoney = _ncurdatemoney;
    }


    public String getSxcheckresult()
    {
        return sxcheckresult;
    }
     /**
     *  对帐结果 Setter S_XCHECKRESULT        * */
    public void setSxcheckresult(String _sxcheckresult) {
        this.sxcheckresult = _sxcheckresult;
    }


    public String getSxcheckreason()
    {
        return sxcheckreason;
    }
     /**
     *  不符原因 Setter S_XCHECKREASON        * */
    public void setSxcheckreason(String _sxcheckreason) {
        this.sxcheckreason = _sxcheckreason;
    }


    public String getShold1()
    {
        return shold1;
    }
     /**
     *  预留字段1 Setter S_HOLD1        * */
    public void setShold1(String _shold1) {
        this.shold1 = _shold1;
    }


    public String getShold2()
    {
        return shold2;
    }
     /**
     *  预留字段2 Setter S_HOLD2        * */
    public void setShold2(String _shold2) {
        this.shold2 = _shold2;
    }


    public String getShold3()
    {
        return shold3;
    }
     /**
     *  预留字段3 Setter S_HOLD3        * */
    public void setShold3(String _shold3) {
        this.shold3 = _shold3;
    }


    public String getShold4()
    {
        return shold4;
    }
     /**
     *  预留字段4 Setter S_HOLD4        * */
    public void setShold4(String _shold4) {
        this.shold4 = _shold4;
    }


    public String getSext1()
    {
        return sext1;
    }
     /**
     *  扩展 Setter S_EXT1        * */
    public void setSext1(String _sext1) {
        this.sext1 = _sext1;
    }


    public String getSext2()
    {
        return sext2;
    }
     /**
     *  扩展 Setter S_EXT2        * */
    public void setSext2(String _sext2) {
        this.sext2 = _sext2;
    }


    public String getSext3()
    {
        return sext3;
    }
     /**
     *  扩展 Setter S_EXT3        * */
    public void setSext3(String _sext3) {
        this.sext3 = _sext3;
    }


    public String getSext4()
    {
        return sext4;
    }
     /**
     *  扩展 Setter S_EXT4        * */
    public void setSext4(String _sext4) {
        this.sext4 = _sext4;
    }


    public String getSext5()
    {
        return sext5;
    }
     /**
     *  扩展 Setter S_EXT5        * */
    public void setSext5(String _sext5) {
        this.sext5 = _sext5;
    }




/******************************************************
*
*  Get Column Name
*
*******************************************************/
    /**
    *  外键联合主键 Getter I_VOUSRLNO, PK , NOT NULL       * */
    public static String  columnIvousrlno()
    {
        return "I_VOUSRLNO";
    }
   
    /**
    *  联合主键 Getter I_SEQNO, PK , NOT NULL       * */
    public static String  columnIseqno()
    {
        return "I_SEQNO";
    }
   
    /**
    *  序号 Getter S_ID , NOT NULL       * */
    public static String  columnSid()
    {
        return "S_ID";
    }
   
    /**
    *  一级预算单位编码 Getter S_SUPDEPCODE , NOT NULL       * */
    public static String  columnSsupdepcode()
    {
        return "S_SUPDEPCODE";
    }
   
    /**
    *  一级预算单位名称 Getter S_SUPDEPNAME , NOT NULL       * */
    public static String  columnSsupdepname()
    {
        return "S_SUPDEPNAME";
    }
   
    /**
    *  资金性质编码 Getter S_FUNDTYPECODE       * */
    public static String  columnSfundtypecode()
    {
        return "S_FUNDTYPECODE";
    }
   
    /**
    *  资金性质名称 Getter S_FUNDTYPENAME       * */
    public static String  columnSfundtypename()
    {
        return "S_FUNDTYPENAME";
    }
   
    /**
    *  代理银行编码 Getter S_PAYBANKCODE       * */
    public static String  columnSpaybankcode()
    {
        return "S_PAYBANKCODE";
    }
   
    /**
    *  代理银行名称 Getter S_PAYBANKNAME       * */
    public static String  columnSpaybankname()
    {
        return "S_PAYBANKNAME";
    }
   
    /**
    *  代理银行行号 Getter S_PAYBANKNO , NOT NULL       * */
    public static String  columnSpaybankno()
    {
        return "S_PAYBANKNO";
    }
   
    /**
    *  支出功能分类科目编码 Getter S_EXPFUNCCODE , NOT NULL       * */
    public static String  columnSexpfunccode()
    {
        return "S_EXPFUNCCODE";
    }
   
    /**
    *  支出功能分类科目名称 Getter S_EXPFUNCNAME , NOT NULL       * */
    public static String  columnSexpfuncname()
    {
        return "S_EXPFUNCNAME";
    }
   
    /**
    *  收支管理编码 Getter S_PROCATCODE       * */
    public static String  columnSprocatcode()
    {
        return "S_PROCATCODE";
    }
   
    /**
    *  收支管理名称 Getter S_PROCATNAME       * */
    public static String  columnSprocatname()
    {
        return "S_PROCATNAME";
    }
   
    /**
    *  支付方式编码 Getter S_PAYTYPECODE , NOT NULL       * */
    public static String  columnSpaytypecode()
    {
        return "S_PAYTYPECODE";
    }
   
    /**
    *  支付方式名称 Getter S_PAYTYPENAME , NOT NULL       * */
    public static String  columnSpaytypename()
    {
        return "S_PAYTYPENAME";
    }
   
    /**
    *  上期额度余额 Getter N_PREDATEMONEY       * */
    public static String  columnNpredatemoney()
    {
        return "N_PREDATEMONEY";
    }
   
    /**
    *  本期新增清算额度 Getter N_CLEARAMT , NOT NULL       * */
    public static String  columnNclearamt()
    {
        return "N_CLEARAMT";
    }
   
    /**
    *  本期已清算额度 Getter N_CURRECKMONEY       * */
    public static String  columnNcurreckmoney()
    {
        return "N_CURRECKMONEY";
    }
   
    /**
    *  本期额度余额 Getter N_CURDATEMONEY       * */
    public static String  columnNcurdatemoney()
    {
        return "N_CURDATEMONEY";
    }
   
    /**
    *  对帐结果 Getter S_XCHECKRESULT       * */
    public static String  columnSxcheckresult()
    {
        return "S_XCHECKRESULT";
    }
   
    /**
    *  不符原因 Getter S_XCHECKREASON       * */
    public static String  columnSxcheckreason()
    {
        return "S_XCHECKREASON";
    }
   
    /**
    *  预留字段1 Getter S_HOLD1       * */
    public static String  columnShold1()
    {
        return "S_HOLD1";
    }
   
    /**
    *  预留字段2 Getter S_HOLD2       * */
    public static String  columnShold2()
    {
        return "S_HOLD2";
    }
   
    /**
    *  预留字段3 Getter S_HOLD3       * */
    public static String  columnShold3()
    {
        return "S_HOLD3";
    }
   
    /**
    *  预留字段4 Getter S_HOLD4       * */
    public static String  columnShold4()
    {
        return "S_HOLD4";
    }
   
    /**
    *  扩展 Getter S_EXT1       * */
    public static String  columnSext1()
    {
        return "S_EXT1";
    }
   
    /**
    *  扩展 Getter S_EXT2       * */
    public static String  columnSext2()
    {
        return "S_EXT2";
    }
   
    /**
    *  扩展 Getter S_EXT3       * */
    public static String  columnSext3()
    {
        return "S_EXT3";
    }
   
    /**
    *  扩展 Getter S_EXT4       * */
    public static String  columnSext4()
    {
        return "S_EXT4";
    }
   
    /**
    *  扩展 Getter S_EXT5       * */
    public static String  columnSext5()
    {
        return "S_EXT5";
    }
   


    /**
    *  Table Name
    */
    public static String tableName(){
        return "HTF_RECONCILE_PAYQUOTA_SUB";
    }
    
    /**
    *  Columns
    */
    public static String[] columnNames(){
        String[] columnNames = new String[31];        
        columnNames[0]="I_VOUSRLNO";
        columnNames[1]="I_SEQNO";
        columnNames[2]="S_ID";
        columnNames[3]="S_SUPDEPCODE";
        columnNames[4]="S_SUPDEPNAME";
        columnNames[5]="S_FUNDTYPECODE";
        columnNames[6]="S_FUNDTYPENAME";
        columnNames[7]="S_PAYBANKCODE";
        columnNames[8]="S_PAYBANKNAME";
        columnNames[9]="S_PAYBANKNO";
        columnNames[10]="S_EXPFUNCCODE";
        columnNames[11]="S_EXPFUNCNAME";
        columnNames[12]="S_PROCATCODE";
        columnNames[13]="S_PROCATNAME";
        columnNames[14]="S_PAYTYPECODE";
        columnNames[15]="S_PAYTYPENAME";
        columnNames[16]="N_PREDATEMONEY";
        columnNames[17]="N_CLEARAMT";
        columnNames[18]="N_CURRECKMONEY";
        columnNames[19]="N_CURDATEMONEY";
        columnNames[20]="S_XCHECKRESULT";
        columnNames[21]="S_XCHECKREASON";
        columnNames[22]="S_HOLD1";
        columnNames[23]="S_HOLD2";
        columnNames[24]="S_HOLD3";
        columnNames[25]="S_HOLD4";
        columnNames[26]="S_EXT1";
        columnNames[27]="S_EXT2";
        columnNames[28]="S_EXT3";
        columnNames[29]="S_EXT4";
        columnNames[30]="S_EXT5";
        return columnNames;     
    }
/*******************************************************
*
*  supplementary methods
*
*****************************************************/


    /* Indicates whether some other object is "equal to" this one. */
    public boolean equals(Object obj)
    {
        if (this == obj)
            return true;

        if (obj == null || !(obj instanceof HtfReconcilePayquotaSubDto))
            return false;

        HtfReconcilePayquotaSubDto bean = (HtfReconcilePayquotaSubDto) obj;


      //compare field ivousrlno
      if((this.ivousrlno==null && bean.ivousrlno!=null) || (this.ivousrlno!=null && bean.ivousrlno==null))
          return false;
        else if(this.ivousrlno==null && bean.ivousrlno==null){
        }
        else{
          if(!bean.ivousrlno.equals(this.ivousrlno))
               return false;
     }
      //compare field iseqno
      if((this.iseqno==null && bean.iseqno!=null) || (this.iseqno!=null && bean.iseqno==null))
          return false;
        else if(this.iseqno==null && bean.iseqno==null){
        }
        else{
          if(!bean.iseqno.equals(this.iseqno))
               return false;
     }
      //compare field sid
      if((this.sid==null && bean.sid!=null) || (this.sid!=null && bean.sid==null))
          return false;
        else if(this.sid==null && bean.sid==null){
        }
        else{
          if(!bean.sid.equals(this.sid))
               return false;
     }
      //compare field ssupdepcode
      if((this.ssupdepcode==null && bean.ssupdepcode!=null) || (this.ssupdepcode!=null && bean.ssupdepcode==null))
          return false;
        else if(this.ssupdepcode==null && bean.ssupdepcode==null){
        }
        else{
          if(!bean.ssupdepcode.equals(this.ssupdepcode))
               return false;
     }
      //compare field ssupdepname
      if((this.ssupdepname==null && bean.ssupdepname!=null) || (this.ssupdepname!=null && bean.ssupdepname==null))
          return false;
        else if(this.ssupdepname==null && bean.ssupdepname==null){
        }
        else{
          if(!bean.ssupdepname.equals(this.ssupdepname))
               return false;
     }
      //compare field sfundtypecode
      if((this.sfundtypecode==null && bean.sfundtypecode!=null) || (this.sfundtypecode!=null && bean.sfundtypecode==null))
          return false;
        else if(this.sfundtypecode==null && bean.sfundtypecode==null){
        }
        else{
          if(!bean.sfundtypecode.equals(this.sfundtypecode))
               return false;
     }
      //compare field sfundtypename
      if((this.sfundtypename==null && bean.sfundtypename!=null) || (this.sfundtypename!=null && bean.sfundtypename==null))
          return false;
        else if(this.sfundtypename==null && bean.sfundtypename==null){
        }
        else{
          if(!bean.sfundtypename.equals(this.sfundtypename))
               return false;
     }
      //compare field spaybankcode
      if((this.spaybankcode==null && bean.spaybankcode!=null) || (this.spaybankcode!=null && bean.spaybankcode==null))
          return false;
        else if(this.spaybankcode==null && bean.spaybankcode==null){
        }
        else{
          if(!bean.spaybankcode.equals(this.spaybankcode))
               return false;
     }
      //compare field spaybankname
      if((this.spaybankname==null && bean.spaybankname!=null) || (this.spaybankname!=null && bean.spaybankname==null))
          return false;
        else if(this.spaybankname==null && bean.spaybankname==null){
        }
        else{
          if(!bean.spaybankname.equals(this.spaybankname))
               return false;
     }
      //compare field spaybankno
      if((this.spaybankno==null && bean.spaybankno!=null) || (this.spaybankno!=null && bean.spaybankno==null))
          return false;
        else if(this.spaybankno==null && bean.spaybankno==null){
        }
        else{
          if(!bean.spaybankno.equals(this.spaybankno))
               return false;
     }
      //compare field sexpfunccode
      if((this.sexpfunccode==null && bean.sexpfunccode!=null) || (this.sexpfunccode!=null && bean.sexpfunccode==null))
          return false;
        else if(this.sexpfunccode==null && bean.sexpfunccode==null){
        }
        else{
          if(!bean.sexpfunccode.equals(this.sexpfunccode))
               return false;
     }
      //compare field sexpfuncname
      if((this.sexpfuncname==null && bean.sexpfuncname!=null) || (this.sexpfuncname!=null && bean.sexpfuncname==null))
          return false;
        else if(this.sexpfuncname==null && bean.sexpfuncname==null){
        }
        else{
          if(!bean.sexpfuncname.equals(this.sexpfuncname))
               return false;
     }
      //compare field sprocatcode
      if((this.sprocatcode==null && bean.sprocatcode!=null) || (this.sprocatcode!=null && bean.sprocatcode==null))
          return false;
        else if(this.sprocatcode==null && bean.sprocatcode==null){
        }
        else{
          if(!bean.sprocatcode.equals(this.sprocatcode))
               return false;
     }
      //compare field sprocatname
      if((this.sprocatname==null && bean.sprocatname!=null) || (this.sprocatname!=null && bean.sprocatname==null))
          return false;
        else if(this.sprocatname==null && bean.sprocatname==null){
        }
        else{
          if(!bean.sprocatname.equals(this.sprocatname))
               return false;
     }
      //compare field spaytypecode
      if((this.spaytypecode==null && bean.spaytypecode!=null) || (this.spaytypecode!=null && bean.spaytypecode==null))
          return false;
        else if(this.spaytypecode==null && bean.spaytypecode==null){
        }
        else{
          if(!bean.spaytypecode.equals(this.spaytypecode))
               return false;
     }
      //compare field spaytypename
      if((this.spaytypename==null && bean.spaytypename!=null) || (this.spaytypename!=null && bean.spaytypename==null))
          return false;
        else if(this.spaytypename==null && bean.spaytypename==null){
        }
        else{
          if(!bean.spaytypename.equals(this.spaytypename))
               return false;
     }
      //compare field npredatemoney
      if((this.npredatemoney==null && bean.npredatemoney!=null) || (this.npredatemoney!=null && bean.npredatemoney==null))
          return false;
        else if(this.npredatemoney==null && bean.npredatemoney==null){
        }
        else{
          if(!bean.npredatemoney.equals(this.npredatemoney))
               return false;
     }
      //compare field nclearamt
      if((this.nclearamt==null && bean.nclearamt!=null) || (this.nclearamt!=null && bean.nclearamt==null))
          return false;
        else if(this.nclearamt==null && bean.nclearamt==null){
        }
        else{
          if(!bean.nclearamt.equals(this.nclearamt))
               return false;
     }
      //compare field ncurreckmoney
      if((this.ncurreckmoney==null && bean.ncurreckmoney!=null) || (this.ncurreckmoney!=null && bean.ncurreckmoney==null))
          return false;
        else if(this.ncurreckmoney==null && bean.ncurreckmoney==null){
        }
        else{
          if(!bean.ncurreckmoney.equals(this.ncurreckmoney))
               return false;
     }
      //compare field ncurdatemoney
      if((this.ncurdatemoney==null && bean.ncurdatemoney!=null) || (this.ncurdatemoney!=null && bean.ncurdatemoney==null))
          return false;
        else if(this.ncurdatemoney==null && bean.ncurdatemoney==null){
        }
        else{
          if(!bean.ncurdatemoney.equals(this.ncurdatemoney))
               return false;
     }
      //compare field sxcheckresult
      if((this.sxcheckresult==null && bean.sxcheckresult!=null) || (this.sxcheckresult!=null && bean.sxcheckresult==null))
          return false;
        else if(this.sxcheckresult==null && bean.sxcheckresult==null){
        }
        else{
          if(!bean.sxcheckresult.equals(this.sxcheckresult))
               return false;
     }
      //compare field sxcheckreason
      if((this.sxcheckreason==null && bean.sxcheckreason!=null) || (this.sxcheckreason!=null && bean.sxcheckreason==null))
          return false;
        else if(this.sxcheckreason==null && bean.sxcheckreason==null){
        }
        else{
          if(!bean.sxcheckreason.equals(this.sxcheckreason))
               return false;
     }
      //compare field shold1
      if((this.shold1==null && bean.shold1!=null) || (this.shold1!=null && bean.shold1==null))
          return false;
        else if(this.shold1==null && bean.shold1==null){
        }
        else{
          if(!bean.shold1.equals(this.shold1))
               return false;
     }
      //compare field shold2
      if((this.shold2==null && bean.shold2!=null) || (this.shold2!=null && bean.shold2==null))
          return false;
        else if(this.shold2==null && bean.shold2==null){
        }
        else{
          if(!bean.shold2.equals(this.shold2))
               return false;
     }
      //compare field shold3
      if((this.shold3==null && bean.shold3!=null) || (this.shold3!=null && bean.shold3==null))
          return false;
        else if(this.shold3==null && bean.shold3==null){
        }
        else{
          if(!bean.shold3.equals(this.shold3))
               return false;
     }
      //compare field shold4
      if((this.shold4==null && bean.shold4!=null) || (this.shold4!=null && bean.shold4==null))
          return false;
        else if(this.shold4==null && bean.shold4==null){
        }
        else{
          if(!bean.shold4.equals(this.shold4))
               return false;
     }
      //compare field sext1
      if((this.sext1==null && bean.sext1!=null) || (this.sext1!=null && bean.sext1==null))
          return false;
        else if(this.sext1==null && bean.sext1==null){
        }
        else{
          if(!bean.sext1.equals(this.sext1))
               return false;
     }
      //compare field sext2
      if((this.sext2==null && bean.sext2!=null) || (this.sext2!=null && bean.sext2==null))
          return false;
        else if(this.sext2==null && bean.sext2==null){
        }
        else{
          if(!bean.sext2.equals(this.sext2))
               return false;
     }
      //compare field sext3
      if((this.sext3==null && bean.sext3!=null) || (this.sext3!=null && bean.sext3==null))
          return false;
        else if(this.sext3==null && bean.sext3==null){
        }
        else{
          if(!bean.sext3.equals(this.sext3))
               return false;
     }
      //compare field sext4
      if((this.sext4==null && bean.sext4!=null) || (this.sext4!=null && bean.sext4==null))
          return false;
        else if(this.sext4==null && bean.sext4==null){
        }
        else{
          if(!bean.sext4.equals(this.sext4))
               return false;
     }
      //compare field sext5
      if((this.sext5==null && bean.sext5!=null) || (this.sext5!=null && bean.sext5==null))
          return false;
        else if(this.sext5==null && bean.sext5==null){
        }
        else{
          if(!bean.sext5.equals(this.sext5))
               return false;
     }



        return true;
    }

    /* return hashCode ,if A.equals(B) that A.hashCode()==B.hashCode() */
	public int hashCode()
	{
  
		int _hash_ = 1;
		
        if(this.ivousrlno!=null)
          _hash_ = _hash_ * 31+ this.ivousrlno.hashCode() ;
        if(this.iseqno!=null)
          _hash_ = _hash_ * 31+ this.iseqno.hashCode() ;
        if(this.sid!=null)
          _hash_ = _hash_ * 31+ this.sid.hashCode() ;
        if(this.ssupdepcode!=null)
          _hash_ = _hash_ * 31+ this.ssupdepcode.hashCode() ;
        if(this.ssupdepname!=null)
          _hash_ = _hash_ * 31+ this.ssupdepname.hashCode() ;
        if(this.sfundtypecode!=null)
          _hash_ = _hash_ * 31+ this.sfundtypecode.hashCode() ;
        if(this.sfundtypename!=null)
          _hash_ = _hash_ * 31+ this.sfundtypename.hashCode() ;
        if(this.spaybankcode!=null)
          _hash_ = _hash_ * 31+ this.spaybankcode.hashCode() ;
        if(this.spaybankname!=null)
          _hash_ = _hash_ * 31+ this.spaybankname.hashCode() ;
        if(this.spaybankno!=null)
          _hash_ = _hash_ * 31+ this.spaybankno.hashCode() ;
        if(this.sexpfunccode!=null)
          _hash_ = _hash_ * 31+ this.sexpfunccode.hashCode() ;
        if(this.sexpfuncname!=null)
          _hash_ = _hash_ * 31+ this.sexpfuncname.hashCode() ;
        if(this.sprocatcode!=null)
          _hash_ = _hash_ * 31+ this.sprocatcode.hashCode() ;
        if(this.sprocatname!=null)
          _hash_ = _hash_ * 31+ this.sprocatname.hashCode() ;
        if(this.spaytypecode!=null)
          _hash_ = _hash_ * 31+ this.spaytypecode.hashCode() ;
        if(this.spaytypename!=null)
          _hash_ = _hash_ * 31+ this.spaytypename.hashCode() ;
        if(this.npredatemoney!=null)
          _hash_ = _hash_ * 31+ this.npredatemoney.hashCode() ;
        if(this.nclearamt!=null)
          _hash_ = _hash_ * 31+ this.nclearamt.hashCode() ;
        if(this.ncurreckmoney!=null)
          _hash_ = _hash_ * 31+ this.ncurreckmoney.hashCode() ;
        if(this.ncurdatemoney!=null)
          _hash_ = _hash_ * 31+ this.ncurdatemoney.hashCode() ;
        if(this.sxcheckresult!=null)
          _hash_ = _hash_ * 31+ this.sxcheckresult.hashCode() ;
        if(this.sxcheckreason!=null)
          _hash_ = _hash_ * 31+ this.sxcheckreason.hashCode() ;
        if(this.shold1!=null)
          _hash_ = _hash_ * 31+ this.shold1.hashCode() ;
        if(this.shold2!=null)
          _hash_ = _hash_ * 31+ this.shold2.hashCode() ;
        if(this.shold3!=null)
          _hash_ = _hash_ * 31+ this.shold3.hashCode() ;
        if(this.shold4!=null)
          _hash_ = _hash_ * 31+ this.shold4.hashCode() ;
        if(this.sext1!=null)
          _hash_ = _hash_ * 31+ this.sext1.hashCode() ;
        if(this.sext2!=null)
          _hash_ = _hash_ * 31+ this.sext2.hashCode() ;
        if(this.sext3!=null)
          _hash_ = _hash_ * 31+ this.sext3.hashCode() ;
        if(this.sext4!=null)
          _hash_ = _hash_ * 31+ this.sext4.hashCode() ;
        if(this.sext5!=null)
          _hash_ = _hash_ * 31+ this.sext5.hashCode() ;

		return _hash_;
	
	}

     /* Creates and returns a copy of this object. */
    public Object clone()
    {
        HtfReconcilePayquotaSubDto bean = new HtfReconcilePayquotaSubDto();

          bean.ivousrlno = this.ivousrlno;

          bean.iseqno = this.iseqno;

          if (this.sid != null)
            bean.sid = new String(this.sid);
          if (this.ssupdepcode != null)
            bean.ssupdepcode = new String(this.ssupdepcode);
          if (this.ssupdepname != null)
            bean.ssupdepname = new String(this.ssupdepname);
          if (this.sfundtypecode != null)
            bean.sfundtypecode = new String(this.sfundtypecode);
          if (this.sfundtypename != null)
            bean.sfundtypename = new String(this.sfundtypename);
          if (this.spaybankcode != null)
            bean.spaybankcode = new String(this.spaybankcode);
          if (this.spaybankname != null)
            bean.spaybankname = new String(this.spaybankname);
          if (this.spaybankno != null)
            bean.spaybankno = new String(this.spaybankno);
          if (this.sexpfunccode != null)
            bean.sexpfunccode = new String(this.sexpfunccode);
          if (this.sexpfuncname != null)
            bean.sexpfuncname = new String(this.sexpfuncname);
          if (this.sprocatcode != null)
            bean.sprocatcode = new String(this.sprocatcode);
          if (this.sprocatname != null)
            bean.sprocatname = new String(this.sprocatname);
          if (this.spaytypecode != null)
            bean.spaytypecode = new String(this.spaytypecode);
          if (this.spaytypename != null)
            bean.spaytypename = new String(this.spaytypename);
          if (this.npredatemoney != null)
            bean.npredatemoney = new BigDecimal(this.npredatemoney.toString());
          if (this.nclearamt != null)
            bean.nclearamt = new BigDecimal(this.nclearamt.toString());
          if (this.ncurreckmoney != null)
            bean.ncurreckmoney = new BigDecimal(this.ncurreckmoney.toString());
          if (this.ncurdatemoney != null)
            bean.ncurdatemoney = new BigDecimal(this.ncurdatemoney.toString());
          if (this.sxcheckresult != null)
            bean.sxcheckresult = new String(this.sxcheckresult);
          if (this.sxcheckreason != null)
            bean.sxcheckreason = new String(this.sxcheckreason);
          if (this.shold1 != null)
            bean.shold1 = new String(this.shold1);
          if (this.shold2 != null)
            bean.shold2 = new String(this.shold2);
          if (this.shold3 != null)
            bean.shold3 = new String(this.shold3);
          if (this.shold4 != null)
            bean.shold4 = new String(this.shold4);
          if (this.sext1 != null)
            bean.sext1 = new String(this.sext1);
          if (this.sext2 != null)
            bean.sext2 = new String(this.sext2);
          if (this.sext3 != null)
            bean.sext3 = new String(this.sext3);
          if (this.sext4 != null)
            bean.sext4 = new String(this.sext4);
          if (this.sext5 != null)
            bean.sext5 = new String(this.sext5);
  
        return bean;
    }


   /* Returns a string representation of the object. */
    public String toString()
    {
        String sep = "; ";
        StringBuffer sb = new StringBuffer();
        sb.append("HtfReconcilePayquotaSubDto").append(sep);
        sb.append("[ivousrlno]").append(" = ").append(ivousrlno).append(sep);
        sb.append("[iseqno]").append(" = ").append(iseqno).append(sep);
        sb.append("[sid]").append(" = ").append(sid).append(sep);
        sb.append("[ssupdepcode]").append(" = ").append(ssupdepcode).append(sep);
        sb.append("[ssupdepname]").append(" = ").append(ssupdepname).append(sep);
        sb.append("[sfundtypecode]").append(" = ").append(sfundtypecode).append(sep);
        sb.append("[sfundtypename]").append(" = ").append(sfundtypename).append(sep);
        sb.append("[spaybankcode]").append(" = ").append(spaybankcode).append(sep);
        sb.append("[spaybankname]").append(" = ").append(spaybankname).append(sep);
        sb.append("[spaybankno]").append(" = ").append(spaybankno).append(sep);
        sb.append("[sexpfunccode]").append(" = ").append(sexpfunccode).append(sep);
        sb.append("[sexpfuncname]").append(" = ").append(sexpfuncname).append(sep);
        sb.append("[sprocatcode]").append(" = ").append(sprocatcode).append(sep);
        sb.append("[sprocatname]").append(" = ").append(sprocatname).append(sep);
        sb.append("[spaytypecode]").append(" = ").append(spaytypecode).append(sep);
        sb.append("[spaytypename]").append(" = ").append(spaytypename).append(sep);
        sb.append("[npredatemoney]").append(" = ").append(npredatemoney).append(sep);
        sb.append("[nclearamt]").append(" = ").append(nclearamt).append(sep);
        sb.append("[ncurreckmoney]").append(" = ").append(ncurreckmoney).append(sep);
        sb.append("[ncurdatemoney]").append(" = ").append(ncurdatemoney).append(sep);
        sb.append("[sxcheckresult]").append(" = ").append(sxcheckresult).append(sep);
        sb.append("[sxcheckreason]").append(" = ").append(sxcheckreason).append(sep);
        sb.append("[shold1]").append(" = ").append(shold1).append(sep);
        sb.append("[shold2]").append(" = ").append(shold2).append(sep);
        sb.append("[shold3]").append(" = ").append(shold3).append(sep);
        sb.append("[shold4]").append(" = ").append(shold4).append(sep);
        sb.append("[sext1]").append(" = ").append(sext1).append(sep);
        sb.append("[sext2]").append(" = ").append(sext2).append(sep);
        sb.append("[sext3]").append(" = ").append(sext3).append(sep);
        sb.append("[sext4]").append(" = ").append(sext4).append(sep);
        sb.append("[sext5]").append(" = ").append(sext5).append(sep);
            return sb.toString();
    }

  /* Returns value valid checking String , NULL is Valid*/
   public String  checkValid()
  {
  	StringBuffer sb = new StringBuffer() ;

    //check field I_VOUSRLNO
      if (this.getIvousrlno()==null)
             sb.append("I_VOUSRLNO外键联合主键不能为空; ");
      
    //check field I_SEQNO
      if (this.getIseqno()==null)
             sb.append("I_SEQNO联合主键不能为空; ");
      
    //check field S_ID
      if (this.getSid()==null)
             sb.append("S_ID序号不能为空; ");
      if (this.getSid()!=null)
             if (this.getSid().getBytes().length > 38)
                sb.append("S_ID序号宽度不能超过 "+38+"个字符; ");
    
    //check field S_SUPDEPCODE
      if (this.getSsupdepcode()==null)
             sb.append("S_SUPDEPCODE一级预算单位编码不能为空; ");
      if (this.getSsupdepcode()!=null)
             if (this.getSsupdepcode().getBytes().length > 15)
                sb.append("S_SUPDEPCODE一级预算单位编码宽度不能超过 "+15+"个字符; ");
    
    //check field S_SUPDEPNAME
      if (this.getSsupdepname()==null)
             sb.append("S_SUPDEPNAME一级预算单位名称不能为空; ");
      if (this.getSsupdepname()!=null)
             if (this.getSsupdepname().getBytes().length > 60)
                sb.append("S_SUPDEPNAME一级预算单位名称宽度不能超过 "+60+"个字符; ");
    
    //check field S_FUNDTYPECODE
      if (this.getSfundtypecode()!=null)
             if (this.getSfundtypecode().getBytes().length > 42)
                sb.append("S_FUNDTYPECODE资金性质编码宽度不能超过 "+42+"个字符; ");
    
    //check field S_FUNDTYPENAME
      if (this.getSfundtypename()!=null)
             if (this.getSfundtypename().getBytes().length > 60)
                sb.append("S_FUNDTYPENAME资金性质名称宽度不能超过 "+60+"个字符; ");
    
    //check field S_PAYBANKCODE
      if (this.getSpaybankcode()!=null)
             if (this.getSpaybankcode().getBytes().length > 42)
                sb.append("S_PAYBANKCODE代理银行编码宽度不能超过 "+42+"个字符; ");
    
    //check field S_PAYBANKNAME
      if (this.getSpaybankname()!=null)
             if (this.getSpaybankname().getBytes().length > 60)
                sb.append("S_PAYBANKNAME代理银行名称宽度不能超过 "+60+"个字符; ");
    
    //check field S_PAYBANKNO
      if (this.getSpaybankno()==null)
             sb.append("S_PAYBANKNO代理银行行号不能为空; ");
      if (this.getSpaybankno()!=null)
             if (this.getSpaybankno().getBytes().length > 12)
                sb.append("S_PAYBANKNO代理银行行号宽度不能超过 "+12+"个字符; ");
    
    //check field S_EXPFUNCCODE
      if (this.getSexpfunccode()==null)
             sb.append("S_EXPFUNCCODE支出功能分类科目编码不能为空; ");
      if (this.getSexpfunccode()!=null)
             if (this.getSexpfunccode().getBytes().length > 42)
                sb.append("S_EXPFUNCCODE支出功能分类科目编码宽度不能超过 "+42+"个字符; ");
    
    //check field S_EXPFUNCNAME
      if (this.getSexpfuncname()==null)
             sb.append("S_EXPFUNCNAME支出功能分类科目名称不能为空; ");
      if (this.getSexpfuncname()!=null)
             if (this.getSexpfuncname().getBytes().length > 60)
                sb.append("S_EXPFUNCNAME支出功能分类科目名称宽度不能超过 "+60+"个字符; ");
    
    //check field S_PROCATCODE
      if (this.getSprocatcode()!=null)
             if (this.getSprocatcode().getBytes().length > 42)
                sb.append("S_PROCATCODE收支管理编码宽度不能超过 "+42+"个字符; ");
    
    //check field S_PROCATNAME
      if (this.getSprocatname()!=null)
             if (this.getSprocatname().getBytes().length > 60)
                sb.append("S_PROCATNAME收支管理名称宽度不能超过 "+60+"个字符; ");
    
    //check field S_PAYTYPECODE
      if (this.getSpaytypecode()==null)
             sb.append("S_PAYTYPECODE支付方式编码不能为空; ");
      if (this.getSpaytypecode()!=null)
             if (this.getSpaytypecode().getBytes().length > 42)
                sb.append("S_PAYTYPECODE支付方式编码宽度不能超过 "+42+"个字符; ");
    
    //check field S_PAYTYPENAME
      if (this.getSpaytypename()==null)
             sb.append("S_PAYTYPENAME支付方式名称不能为空; ");
      if (this.getSpaytypename()!=null)
             if (this.getSpaytypename().getBytes().length > 60)
                sb.append("S_PAYTYPENAME支付方式名称宽度不能超过 "+60+"个字符; ");
    
    //check field N_PREDATEMONEY
      
    //check field N_CLEARAMT
      if (this.getNclearamt()==null)
             sb.append("N_CLEARAMT本期新增清算额度不能为空; ");
      
    //check field N_CURRECKMONEY
      
    //check field N_CURDATEMONEY
      
    //check field S_XCHECKRESULT
      if (this.getSxcheckresult()!=null)
             if (this.getSxcheckresult().getBytes().length > 5)
                sb.append("S_XCHECKRESULT对帐结果宽度不能超过 "+5+"个字符; ");
    
    //check field S_XCHECKREASON
      if (this.getSxcheckreason()!=null)
             if (this.getSxcheckreason().getBytes().length > 200)
                sb.append("S_XCHECKREASON不符原因宽度不能超过 "+200+"个字符; ");
    
    //check field S_HOLD1
      if (this.getShold1()!=null)
             if (this.getShold1().getBytes().length > 42)
                sb.append("S_HOLD1预留字段1宽度不能超过 "+42+"个字符; ");
    
    //check field S_HOLD2
      if (this.getShold2()!=null)
             if (this.getShold2().getBytes().length > 42)
                sb.append("S_HOLD2预留字段2宽度不能超过 "+42+"个字符; ");
    
    //check field S_HOLD3
      if (this.getShold3()!=null)
             if (this.getShold3().getBytes().length > 42)
                sb.append("S_HOLD3预留字段3宽度不能超过 "+42+"个字符; ");
    
    //check field S_HOLD4
      if (this.getShold4()!=null)
             if (this.getShold4().getBytes().length > 42)
                sb.append("S_HOLD4预留字段4宽度不能超过 "+42+"个字符; ");
    
    //check field S_EXT1
      if (this.getSext1()!=null)
             if (this.getSext1().getBytes().length > 50)
                sb.append("S_EXT1扩展宽度不能超过 "+50+"个字符; ");
    
    //check field S_EXT2
      if (this.getSext2()!=null)
             if (this.getSext2().getBytes().length > 50)
                sb.append("S_EXT2扩展宽度不能超过 "+50+"个字符; ");
    
    //check field S_EXT3
      if (this.getSext3()!=null)
             if (this.getSext3().getBytes().length > 50)
                sb.append("S_EXT3扩展宽度不能超过 "+50+"个字符; ");
    
    //check field S_EXT4
      if (this.getSext4()!=null)
             if (this.getSext4().getBytes().length > 50)
                sb.append("S_EXT4扩展宽度不能超过 "+50+"个字符; ");
    
    //check field S_EXT5
      if (this.getSext5()!=null)
             if (this.getSext5().getBytes().length > 50)
                sb.append("S_EXT5扩展宽度不能超过 "+50+"个字符; ");
    

 	String msg = sb.toString() ;
	if (msg.length() == 0)
		  return null ;

  return  msg;
  }
  /* Returns value valid checking String , NULL is Valid*/
   public String  checkValid(String[] _columnNames)
  {
  	StringBuffer sb = new StringBuffer() ;
    // check columnNames
    String checkNameMsg = checkColumnNamesValid(_columnNames);
    if (checkNameMsg != null) {
         return checkNameMsg;
    }
    //check field I_VOUSRLNO
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("I_VOUSRLNO")) {
               if (this.getIvousrlno()==null)
                    sb.append("I_VOUSRLNO 外键联合主键不能为空; ");
               break;
         }
  }
    
    //check field I_SEQNO
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("I_SEQNO")) {
               if (this.getIseqno()==null)
                    sb.append("I_SEQNO 联合主键不能为空; ");
               break;
         }
  }
    
    //check field S_ID
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_ID")) {
               if (this.getSid()==null)
                    sb.append("S_ID 序号不能为空; ");
               if (this.getSid()!=null)
                    if (this.getSid().getBytes().length > 38)
                        sb.append("S_ID 序号宽度不能超过 "+38+"个字符");
             break;
         }
  }
    
    //check field S_SUPDEPCODE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_SUPDEPCODE")) {
               if (this.getSsupdepcode()==null)
                    sb.append("S_SUPDEPCODE 一级预算单位编码不能为空; ");
               if (this.getSsupdepcode()!=null)
                    if (this.getSsupdepcode().getBytes().length > 15)
                        sb.append("S_SUPDEPCODE 一级预算单位编码宽度不能超过 "+15+"个字符");
             break;
         }
  }
    
    //check field S_SUPDEPNAME
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_SUPDEPNAME")) {
               if (this.getSsupdepname()==null)
                    sb.append("S_SUPDEPNAME 一级预算单位名称不能为空; ");
               if (this.getSsupdepname()!=null)
                    if (this.getSsupdepname().getBytes().length > 60)
                        sb.append("S_SUPDEPNAME 一级预算单位名称宽度不能超过 "+60+"个字符");
             break;
         }
  }
    
    //check field S_FUNDTYPECODE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_FUNDTYPECODE")) {
                 if (this.getSfundtypecode()!=null)
                    if (this.getSfundtypecode().getBytes().length > 42)
                        sb.append("S_FUNDTYPECODE 资金性质编码宽度不能超过 "+42+"个字符");
             break;
         }
  }
    
    //check field S_FUNDTYPENAME
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_FUNDTYPENAME")) {
                 if (this.getSfundtypename()!=null)
                    if (this.getSfundtypename().getBytes().length > 60)
                        sb.append("S_FUNDTYPENAME 资金性质名称宽度不能超过 "+60+"个字符");
             break;
         }
  }
    
    //check field S_PAYBANKCODE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_PAYBANKCODE")) {
                 if (this.getSpaybankcode()!=null)
                    if (this.getSpaybankcode().getBytes().length > 42)
                        sb.append("S_PAYBANKCODE 代理银行编码宽度不能超过 "+42+"个字符");
             break;
         }
  }
    
    //check field S_PAYBANKNAME
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_PAYBANKNAME")) {
                 if (this.getSpaybankname()!=null)
                    if (this.getSpaybankname().getBytes().length > 60)
                        sb.append("S_PAYBANKNAME 代理银行名称宽度不能超过 "+60+"个字符");
             break;
         }
  }
    
    //check field S_PAYBANKNO
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_PAYBANKNO")) {
               if (this.getSpaybankno()==null)
                    sb.append("S_PAYBANKNO 代理银行行号不能为空; ");
               if (this.getSpaybankno()!=null)
                    if (this.getSpaybankno().getBytes().length > 12)
                        sb.append("S_PAYBANKNO 代理银行行号宽度不能超过 "+12+"个字符");
             break;
         }
  }
    
    //check field S_EXPFUNCCODE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_EXPFUNCCODE")) {
               if (this.getSexpfunccode()==null)
                    sb.append("S_EXPFUNCCODE 支出功能分类科目编码不能为空; ");
               if (this.getSexpfunccode()!=null)
                    if (this.getSexpfunccode().getBytes().length > 42)
                        sb.append("S_EXPFUNCCODE 支出功能分类科目编码宽度不能超过 "+42+"个字符");
             break;
         }
  }
    
    //check field S_EXPFUNCNAME
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_EXPFUNCNAME")) {
               if (this.getSexpfuncname()==null)
                    sb.append("S_EXPFUNCNAME 支出功能分类科目名称不能为空; ");
               if (this.getSexpfuncname()!=null)
                    if (this.getSexpfuncname().getBytes().length > 60)
                        sb.append("S_EXPFUNCNAME 支出功能分类科目名称宽度不能超过 "+60+"个字符");
             break;
         }
  }
    
    //check field S_PROCATCODE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_PROCATCODE")) {
                 if (this.getSprocatcode()!=null)
                    if (this.getSprocatcode().getBytes().length > 42)
                        sb.append("S_PROCATCODE 收支管理编码宽度不能超过 "+42+"个字符");
             break;
         }
  }
    
    //check field S_PROCATNAME
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_PROCATNAME")) {
                 if (this.getSprocatname()!=null)
                    if (this.getSprocatname().getBytes().length > 60)
                        sb.append("S_PROCATNAME 收支管理名称宽度不能超过 "+60+"个字符");
             break;
         }
  }
    
    //check field S_PAYTYPECODE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_PAYTYPECODE")) {
               if (this.getSpaytypecode()==null)
                    sb.append("S_PAYTYPECODE 支付方式编码不能为空; ");
               if (this.getSpaytypecode()!=null)
                    if (this.getSpaytypecode().getBytes().length > 42)
                        sb.append("S_PAYTYPECODE 支付方式编码宽度不能超过 "+42+"个字符");
             break;
         }
  }
    
    //check field S_PAYTYPENAME
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_PAYTYPENAME")) {
               if (this.getSpaytypename()==null)
                    sb.append("S_PAYTYPENAME 支付方式名称不能为空; ");
               if (this.getSpaytypename()!=null)
                    if (this.getSpaytypename().getBytes().length > 60)
                        sb.append("S_PAYTYPENAME 支付方式名称宽度不能超过 "+60+"个字符");
             break;
         }
  }
    
    //check field N_PREDATEMONEY
          
    //check field N_CLEARAMT
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("N_CLEARAMT")) {
               if (this.getNclearamt()==null)
                    sb.append("N_CLEARAMT 本期新增清算额度不能为空; ");
               break;
         }
  }
    
    //check field N_CURRECKMONEY
          
    //check field N_CURDATEMONEY
          
    //check field S_XCHECKRESULT
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_XCHECKRESULT")) {
                 if (this.getSxcheckresult()!=null)
                    if (this.getSxcheckresult().getBytes().length > 5)
                        sb.append("S_XCHECKRESULT 对帐结果宽度不能超过 "+5+"个字符");
             break;
         }
  }
    
    //check field S_XCHECKREASON
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_XCHECKREASON")) {
                 if (this.getSxcheckreason()!=null)
                    if (this.getSxcheckreason().getBytes().length > 200)
                        sb.append("S_XCHECKREASON 不符原因宽度不能超过 "+200+"个字符");
             break;
         }
  }
    
    //check field S_HOLD1
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_HOLD1")) {
                 if (this.getShold1()!=null)
                    if (this.getShold1().getBytes().length > 42)
                        sb.append("S_HOLD1 预留字段1宽度不能超过 "+42+"个字符");
             break;
         }
  }
    
    //check field S_HOLD2
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_HOLD2")) {
                 if (this.getShold2()!=null)
                    if (this.getShold2().getBytes().length > 42)
                        sb.append("S_HOLD2 预留字段2宽度不能超过 "+42+"个字符");
             break;
         }
  }
    
    //check field S_HOLD3
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_HOLD3")) {
                 if (this.getShold3()!=null)
                    if (this.getShold3().getBytes().length > 42)
                        sb.append("S_HOLD3 预留字段3宽度不能超过 "+42+"个字符");
             break;
         }
  }
    
    //check field S_HOLD4
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_HOLD4")) {
                 if (this.getShold4()!=null)
                    if (this.getShold4().getBytes().length > 42)
                        sb.append("S_HOLD4 预留字段4宽度不能超过 "+42+"个字符");
             break;
         }
  }
    
    //check field S_EXT1
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_EXT1")) {
                 if (this.getSext1()!=null)
                    if (this.getSext1().getBytes().length > 50)
                        sb.append("S_EXT1 扩展宽度不能超过 "+50+"个字符");
             break;
         }
  }
    
    //check field S_EXT2
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_EXT2")) {
                 if (this.getSext2()!=null)
                    if (this.getSext2().getBytes().length > 50)
                        sb.append("S_EXT2 扩展宽度不能超过 "+50+"个字符");
             break;
         }
  }
    
    //check field S_EXT3
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_EXT3")) {
                 if (this.getSext3()!=null)
                    if (this.getSext3().getBytes().length > 50)
                        sb.append("S_EXT3 扩展宽度不能超过 "+50+"个字符");
             break;
         }
  }
    
    //check field S_EXT4
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_EXT4")) {
                 if (this.getSext4()!=null)
                    if (this.getSext4().getBytes().length > 50)
                        sb.append("S_EXT4 扩展宽度不能超过 "+50+"个字符");
             break;
         }
  }
    
    //check field S_EXT5
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_EXT5")) {
                 if (this.getSext5()!=null)
                    if (this.getSext5().getBytes().length > 50)
                        sb.append("S_EXT5 扩展宽度不能超过 "+50+"个字符");
             break;
         }
  }
    
 	String msg = sb.toString() ;
	if (msg.length() == 0)
		  return null ;

  return  msg;
  }
  /* Returns value valid checking String , NULL is Valid*/
	public String checkValidExcept(String[] _columnNames) {
		String msg = checkColumnNamesValid(_columnNames);
		if (msg != null) {
			return msg;
		}
		String[] columnCheckNames = new String[columnNames().length
				- _columnNames.length];
		int k = 0;
		for (int i = 0; i < columnNames().length; i++) {
			boolean checkNameInColumn = true;
			for (int j = 0; j < _columnNames.length; j++) {
				if (_columnNames[i].equals(columnNames()[j])) {
					checkNameInColumn = false;
					break;
				}
			}
			if (checkNameInColumn) {
				columnCheckNames[k] = columnNames()[i];
				k++;
			}
		}
		return checkValid(columnCheckNames);
	}
	/* Returns value valid checking String , NULL is Valid */
	public String checkColumnNamesValid(String[] _columnNames) {
		StringBuffer sb = new StringBuffer();
		if (_columnNames.length > columnNames().length) {
			return "输入字段个数多于表中字段个数; ";
		}
		// check columnNames
		for (int i = 0; i < _columnNames.length; i++) {
			boolean checkNameValid = false;
			for (int j = 0; j < columnNames().length; j++) {
				if (_columnNames[i] != null
						&& _columnNames[i].equals(columnNames()[j])) {
					checkNameValid = true;
					break;
				}
			}
			if (!checkNameValid)
				sb.append("输入字段 " + _columnNames[i] + " 不在该表字段中; ");
		}
		String msg = sb.toString();
		if (msg.length() == 0)
			return null;

		return msg;
	}
/*******************************************************
*
*  implement IDto
*
*****************************************************/

  /* if this Dto has children Dtos*/
  public boolean  isParent() {
     return false;
  };

  /* get the children Dtos if this has children*/
  public IDto[]  getChildren() {
     return null;
  };

  /* set the children Dtos if this has children*/
  public void  setChildren(IDto[] _dtos) 
  {
     throw new RuntimeException("此dto没有相关联的子dto，不能进行此操作");
  };
  
  /* return the IPK class  */
    public IPK      getPK(){
      HtfReconcilePayquotaSubPK pk = new HtfReconcilePayquotaSubPK();
      pk.setIvousrlno(getIvousrlno());
      pk.setIseqno(getIseqno());
      return pk;
    };
}
