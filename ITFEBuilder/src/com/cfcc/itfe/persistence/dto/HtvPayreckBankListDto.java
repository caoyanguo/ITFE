    
package com.cfcc.itfe.persistence.dto;

import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Time;
import java.sql.Timestamp ;

import java.lang.reflect.Array;

import com.cfcc.jaf.persistence.jaform.parent.IDto ;
import com.cfcc.jaf.persistence.jaform.parent.IPK;
import com.cfcc.itfe.persistence.pk.HtvPayreckBankListPK;
/**
 * <p>Title: DTO of table: HTV_PAYRECK_BANK_LIST</p>
 * <p>Description:  Data Transfer Object </p>
 * <p>Copyright: Copyright (c) 2005</p>
 * <p>Company: CFCC </p>
 * <p>Generation Time: 2014-12-25 15:28:56 </p>
 *  Do NOT change this file by hand.
 *  This java source file is generated by JAF_ORM .
 *  dto.vm version timestamp: 2008-01-08 16:30:00 
 *
 * @author win7
 */

public class HtvPayreckBankListDto   
                              implements IDto  {
/********************************************************
 *   fields
 ********************************************************/

    /**
    *  I_VOUSRLNO BIGINT , PK   , NOT NULL       */
    protected Long ivousrlno;
    /**
    *  I_SEQNO INTEGER , PK   , NOT NULL       */
    protected Integer iseqno;
    /**
    *  S_BDGORGCODE VARCHAR   , NOT NULL       */
    protected String sbdgorgcode;
    /**
    *  S_FUNCBDGSBTCODE VARCHAR   , NOT NULL       */
    protected String sfuncbdgsbtcode;
    /**
    *  S_ECNOMICSUBJECTCODE VARCHAR         */
    protected String secnomicsubjectcode;
    /**
    *  F_AMT DECIMAL   , NOT NULL       */
    protected BigDecimal famt;
    /**
    *  S_ACCTPROP CHARACTER   , NOT NULL       */
    protected String sacctprop;
    /**
    *  TS_UPDATE TIMESTAMP   , NOT NULL       */
    protected Timestamp tsupdate;
    /**
    *  S_SUPDEPNAME VARCHAR         */
    protected String ssupdepname;
    /**
    *  S_EXPFUNCNAME VARCHAR         */
    protected String sexpfuncname;
    /**
    *  S_PAYSUMMARYNAME VARCHAR         */
    protected String spaysummaryname;
    /**
    *  S_HOLD1 VARCHAR         */
    protected String shold1;
    /**
    *  S_HOLD2 VARCHAR         */
    protected String shold2;
    /**
    *  S_HOLD3 VARCHAR         */
    protected String shold3;
    /**
    *  S_HOLD4 VARCHAR         */
    protected String shold4;
    /**
    *  S_VOUCHERN0 VARCHAR         */
    protected String svouchern0;
    /**
    * 明细ID S_ID VARCHAR         */
    protected String sid;
    /**
    * 商行办理时间 S_PAYDATE VARCHAR         */
    protected String spaydate;


/******************************************************
*
*  getter and setter
*
*******************************************************/


    public Long getIvousrlno()
    {
        return ivousrlno;
    }
     /**
     *   Setter I_VOUSRLNO, PK , NOT NULL        * */
    public void setIvousrlno(Long _ivousrlno) {
        this.ivousrlno = _ivousrlno;
    }


    public Integer getIseqno()
    {
        return iseqno;
    }
     /**
     *   Setter I_SEQNO, PK , NOT NULL        * */
    public void setIseqno(Integer _iseqno) {
        this.iseqno = _iseqno;
    }


    public String getSbdgorgcode()
    {
        return sbdgorgcode;
    }
     /**
     *   Setter S_BDGORGCODE , NOT NULL        * */
    public void setSbdgorgcode(String _sbdgorgcode) {
        this.sbdgorgcode = _sbdgorgcode;
    }


    public String getSfuncbdgsbtcode()
    {
        return sfuncbdgsbtcode;
    }
     /**
     *   Setter S_FUNCBDGSBTCODE , NOT NULL        * */
    public void setSfuncbdgsbtcode(String _sfuncbdgsbtcode) {
        this.sfuncbdgsbtcode = _sfuncbdgsbtcode;
    }


    public String getSecnomicsubjectcode()
    {
        return secnomicsubjectcode;
    }
     /**
     *   Setter S_ECNOMICSUBJECTCODE        * */
    public void setSecnomicsubjectcode(String _secnomicsubjectcode) {
        this.secnomicsubjectcode = _secnomicsubjectcode;
    }


    public BigDecimal getFamt()
    {
        return famt;
    }
     /**
     *   Setter F_AMT , NOT NULL        * */
    public void setFamt(BigDecimal _famt) {
        this.famt = _famt;
    }


    public String getSacctprop()
    {
        return sacctprop;
    }
     /**
     *   Setter S_ACCTPROP , NOT NULL        * */
    public void setSacctprop(String _sacctprop) {
        this.sacctprop = _sacctprop;
    }


    public Timestamp getTsupdate()
    {
        return tsupdate;
    }
     /**
     *   Setter TS_UPDATE , NOT NULL        * */
    public void setTsupdate(Timestamp _tsupdate) {
        this.tsupdate = _tsupdate;
    }


    public String getSsupdepname()
    {
        return ssupdepname;
    }
     /**
     *   Setter S_SUPDEPNAME        * */
    public void setSsupdepname(String _ssupdepname) {
        this.ssupdepname = _ssupdepname;
    }


    public String getSexpfuncname()
    {
        return sexpfuncname;
    }
     /**
     *   Setter S_EXPFUNCNAME        * */
    public void setSexpfuncname(String _sexpfuncname) {
        this.sexpfuncname = _sexpfuncname;
    }


    public String getSpaysummaryname()
    {
        return spaysummaryname;
    }
     /**
     *   Setter S_PAYSUMMARYNAME        * */
    public void setSpaysummaryname(String _spaysummaryname) {
        this.spaysummaryname = _spaysummaryname;
    }


    public String getShold1()
    {
        return shold1;
    }
     /**
     *   Setter S_HOLD1        * */
    public void setShold1(String _shold1) {
        this.shold1 = _shold1;
    }


    public String getShold2()
    {
        return shold2;
    }
     /**
     *   Setter S_HOLD2        * */
    public void setShold2(String _shold2) {
        this.shold2 = _shold2;
    }


    public String getShold3()
    {
        return shold3;
    }
     /**
     *   Setter S_HOLD3        * */
    public void setShold3(String _shold3) {
        this.shold3 = _shold3;
    }


    public String getShold4()
    {
        return shold4;
    }
     /**
     *   Setter S_HOLD4        * */
    public void setShold4(String _shold4) {
        this.shold4 = _shold4;
    }


    public String getSvouchern0()
    {
        return svouchern0;
    }
     /**
     *   Setter S_VOUCHERN0        * */
    public void setSvouchern0(String _svouchern0) {
        this.svouchern0 = _svouchern0;
    }


    public String getSid()
    {
        return sid;
    }
     /**
     *  明细ID Setter S_ID        * */
    public void setSid(String _sid) {
        this.sid = _sid;
    }


    public String getSpaydate()
    {
        return spaydate;
    }
     /**
     *  商行办理时间 Setter S_PAYDATE        * */
    public void setSpaydate(String _spaydate) {
        this.spaydate = _spaydate;
    }




/******************************************************
*
*  Get Column Name
*
*******************************************************/
    /**
    *   Getter I_VOUSRLNO, PK , NOT NULL       * */
    public static String  columnIvousrlno()
    {
        return "I_VOUSRLNO";
    }
   
    /**
    *   Getter I_SEQNO, PK , NOT NULL       * */
    public static String  columnIseqno()
    {
        return "I_SEQNO";
    }
   
    /**
    *   Getter S_BDGORGCODE , NOT NULL       * */
    public static String  columnSbdgorgcode()
    {
        return "S_BDGORGCODE";
    }
   
    /**
    *   Getter S_FUNCBDGSBTCODE , NOT NULL       * */
    public static String  columnSfuncbdgsbtcode()
    {
        return "S_FUNCBDGSBTCODE";
    }
   
    /**
    *   Getter S_ECNOMICSUBJECTCODE       * */
    public static String  columnSecnomicsubjectcode()
    {
        return "S_ECNOMICSUBJECTCODE";
    }
   
    /**
    *   Getter F_AMT , NOT NULL       * */
    public static String  columnFamt()
    {
        return "F_AMT";
    }
   
    /**
    *   Getter S_ACCTPROP , NOT NULL       * */
    public static String  columnSacctprop()
    {
        return "S_ACCTPROP";
    }
   
    /**
    *   Getter TS_UPDATE , NOT NULL       * */
    public static String  columnTsupdate()
    {
        return "TS_UPDATE";
    }
   
    /**
    *   Getter S_SUPDEPNAME       * */
    public static String  columnSsupdepname()
    {
        return "S_SUPDEPNAME";
    }
   
    /**
    *   Getter S_EXPFUNCNAME       * */
    public static String  columnSexpfuncname()
    {
        return "S_EXPFUNCNAME";
    }
   
    /**
    *   Getter S_PAYSUMMARYNAME       * */
    public static String  columnSpaysummaryname()
    {
        return "S_PAYSUMMARYNAME";
    }
   
    /**
    *   Getter S_HOLD1       * */
    public static String  columnShold1()
    {
        return "S_HOLD1";
    }
   
    /**
    *   Getter S_HOLD2       * */
    public static String  columnShold2()
    {
        return "S_HOLD2";
    }
   
    /**
    *   Getter S_HOLD3       * */
    public static String  columnShold3()
    {
        return "S_HOLD3";
    }
   
    /**
    *   Getter S_HOLD4       * */
    public static String  columnShold4()
    {
        return "S_HOLD4";
    }
   
    /**
    *   Getter S_VOUCHERN0       * */
    public static String  columnSvouchern0()
    {
        return "S_VOUCHERN0";
    }
   
    /**
    *  明细ID Getter S_ID       * */
    public static String  columnSid()
    {
        return "S_ID";
    }
   
    /**
    *  商行办理时间 Getter S_PAYDATE       * */
    public static String  columnSpaydate()
    {
        return "S_PAYDATE";
    }
   


    /**
    *  Table Name
    */
    public static String tableName(){
        return "HTV_PAYRECK_BANK_LIST";
    }
    
    /**
    *  Columns
    */
    public static String[] columnNames(){
        String[] columnNames = new String[18];        
        columnNames[0]="I_VOUSRLNO";
        columnNames[1]="I_SEQNO";
        columnNames[2]="S_BDGORGCODE";
        columnNames[3]="S_FUNCBDGSBTCODE";
        columnNames[4]="S_ECNOMICSUBJECTCODE";
        columnNames[5]="F_AMT";
        columnNames[6]="S_ACCTPROP";
        columnNames[7]="TS_UPDATE";
        columnNames[8]="S_SUPDEPNAME";
        columnNames[9]="S_EXPFUNCNAME";
        columnNames[10]="S_PAYSUMMARYNAME";
        columnNames[11]="S_HOLD1";
        columnNames[12]="S_HOLD2";
        columnNames[13]="S_HOLD3";
        columnNames[14]="S_HOLD4";
        columnNames[15]="S_VOUCHERN0";
        columnNames[16]="S_ID";
        columnNames[17]="S_PAYDATE";
        return columnNames;     
    }
/*******************************************************
*
*  supplementary methods
*
*****************************************************/


    /* Indicates whether some other object is "equal to" this one. */
    public boolean equals(Object obj)
    {
        if (this == obj)
            return true;

        if (obj == null || !(obj instanceof HtvPayreckBankListDto))
            return false;

        HtvPayreckBankListDto bean = (HtvPayreckBankListDto) obj;


      //compare field ivousrlno
      if((this.ivousrlno==null && bean.ivousrlno!=null) || (this.ivousrlno!=null && bean.ivousrlno==null))
          return false;
        else if(this.ivousrlno==null && bean.ivousrlno==null){
        }
        else{
          if(!bean.ivousrlno.equals(this.ivousrlno))
               return false;
     }
      //compare field iseqno
      if((this.iseqno==null && bean.iseqno!=null) || (this.iseqno!=null && bean.iseqno==null))
          return false;
        else if(this.iseqno==null && bean.iseqno==null){
        }
        else{
          if(!bean.iseqno.equals(this.iseqno))
               return false;
     }
      //compare field sbdgorgcode
      if((this.sbdgorgcode==null && bean.sbdgorgcode!=null) || (this.sbdgorgcode!=null && bean.sbdgorgcode==null))
          return false;
        else if(this.sbdgorgcode==null && bean.sbdgorgcode==null){
        }
        else{
          if(!bean.sbdgorgcode.equals(this.sbdgorgcode))
               return false;
     }
      //compare field sfuncbdgsbtcode
      if((this.sfuncbdgsbtcode==null && bean.sfuncbdgsbtcode!=null) || (this.sfuncbdgsbtcode!=null && bean.sfuncbdgsbtcode==null))
          return false;
        else if(this.sfuncbdgsbtcode==null && bean.sfuncbdgsbtcode==null){
        }
        else{
          if(!bean.sfuncbdgsbtcode.equals(this.sfuncbdgsbtcode))
               return false;
     }
      //compare field secnomicsubjectcode
      if((this.secnomicsubjectcode==null && bean.secnomicsubjectcode!=null) || (this.secnomicsubjectcode!=null && bean.secnomicsubjectcode==null))
          return false;
        else if(this.secnomicsubjectcode==null && bean.secnomicsubjectcode==null){
        }
        else{
          if(!bean.secnomicsubjectcode.equals(this.secnomicsubjectcode))
               return false;
     }
      //compare field famt
      if((this.famt==null && bean.famt!=null) || (this.famt!=null && bean.famt==null))
          return false;
        else if(this.famt==null && bean.famt==null){
        }
        else{
          if(!bean.famt.equals(this.famt))
               return false;
     }
      //compare field sacctprop
      if((this.sacctprop==null && bean.sacctprop!=null) || (this.sacctprop!=null && bean.sacctprop==null))
          return false;
        else if(this.sacctprop==null && bean.sacctprop==null){
        }
        else{
          if(!bean.sacctprop.equals(this.sacctprop))
               return false;
     }
      //compare field tsupdate
      if((this.tsupdate==null && bean.tsupdate!=null) || (this.tsupdate!=null && bean.tsupdate==null))
          return false;
        else if(this.tsupdate==null && bean.tsupdate==null){
        }
        else{
          if(!bean.tsupdate.equals(this.tsupdate))
               return false;
     }
      //compare field ssupdepname
      if((this.ssupdepname==null && bean.ssupdepname!=null) || (this.ssupdepname!=null && bean.ssupdepname==null))
          return false;
        else if(this.ssupdepname==null && bean.ssupdepname==null){
        }
        else{
          if(!bean.ssupdepname.equals(this.ssupdepname))
               return false;
     }
      //compare field sexpfuncname
      if((this.sexpfuncname==null && bean.sexpfuncname!=null) || (this.sexpfuncname!=null && bean.sexpfuncname==null))
          return false;
        else if(this.sexpfuncname==null && bean.sexpfuncname==null){
        }
        else{
          if(!bean.sexpfuncname.equals(this.sexpfuncname))
               return false;
     }
      //compare field spaysummaryname
      if((this.spaysummaryname==null && bean.spaysummaryname!=null) || (this.spaysummaryname!=null && bean.spaysummaryname==null))
          return false;
        else if(this.spaysummaryname==null && bean.spaysummaryname==null){
        }
        else{
          if(!bean.spaysummaryname.equals(this.spaysummaryname))
               return false;
     }
      //compare field shold1
      if((this.shold1==null && bean.shold1!=null) || (this.shold1!=null && bean.shold1==null))
          return false;
        else if(this.shold1==null && bean.shold1==null){
        }
        else{
          if(!bean.shold1.equals(this.shold1))
               return false;
     }
      //compare field shold2
      if((this.shold2==null && bean.shold2!=null) || (this.shold2!=null && bean.shold2==null))
          return false;
        else if(this.shold2==null && bean.shold2==null){
        }
        else{
          if(!bean.shold2.equals(this.shold2))
               return false;
     }
      //compare field shold3
      if((this.shold3==null && bean.shold3!=null) || (this.shold3!=null && bean.shold3==null))
          return false;
        else if(this.shold3==null && bean.shold3==null){
        }
        else{
          if(!bean.shold3.equals(this.shold3))
               return false;
     }
      //compare field shold4
      if((this.shold4==null && bean.shold4!=null) || (this.shold4!=null && bean.shold4==null))
          return false;
        else if(this.shold4==null && bean.shold4==null){
        }
        else{
          if(!bean.shold4.equals(this.shold4))
               return false;
     }
      //compare field svouchern0
      if((this.svouchern0==null && bean.svouchern0!=null) || (this.svouchern0!=null && bean.svouchern0==null))
          return false;
        else if(this.svouchern0==null && bean.svouchern0==null){
        }
        else{
          if(!bean.svouchern0.equals(this.svouchern0))
               return false;
     }
      //compare field sid
      if((this.sid==null && bean.sid!=null) || (this.sid!=null && bean.sid==null))
          return false;
        else if(this.sid==null && bean.sid==null){
        }
        else{
          if(!bean.sid.equals(this.sid))
               return false;
     }
      //compare field spaydate
      if((this.spaydate==null && bean.spaydate!=null) || (this.spaydate!=null && bean.spaydate==null))
          return false;
        else if(this.spaydate==null && bean.spaydate==null){
        }
        else{
          if(!bean.spaydate.equals(this.spaydate))
               return false;
     }



        return true;
    }

    /* return hashCode ,if A.equals(B) that A.hashCode()==B.hashCode() */
	public int hashCode()
	{
  
		int _hash_ = 1;
		
        if(this.ivousrlno!=null)
          _hash_ = _hash_ * 31+ this.ivousrlno.hashCode() ;
        if(this.iseqno!=null)
          _hash_ = _hash_ * 31+ this.iseqno.hashCode() ;
        if(this.sbdgorgcode!=null)
          _hash_ = _hash_ * 31+ this.sbdgorgcode.hashCode() ;
        if(this.sfuncbdgsbtcode!=null)
          _hash_ = _hash_ * 31+ this.sfuncbdgsbtcode.hashCode() ;
        if(this.secnomicsubjectcode!=null)
          _hash_ = _hash_ * 31+ this.secnomicsubjectcode.hashCode() ;
        if(this.famt!=null)
          _hash_ = _hash_ * 31+ this.famt.hashCode() ;
        if(this.sacctprop!=null)
          _hash_ = _hash_ * 31+ this.sacctprop.hashCode() ;
        if(this.tsupdate!=null)
          _hash_ = _hash_ * 31+ this.tsupdate.hashCode() ;
        if(this.ssupdepname!=null)
          _hash_ = _hash_ * 31+ this.ssupdepname.hashCode() ;
        if(this.sexpfuncname!=null)
          _hash_ = _hash_ * 31+ this.sexpfuncname.hashCode() ;
        if(this.spaysummaryname!=null)
          _hash_ = _hash_ * 31+ this.spaysummaryname.hashCode() ;
        if(this.shold1!=null)
          _hash_ = _hash_ * 31+ this.shold1.hashCode() ;
        if(this.shold2!=null)
          _hash_ = _hash_ * 31+ this.shold2.hashCode() ;
        if(this.shold3!=null)
          _hash_ = _hash_ * 31+ this.shold3.hashCode() ;
        if(this.shold4!=null)
          _hash_ = _hash_ * 31+ this.shold4.hashCode() ;
        if(this.svouchern0!=null)
          _hash_ = _hash_ * 31+ this.svouchern0.hashCode() ;
        if(this.sid!=null)
          _hash_ = _hash_ * 31+ this.sid.hashCode() ;
        if(this.spaydate!=null)
          _hash_ = _hash_ * 31+ this.spaydate.hashCode() ;

		return _hash_;
	
	}

     /* Creates and returns a copy of this object. */
    public Object clone()
    {
        HtvPayreckBankListDto bean = new HtvPayreckBankListDto();

          bean.ivousrlno = this.ivousrlno;

          bean.iseqno = this.iseqno;

          if (this.sbdgorgcode != null)
            bean.sbdgorgcode = new String(this.sbdgorgcode);
          if (this.sfuncbdgsbtcode != null)
            bean.sfuncbdgsbtcode = new String(this.sfuncbdgsbtcode);
          if (this.secnomicsubjectcode != null)
            bean.secnomicsubjectcode = new String(this.secnomicsubjectcode);
          if (this.famt != null)
            bean.famt = new BigDecimal(this.famt.toString());
          if (this.sacctprop != null)
            bean.sacctprop = new String(this.sacctprop);
          if (this.tsupdate != null)
            bean.tsupdate = (Timestamp) this.tsupdate.clone();
          if (this.ssupdepname != null)
            bean.ssupdepname = new String(this.ssupdepname);
          if (this.sexpfuncname != null)
            bean.sexpfuncname = new String(this.sexpfuncname);
          if (this.spaysummaryname != null)
            bean.spaysummaryname = new String(this.spaysummaryname);
          if (this.shold1 != null)
            bean.shold1 = new String(this.shold1);
          if (this.shold2 != null)
            bean.shold2 = new String(this.shold2);
          if (this.shold3 != null)
            bean.shold3 = new String(this.shold3);
          if (this.shold4 != null)
            bean.shold4 = new String(this.shold4);
          if (this.svouchern0 != null)
            bean.svouchern0 = new String(this.svouchern0);
          if (this.sid != null)
            bean.sid = new String(this.sid);
          if (this.spaydate != null)
            bean.spaydate = new String(this.spaydate);
  
        return bean;
    }


   /* Returns a string representation of the object. */
    public String toString()
    {
        String sep = "; ";
        StringBuffer sb = new StringBuffer();
        sb.append("HtvPayreckBankListDto").append(sep);
        sb.append("[ivousrlno]").append(" = ").append(ivousrlno).append(sep);
        sb.append("[iseqno]").append(" = ").append(iseqno).append(sep);
        sb.append("[sbdgorgcode]").append(" = ").append(sbdgorgcode).append(sep);
        sb.append("[sfuncbdgsbtcode]").append(" = ").append(sfuncbdgsbtcode).append(sep);
        sb.append("[secnomicsubjectcode]").append(" = ").append(secnomicsubjectcode).append(sep);
        sb.append("[famt]").append(" = ").append(famt).append(sep);
        sb.append("[sacctprop]").append(" = ").append(sacctprop).append(sep);
        sb.append("[tsupdate]").append(" = ").append(tsupdate).append(sep);
        sb.append("[ssupdepname]").append(" = ").append(ssupdepname).append(sep);
        sb.append("[sexpfuncname]").append(" = ").append(sexpfuncname).append(sep);
        sb.append("[spaysummaryname]").append(" = ").append(spaysummaryname).append(sep);
        sb.append("[shold1]").append(" = ").append(shold1).append(sep);
        sb.append("[shold2]").append(" = ").append(shold2).append(sep);
        sb.append("[shold3]").append(" = ").append(shold3).append(sep);
        sb.append("[shold4]").append(" = ").append(shold4).append(sep);
        sb.append("[svouchern0]").append(" = ").append(svouchern0).append(sep);
        sb.append("[sid]").append(" = ").append(sid).append(sep);
        sb.append("[spaydate]").append(" = ").append(spaydate).append(sep);
            return sb.toString();
    }

  /* Returns value valid checking String , NULL is Valid*/
   public String  checkValid()
  {
  	StringBuffer sb = new StringBuffer() ;

    //check field I_VOUSRLNO
      if (this.getIvousrlno()==null)
             sb.append("I_VOUSRLNO不能为空; ");
      
    //check field I_SEQNO
      if (this.getIseqno()==null)
             sb.append("I_SEQNO不能为空; ");
      
    //check field S_BDGORGCODE
      if (this.getSbdgorgcode()==null)
             sb.append("S_BDGORGCODE不能为空; ");
      if (this.getSbdgorgcode()!=null)
             if (this.getSbdgorgcode().getBytes().length > 20)
                sb.append("S_BDGORGCODE宽度不能超过 "+20+"个字符; ");
    
    //check field S_FUNCBDGSBTCODE
      if (this.getSfuncbdgsbtcode()==null)
             sb.append("S_FUNCBDGSBTCODE不能为空; ");
      if (this.getSfuncbdgsbtcode()!=null)
             if (this.getSfuncbdgsbtcode().getBytes().length > 30)
                sb.append("S_FUNCBDGSBTCODE宽度不能超过 "+30+"个字符; ");
    
    //check field S_ECNOMICSUBJECTCODE
      if (this.getSecnomicsubjectcode()!=null)
             if (this.getSecnomicsubjectcode().getBytes().length > 30)
                sb.append("S_ECNOMICSUBJECTCODE宽度不能超过 "+30+"个字符; ");
    
    //check field F_AMT
      if (this.getFamt()==null)
             sb.append("F_AMT不能为空; ");
      
    //check field S_ACCTPROP
      if (this.getSacctprop()==null)
             sb.append("S_ACCTPROP不能为空; ");
      if (this.getSacctprop()!=null)
             if (this.getSacctprop().getBytes().length > 1)
                sb.append("S_ACCTPROP宽度不能超过 "+1+"个字符; ");
    
    //check field TS_UPDATE
      if (this.getTsupdate()==null)
             sb.append("TS_UPDATE不能为空; ");
      
    //check field S_SUPDEPNAME
      if (this.getSsupdepname()!=null)
             if (this.getSsupdepname().getBytes().length > 60)
                sb.append("S_SUPDEPNAME宽度不能超过 "+60+"个字符; ");
    
    //check field S_EXPFUNCNAME
      if (this.getSexpfuncname()!=null)
             if (this.getSexpfuncname().getBytes().length > 60)
                sb.append("S_EXPFUNCNAME宽度不能超过 "+60+"个字符; ");
    
    //check field S_PAYSUMMARYNAME
      if (this.getSpaysummaryname()!=null)
             if (this.getSpaysummaryname().getBytes().length > 200)
                sb.append("S_PAYSUMMARYNAME宽度不能超过 "+200+"个字符; ");
    
    //check field S_HOLD1
      if (this.getShold1()!=null)
             if (this.getShold1().getBytes().length > 42)
                sb.append("S_HOLD1宽度不能超过 "+42+"个字符; ");
    
    //check field S_HOLD2
      if (this.getShold2()!=null)
             if (this.getShold2().getBytes().length > 42)
                sb.append("S_HOLD2宽度不能超过 "+42+"个字符; ");
    
    //check field S_HOLD3
      if (this.getShold3()!=null)
             if (this.getShold3().getBytes().length > 200)
                sb.append("S_HOLD3宽度不能超过 "+200+"个字符; ");
    
    //check field S_HOLD4
      if (this.getShold4()!=null)
             if (this.getShold4().getBytes().length > 42)
                sb.append("S_HOLD4宽度不能超过 "+42+"个字符; ");
    
    //check field S_VOUCHERN0
      if (this.getSvouchern0()!=null)
             if (this.getSvouchern0().getBytes().length > 42)
                sb.append("S_VOUCHERN0宽度不能超过 "+42+"个字符; ");
    
    //check field S_ID
      if (this.getSid()!=null)
             if (this.getSid().getBytes().length > 38)
                sb.append("S_ID明细ID宽度不能超过 "+38+"个字符; ");
    
    //check field S_PAYDATE
      if (this.getSpaydate()!=null)
             if (this.getSpaydate().getBytes().length > 50)
                sb.append("S_PAYDATE商行办理时间宽度不能超过 "+50+"个字符; ");
    

 	String msg = sb.toString() ;
	if (msg.length() == 0)
		  return null ;

  return  msg;
  }
  /* Returns value valid checking String , NULL is Valid*/
   public String  checkValid(String[] _columnNames)
  {
  	StringBuffer sb = new StringBuffer() ;
    // check columnNames
    String checkNameMsg = checkColumnNamesValid(_columnNames);
    if (checkNameMsg != null) {
         return checkNameMsg;
    }
    //check field I_VOUSRLNO
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("I_VOUSRLNO")) {
               if (this.getIvousrlno()==null)
                    sb.append("I_VOUSRLNO 不能为空; ");
               break;
         }
  }
    
    //check field I_SEQNO
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("I_SEQNO")) {
               if (this.getIseqno()==null)
                    sb.append("I_SEQNO 不能为空; ");
               break;
         }
  }
    
    //check field S_BDGORGCODE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_BDGORGCODE")) {
               if (this.getSbdgorgcode()==null)
                    sb.append("S_BDGORGCODE 不能为空; ");
               if (this.getSbdgorgcode()!=null)
                    if (this.getSbdgorgcode().getBytes().length > 20)
                        sb.append("S_BDGORGCODE 宽度不能超过 "+20+"个字符");
             break;
         }
  }
    
    //check field S_FUNCBDGSBTCODE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_FUNCBDGSBTCODE")) {
               if (this.getSfuncbdgsbtcode()==null)
                    sb.append("S_FUNCBDGSBTCODE 不能为空; ");
               if (this.getSfuncbdgsbtcode()!=null)
                    if (this.getSfuncbdgsbtcode().getBytes().length > 30)
                        sb.append("S_FUNCBDGSBTCODE 宽度不能超过 "+30+"个字符");
             break;
         }
  }
    
    //check field S_ECNOMICSUBJECTCODE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_ECNOMICSUBJECTCODE")) {
                 if (this.getSecnomicsubjectcode()!=null)
                    if (this.getSecnomicsubjectcode().getBytes().length > 30)
                        sb.append("S_ECNOMICSUBJECTCODE 宽度不能超过 "+30+"个字符");
             break;
         }
  }
    
    //check field F_AMT
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("F_AMT")) {
               if (this.getFamt()==null)
                    sb.append("F_AMT 不能为空; ");
               break;
         }
  }
    
    //check field S_ACCTPROP
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_ACCTPROP")) {
               if (this.getSacctprop()==null)
                    sb.append("S_ACCTPROP 不能为空; ");
               if (this.getSacctprop()!=null)
                    if (this.getSacctprop().getBytes().length > 1)
                        sb.append("S_ACCTPROP 宽度不能超过 "+1+"个字符");
             break;
         }
  }
    
    //check field TS_UPDATE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("TS_UPDATE")) {
               if (this.getTsupdate()==null)
                    sb.append("TS_UPDATE 不能为空; ");
               break;
         }
  }
    
    //check field S_SUPDEPNAME
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_SUPDEPNAME")) {
                 if (this.getSsupdepname()!=null)
                    if (this.getSsupdepname().getBytes().length > 60)
                        sb.append("S_SUPDEPNAME 宽度不能超过 "+60+"个字符");
             break;
         }
  }
    
    //check field S_EXPFUNCNAME
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_EXPFUNCNAME")) {
                 if (this.getSexpfuncname()!=null)
                    if (this.getSexpfuncname().getBytes().length > 60)
                        sb.append("S_EXPFUNCNAME 宽度不能超过 "+60+"个字符");
             break;
         }
  }
    
    //check field S_PAYSUMMARYNAME
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_PAYSUMMARYNAME")) {
                 if (this.getSpaysummaryname()!=null)
                    if (this.getSpaysummaryname().getBytes().length > 200)
                        sb.append("S_PAYSUMMARYNAME 宽度不能超过 "+200+"个字符");
             break;
         }
  }
    
    //check field S_HOLD1
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_HOLD1")) {
                 if (this.getShold1()!=null)
                    if (this.getShold1().getBytes().length > 42)
                        sb.append("S_HOLD1 宽度不能超过 "+42+"个字符");
             break;
         }
  }
    
    //check field S_HOLD2
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_HOLD2")) {
                 if (this.getShold2()!=null)
                    if (this.getShold2().getBytes().length > 42)
                        sb.append("S_HOLD2 宽度不能超过 "+42+"个字符");
             break;
         }
  }
    
    //check field S_HOLD3
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_HOLD3")) {
                 if (this.getShold3()!=null)
                    if (this.getShold3().getBytes().length > 200)
                        sb.append("S_HOLD3 宽度不能超过 "+200+"个字符");
             break;
         }
  }
    
    //check field S_HOLD4
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_HOLD4")) {
                 if (this.getShold4()!=null)
                    if (this.getShold4().getBytes().length > 42)
                        sb.append("S_HOLD4 宽度不能超过 "+42+"个字符");
             break;
         }
  }
    
    //check field S_VOUCHERN0
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_VOUCHERN0")) {
                 if (this.getSvouchern0()!=null)
                    if (this.getSvouchern0().getBytes().length > 42)
                        sb.append("S_VOUCHERN0 宽度不能超过 "+42+"个字符");
             break;
         }
  }
    
    //check field S_ID
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_ID")) {
                 if (this.getSid()!=null)
                    if (this.getSid().getBytes().length > 38)
                        sb.append("S_ID 明细ID宽度不能超过 "+38+"个字符");
             break;
         }
  }
    
    //check field S_PAYDATE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_PAYDATE")) {
                 if (this.getSpaydate()!=null)
                    if (this.getSpaydate().getBytes().length > 50)
                        sb.append("S_PAYDATE 商行办理时间宽度不能超过 "+50+"个字符");
             break;
         }
  }
    
 	String msg = sb.toString() ;
	if (msg.length() == 0)
		  return null ;

  return  msg;
  }
  /* Returns value valid checking String , NULL is Valid*/
	public String checkValidExcept(String[] _columnNames) {
		String msg = checkColumnNamesValid(_columnNames);
		if (msg != null) {
			return msg;
		}
		String[] columnCheckNames = new String[columnNames().length
				- _columnNames.length];
		int k = 0;
		for (int i = 0; i < columnNames().length; i++) {
			boolean checkNameInColumn = true;
			for (int j = 0; j < _columnNames.length; j++) {
				if (_columnNames[i].equals(columnNames()[j])) {
					checkNameInColumn = false;
					break;
				}
			}
			if (checkNameInColumn) {
				columnCheckNames[k] = columnNames()[i];
				k++;
			}
		}
		return checkValid(columnCheckNames);
	}
	/* Returns value valid checking String , NULL is Valid */
	public String checkColumnNamesValid(String[] _columnNames) {
		StringBuffer sb = new StringBuffer();
		if (_columnNames.length > columnNames().length) {
			return "输入字段个数多于表中字段个数; ";
		}
		// check columnNames
		for (int i = 0; i < _columnNames.length; i++) {
			boolean checkNameValid = false;
			for (int j = 0; j < columnNames().length; j++) {
				if (_columnNames[i] != null
						&& _columnNames[i].equals(columnNames()[j])) {
					checkNameValid = true;
					break;
				}
			}
			if (!checkNameValid)
				sb.append("输入字段 " + _columnNames[i] + " 不在该表字段中; ");
		}
		String msg = sb.toString();
		if (msg.length() == 0)
			return null;

		return msg;
	}
/*******************************************************
*
*  implement IDto
*
*****************************************************/

  /* if this Dto has children Dtos*/
  public boolean  isParent() {
     return false;
  };

  /* get the children Dtos if this has children*/
  public IDto[]  getChildren() {
     return null;
  };

  /* set the children Dtos if this has children*/
  public void  setChildren(IDto[] _dtos) 
  {
     throw new RuntimeException("此dto没有相关联的子dto，不能进行此操作");
  };
  
  /* return the IPK class  */
    public IPK      getPK(){
      HtvPayreckBankListPK pk = new HtvPayreckBankListPK();
      pk.setIvousrlno(getIvousrlno());
      pk.setIseqno(getIseqno());
      return pk;
    };
}
