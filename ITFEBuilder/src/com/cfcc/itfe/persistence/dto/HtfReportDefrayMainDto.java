    
package com.cfcc.itfe.persistence.dto;

import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Time;
import java.sql.Timestamp ;

import java.lang.reflect.Array;

import com.cfcc.jaf.persistence.jaform.parent.IDto ;
import com.cfcc.jaf.persistence.jaform.parent.IPK;
import com.cfcc.itfe.persistence.pk.HtfReportDefrayMainPK;
/**
 * <p>Title: DTO of table: HTF_REPORT_DEFRAY_MAIN</p>
 * <p>Description: 支出报表对帐主表历史表3512 Data Transfer Object </p>
 * <p>Copyright: Copyright (c) 2005</p>
 * <p>Company: CFCC </p>
 * <p>Generation Time: 2014-12-25 15:28:55 </p>
 *  Do NOT change this file by hand.
 *  This java source file is generated by JAF_ORM .
 *  dto.vm version timestamp: 2008-01-08 16:30:00 
 *
 * @author win7
 */

public class HtfReportDefrayMainDto   
                              implements IDto  {
/********************************************************
 *   fields
 ********************************************************/

    /**
    * 主键 I_VOUSRLNO BIGINT , PK   , NOT NULL       */
    protected Long ivousrlno;
    /**
    * 机构代码 S_ORGCODE VARCHAR   , NOT NULL       */
    protected String sorgcode;
    /**
    * 国库代码 S_TRECODE VARCHAR   , NOT NULL       */
    protected String strecode;
    /**
    * 状态 S_STATUS VARCHAR   , NOT NULL       */
    protected String sstatus;
    /**
    * 描述 S_DEMO VARCHAR         */
    protected String sdemo;
    /**
    * 系统时间 TS_SYSUPDATE TIMESTAMP         */
    protected Timestamp tssysupdate;
    /**
    * 包流水号 S_PACKAGENO VARCHAR         */
    protected String spackageno;
    /**
    * 行政区划代码 S_ADMDIVCODE VARCHAR   , NOT NULL       */
    protected String sadmdivcode;
    /**
    * 业务年度 S_STYEAR VARCHAR   , NOT NULL       */
    protected String sstyear;
    /**
    * 凭证类型编号 S_VTCODE VARCHAR   , NOT NULL       */
    protected String svtcode;
    /**
    * 凭证日期 S_VOUDATE VARCHAR   , NOT NULL       */
    protected String svoudate;
    /**
    * 凭证号 S_VOUCHERNO VARCHAR   , NOT NULL       */
    protected String svoucherno;
    /**
    * 对账单号 S_VOUCHERCHECKNO VARCHAR   , NOT NULL       */
    protected String svouchercheckno;
    /**
    * 子包总数 S_CHILDPACKNUM VARCHAR   , NOT NULL       */
    protected String schildpacknum;
    /**
    * 本包序号 S_CURPACKNO VARCHAR   , NOT NULL       */
    protected String scurpackno;
    /**
    * 报表种类 S_BILLKIND VARCHAR   , NOT NULL       */
    protected String sbillkind;
    /**
    * 财政机关代码 S_FINORGCODE VARCHAR   , NOT NULL       */
    protected String sfinorgcode;
    /**
    * 国库主体名称 S_TRENAME VARCHAR   , NOT NULL       */
    protected String strename;
    /**
    * 预算类型编码 S_BGTTYPECODE VARCHAR         */
    protected String sbgttypecode;
    /**
    * 预算类型名称 S_BGTTYPENAME VARCHAR         */
    protected String sbgttypename;
    /**
    * 对账起始日期 S_BEGINDATE VARCHAR   , NOT NULL       */
    protected String sbegindate;
    /**
    * 对账终止日期 S_ENDDATE VARCHAR   , NOT NULL       */
    protected String senddate;
    /**
    * 总笔数 S_ALLNUM VARCHAR   , NOT NULL       */
    protected String sallnum;
    /**
    * 总金额 N_ALLAMT DECIMAL   , NOT NULL       */
    protected BigDecimal nallamt;
    /**
    * 对帐结果 S_XCHECKRESULT VARCHAR         */
    protected String sxcheckresult;
    /**
    * 不符笔数 S_XDIFFNUM VARCHAR         */
    protected String sxdiffnum;
    /**
    * 预留字段1 S_HOLD1 VARCHAR         */
    protected String shold1;
    /**
    * 预留字段2 S_HOLD2 VARCHAR         */
    protected String shold2;
    /**
    * 扩展 S_EXT1 VARCHAR         */
    protected String sext1;
    /**
    * 扩展 S_EXT2 VARCHAR         */
    protected String sext2;
    /**
    * 扩展 S_EXT3 VARCHAR         */
    protected String sext3;
    /**
    * 扩展 S_EXT4 VARCHAR         */
    protected String sext4;
    /**
    * 扩展 S_EXT5 VARCHAR         */
    protected String sext5;


/******************************************************
*
*  getter and setter
*
*******************************************************/


    public Long getIvousrlno()
    {
        return ivousrlno;
    }
     /**
     *  主键 Setter I_VOUSRLNO, PK , NOT NULL        * */
    public void setIvousrlno(Long _ivousrlno) {
        this.ivousrlno = _ivousrlno;
    }


    public String getSorgcode()
    {
        return sorgcode;
    }
     /**
     *  机构代码 Setter S_ORGCODE , NOT NULL        * */
    public void setSorgcode(String _sorgcode) {
        this.sorgcode = _sorgcode;
    }


    public String getStrecode()
    {
        return strecode;
    }
     /**
     *  国库代码 Setter S_TRECODE , NOT NULL        * */
    public void setStrecode(String _strecode) {
        this.strecode = _strecode;
    }


    public String getSstatus()
    {
        return sstatus;
    }
     /**
     *  状态 Setter S_STATUS , NOT NULL        * */
    public void setSstatus(String _sstatus) {
        this.sstatus = _sstatus;
    }


    public String getSdemo()
    {
        return sdemo;
    }
     /**
     *  描述 Setter S_DEMO        * */
    public void setSdemo(String _sdemo) {
        this.sdemo = _sdemo;
    }


    public Timestamp getTssysupdate()
    {
        return tssysupdate;
    }
     /**
     *  系统时间 Setter TS_SYSUPDATE        * */
    public void setTssysupdate(Timestamp _tssysupdate) {
        this.tssysupdate = _tssysupdate;
    }


    public String getSpackageno()
    {
        return spackageno;
    }
     /**
     *  包流水号 Setter S_PACKAGENO        * */
    public void setSpackageno(String _spackageno) {
        this.spackageno = _spackageno;
    }


    public String getSadmdivcode()
    {
        return sadmdivcode;
    }
     /**
     *  行政区划代码 Setter S_ADMDIVCODE , NOT NULL        * */
    public void setSadmdivcode(String _sadmdivcode) {
        this.sadmdivcode = _sadmdivcode;
    }


    public String getSstyear()
    {
        return sstyear;
    }
     /**
     *  业务年度 Setter S_STYEAR , NOT NULL        * */
    public void setSstyear(String _sstyear) {
        this.sstyear = _sstyear;
    }


    public String getSvtcode()
    {
        return svtcode;
    }
     /**
     *  凭证类型编号 Setter S_VTCODE , NOT NULL        * */
    public void setSvtcode(String _svtcode) {
        this.svtcode = _svtcode;
    }


    public String getSvoudate()
    {
        return svoudate;
    }
     /**
     *  凭证日期 Setter S_VOUDATE , NOT NULL        * */
    public void setSvoudate(String _svoudate) {
        this.svoudate = _svoudate;
    }


    public String getSvoucherno()
    {
        return svoucherno;
    }
     /**
     *  凭证号 Setter S_VOUCHERNO , NOT NULL        * */
    public void setSvoucherno(String _svoucherno) {
        this.svoucherno = _svoucherno;
    }


    public String getSvouchercheckno()
    {
        return svouchercheckno;
    }
     /**
     *  对账单号 Setter S_VOUCHERCHECKNO , NOT NULL        * */
    public void setSvouchercheckno(String _svouchercheckno) {
        this.svouchercheckno = _svouchercheckno;
    }


    public String getSchildpacknum()
    {
        return schildpacknum;
    }
     /**
     *  子包总数 Setter S_CHILDPACKNUM , NOT NULL        * */
    public void setSchildpacknum(String _schildpacknum) {
        this.schildpacknum = _schildpacknum;
    }


    public String getScurpackno()
    {
        return scurpackno;
    }
     /**
     *  本包序号 Setter S_CURPACKNO , NOT NULL        * */
    public void setScurpackno(String _scurpackno) {
        this.scurpackno = _scurpackno;
    }


    public String getSbillkind()
    {
        return sbillkind;
    }
     /**
     *  报表种类 Setter S_BILLKIND , NOT NULL        * */
    public void setSbillkind(String _sbillkind) {
        this.sbillkind = _sbillkind;
    }


    public String getSfinorgcode()
    {
        return sfinorgcode;
    }
     /**
     *  财政机关代码 Setter S_FINORGCODE , NOT NULL        * */
    public void setSfinorgcode(String _sfinorgcode) {
        this.sfinorgcode = _sfinorgcode;
    }


    public String getStrename()
    {
        return strename;
    }
     /**
     *  国库主体名称 Setter S_TRENAME , NOT NULL        * */
    public void setStrename(String _strename) {
        this.strename = _strename;
    }


    public String getSbgttypecode()
    {
        return sbgttypecode;
    }
     /**
     *  预算类型编码 Setter S_BGTTYPECODE        * */
    public void setSbgttypecode(String _sbgttypecode) {
        this.sbgttypecode = _sbgttypecode;
    }


    public String getSbgttypename()
    {
        return sbgttypename;
    }
     /**
     *  预算类型名称 Setter S_BGTTYPENAME        * */
    public void setSbgttypename(String _sbgttypename) {
        this.sbgttypename = _sbgttypename;
    }


    public String getSbegindate()
    {
        return sbegindate;
    }
     /**
     *  对账起始日期 Setter S_BEGINDATE , NOT NULL        * */
    public void setSbegindate(String _sbegindate) {
        this.sbegindate = _sbegindate;
    }


    public String getSenddate()
    {
        return senddate;
    }
     /**
     *  对账终止日期 Setter S_ENDDATE , NOT NULL        * */
    public void setSenddate(String _senddate) {
        this.senddate = _senddate;
    }


    public String getSallnum()
    {
        return sallnum;
    }
     /**
     *  总笔数 Setter S_ALLNUM , NOT NULL        * */
    public void setSallnum(String _sallnum) {
        this.sallnum = _sallnum;
    }


    public BigDecimal getNallamt()
    {
        return nallamt;
    }
     /**
     *  总金额 Setter N_ALLAMT , NOT NULL        * */
    public void setNallamt(BigDecimal _nallamt) {
        this.nallamt = _nallamt;
    }


    public String getSxcheckresult()
    {
        return sxcheckresult;
    }
     /**
     *  对帐结果 Setter S_XCHECKRESULT        * */
    public void setSxcheckresult(String _sxcheckresult) {
        this.sxcheckresult = _sxcheckresult;
    }


    public String getSxdiffnum()
    {
        return sxdiffnum;
    }
     /**
     *  不符笔数 Setter S_XDIFFNUM        * */
    public void setSxdiffnum(String _sxdiffnum) {
        this.sxdiffnum = _sxdiffnum;
    }


    public String getShold1()
    {
        return shold1;
    }
     /**
     *  预留字段1 Setter S_HOLD1        * */
    public void setShold1(String _shold1) {
        this.shold1 = _shold1;
    }


    public String getShold2()
    {
        return shold2;
    }
     /**
     *  预留字段2 Setter S_HOLD2        * */
    public void setShold2(String _shold2) {
        this.shold2 = _shold2;
    }


    public String getSext1()
    {
        return sext1;
    }
     /**
     *  扩展 Setter S_EXT1        * */
    public void setSext1(String _sext1) {
        this.sext1 = _sext1;
    }


    public String getSext2()
    {
        return sext2;
    }
     /**
     *  扩展 Setter S_EXT2        * */
    public void setSext2(String _sext2) {
        this.sext2 = _sext2;
    }


    public String getSext3()
    {
        return sext3;
    }
     /**
     *  扩展 Setter S_EXT3        * */
    public void setSext3(String _sext3) {
        this.sext3 = _sext3;
    }


    public String getSext4()
    {
        return sext4;
    }
     /**
     *  扩展 Setter S_EXT4        * */
    public void setSext4(String _sext4) {
        this.sext4 = _sext4;
    }


    public String getSext5()
    {
        return sext5;
    }
     /**
     *  扩展 Setter S_EXT5        * */
    public void setSext5(String _sext5) {
        this.sext5 = _sext5;
    }




/******************************************************
*
*  Get Column Name
*
*******************************************************/
    /**
    *  主键 Getter I_VOUSRLNO, PK , NOT NULL       * */
    public static String  columnIvousrlno()
    {
        return "I_VOUSRLNO";
    }
   
    /**
    *  机构代码 Getter S_ORGCODE , NOT NULL       * */
    public static String  columnSorgcode()
    {
        return "S_ORGCODE";
    }
   
    /**
    *  国库代码 Getter S_TRECODE , NOT NULL       * */
    public static String  columnStrecode()
    {
        return "S_TRECODE";
    }
   
    /**
    *  状态 Getter S_STATUS , NOT NULL       * */
    public static String  columnSstatus()
    {
        return "S_STATUS";
    }
   
    /**
    *  描述 Getter S_DEMO       * */
    public static String  columnSdemo()
    {
        return "S_DEMO";
    }
   
    /**
    *  系统时间 Getter TS_SYSUPDATE       * */
    public static String  columnTssysupdate()
    {
        return "TS_SYSUPDATE";
    }
   
    /**
    *  包流水号 Getter S_PACKAGENO       * */
    public static String  columnSpackageno()
    {
        return "S_PACKAGENO";
    }
   
    /**
    *  行政区划代码 Getter S_ADMDIVCODE , NOT NULL       * */
    public static String  columnSadmdivcode()
    {
        return "S_ADMDIVCODE";
    }
   
    /**
    *  业务年度 Getter S_STYEAR , NOT NULL       * */
    public static String  columnSstyear()
    {
        return "S_STYEAR";
    }
   
    /**
    *  凭证类型编号 Getter S_VTCODE , NOT NULL       * */
    public static String  columnSvtcode()
    {
        return "S_VTCODE";
    }
   
    /**
    *  凭证日期 Getter S_VOUDATE , NOT NULL       * */
    public static String  columnSvoudate()
    {
        return "S_VOUDATE";
    }
   
    /**
    *  凭证号 Getter S_VOUCHERNO , NOT NULL       * */
    public static String  columnSvoucherno()
    {
        return "S_VOUCHERNO";
    }
   
    /**
    *  对账单号 Getter S_VOUCHERCHECKNO , NOT NULL       * */
    public static String  columnSvouchercheckno()
    {
        return "S_VOUCHERCHECKNO";
    }
   
    /**
    *  子包总数 Getter S_CHILDPACKNUM , NOT NULL       * */
    public static String  columnSchildpacknum()
    {
        return "S_CHILDPACKNUM";
    }
   
    /**
    *  本包序号 Getter S_CURPACKNO , NOT NULL       * */
    public static String  columnScurpackno()
    {
        return "S_CURPACKNO";
    }
   
    /**
    *  报表种类 Getter S_BILLKIND , NOT NULL       * */
    public static String  columnSbillkind()
    {
        return "S_BILLKIND";
    }
   
    /**
    *  财政机关代码 Getter S_FINORGCODE , NOT NULL       * */
    public static String  columnSfinorgcode()
    {
        return "S_FINORGCODE";
    }
   
    /**
    *  国库主体名称 Getter S_TRENAME , NOT NULL       * */
    public static String  columnStrename()
    {
        return "S_TRENAME";
    }
   
    /**
    *  预算类型编码 Getter S_BGTTYPECODE       * */
    public static String  columnSbgttypecode()
    {
        return "S_BGTTYPECODE";
    }
   
    /**
    *  预算类型名称 Getter S_BGTTYPENAME       * */
    public static String  columnSbgttypename()
    {
        return "S_BGTTYPENAME";
    }
   
    /**
    *  对账起始日期 Getter S_BEGINDATE , NOT NULL       * */
    public static String  columnSbegindate()
    {
        return "S_BEGINDATE";
    }
   
    /**
    *  对账终止日期 Getter S_ENDDATE , NOT NULL       * */
    public static String  columnSenddate()
    {
        return "S_ENDDATE";
    }
   
    /**
    *  总笔数 Getter S_ALLNUM , NOT NULL       * */
    public static String  columnSallnum()
    {
        return "S_ALLNUM";
    }
   
    /**
    *  总金额 Getter N_ALLAMT , NOT NULL       * */
    public static String  columnNallamt()
    {
        return "N_ALLAMT";
    }
   
    /**
    *  对帐结果 Getter S_XCHECKRESULT       * */
    public static String  columnSxcheckresult()
    {
        return "S_XCHECKRESULT";
    }
   
    /**
    *  不符笔数 Getter S_XDIFFNUM       * */
    public static String  columnSxdiffnum()
    {
        return "S_XDIFFNUM";
    }
   
    /**
    *  预留字段1 Getter S_HOLD1       * */
    public static String  columnShold1()
    {
        return "S_HOLD1";
    }
   
    /**
    *  预留字段2 Getter S_HOLD2       * */
    public static String  columnShold2()
    {
        return "S_HOLD2";
    }
   
    /**
    *  扩展 Getter S_EXT1       * */
    public static String  columnSext1()
    {
        return "S_EXT1";
    }
   
    /**
    *  扩展 Getter S_EXT2       * */
    public static String  columnSext2()
    {
        return "S_EXT2";
    }
   
    /**
    *  扩展 Getter S_EXT3       * */
    public static String  columnSext3()
    {
        return "S_EXT3";
    }
   
    /**
    *  扩展 Getter S_EXT4       * */
    public static String  columnSext4()
    {
        return "S_EXT4";
    }
   
    /**
    *  扩展 Getter S_EXT5       * */
    public static String  columnSext5()
    {
        return "S_EXT5";
    }
   


    /**
    *  Table Name
    */
    public static String tableName(){
        return "HTF_REPORT_DEFRAY_MAIN";
    }
    
    /**
    *  Columns
    */
    public static String[] columnNames(){
        String[] columnNames = new String[33];        
        columnNames[0]="I_VOUSRLNO";
        columnNames[1]="S_ORGCODE";
        columnNames[2]="S_TRECODE";
        columnNames[3]="S_STATUS";
        columnNames[4]="S_DEMO";
        columnNames[5]="TS_SYSUPDATE";
        columnNames[6]="S_PACKAGENO";
        columnNames[7]="S_ADMDIVCODE";
        columnNames[8]="S_STYEAR";
        columnNames[9]="S_VTCODE";
        columnNames[10]="S_VOUDATE";
        columnNames[11]="S_VOUCHERNO";
        columnNames[12]="S_VOUCHERCHECKNO";
        columnNames[13]="S_CHILDPACKNUM";
        columnNames[14]="S_CURPACKNO";
        columnNames[15]="S_BILLKIND";
        columnNames[16]="S_FINORGCODE";
        columnNames[17]="S_TRENAME";
        columnNames[18]="S_BGTTYPECODE";
        columnNames[19]="S_BGTTYPENAME";
        columnNames[20]="S_BEGINDATE";
        columnNames[21]="S_ENDDATE";
        columnNames[22]="S_ALLNUM";
        columnNames[23]="N_ALLAMT";
        columnNames[24]="S_XCHECKRESULT";
        columnNames[25]="S_XDIFFNUM";
        columnNames[26]="S_HOLD1";
        columnNames[27]="S_HOLD2";
        columnNames[28]="S_EXT1";
        columnNames[29]="S_EXT2";
        columnNames[30]="S_EXT3";
        columnNames[31]="S_EXT4";
        columnNames[32]="S_EXT5";
        return columnNames;     
    }
/*******************************************************
*
*  supplementary methods
*
*****************************************************/


    /* Indicates whether some other object is "equal to" this one. */
    public boolean equals(Object obj)
    {
        if (this == obj)
            return true;

        if (obj == null || !(obj instanceof HtfReportDefrayMainDto))
            return false;

        HtfReportDefrayMainDto bean = (HtfReportDefrayMainDto) obj;


      //compare field ivousrlno
      if((this.ivousrlno==null && bean.ivousrlno!=null) || (this.ivousrlno!=null && bean.ivousrlno==null))
          return false;
        else if(this.ivousrlno==null && bean.ivousrlno==null){
        }
        else{
          if(!bean.ivousrlno.equals(this.ivousrlno))
               return false;
     }
      //compare field sorgcode
      if((this.sorgcode==null && bean.sorgcode!=null) || (this.sorgcode!=null && bean.sorgcode==null))
          return false;
        else if(this.sorgcode==null && bean.sorgcode==null){
        }
        else{
          if(!bean.sorgcode.equals(this.sorgcode))
               return false;
     }
      //compare field strecode
      if((this.strecode==null && bean.strecode!=null) || (this.strecode!=null && bean.strecode==null))
          return false;
        else if(this.strecode==null && bean.strecode==null){
        }
        else{
          if(!bean.strecode.equals(this.strecode))
               return false;
     }
      //compare field sstatus
      if((this.sstatus==null && bean.sstatus!=null) || (this.sstatus!=null && bean.sstatus==null))
          return false;
        else if(this.sstatus==null && bean.sstatus==null){
        }
        else{
          if(!bean.sstatus.equals(this.sstatus))
               return false;
     }
      //compare field sdemo
      if((this.sdemo==null && bean.sdemo!=null) || (this.sdemo!=null && bean.sdemo==null))
          return false;
        else if(this.sdemo==null && bean.sdemo==null){
        }
        else{
          if(!bean.sdemo.equals(this.sdemo))
               return false;
     }
      //compare field tssysupdate
      if((this.tssysupdate==null && bean.tssysupdate!=null) || (this.tssysupdate!=null && bean.tssysupdate==null))
          return false;
        else if(this.tssysupdate==null && bean.tssysupdate==null){
        }
        else{
          if(!bean.tssysupdate.equals(this.tssysupdate))
               return false;
     }
      //compare field spackageno
      if((this.spackageno==null && bean.spackageno!=null) || (this.spackageno!=null && bean.spackageno==null))
          return false;
        else if(this.spackageno==null && bean.spackageno==null){
        }
        else{
          if(!bean.spackageno.equals(this.spackageno))
               return false;
     }
      //compare field sadmdivcode
      if((this.sadmdivcode==null && bean.sadmdivcode!=null) || (this.sadmdivcode!=null && bean.sadmdivcode==null))
          return false;
        else if(this.sadmdivcode==null && bean.sadmdivcode==null){
        }
        else{
          if(!bean.sadmdivcode.equals(this.sadmdivcode))
               return false;
     }
      //compare field sstyear
      if((this.sstyear==null && bean.sstyear!=null) || (this.sstyear!=null && bean.sstyear==null))
          return false;
        else if(this.sstyear==null && bean.sstyear==null){
        }
        else{
          if(!bean.sstyear.equals(this.sstyear))
               return false;
     }
      //compare field svtcode
      if((this.svtcode==null && bean.svtcode!=null) || (this.svtcode!=null && bean.svtcode==null))
          return false;
        else if(this.svtcode==null && bean.svtcode==null){
        }
        else{
          if(!bean.svtcode.equals(this.svtcode))
               return false;
     }
      //compare field svoudate
      if((this.svoudate==null && bean.svoudate!=null) || (this.svoudate!=null && bean.svoudate==null))
          return false;
        else if(this.svoudate==null && bean.svoudate==null){
        }
        else{
          if(!bean.svoudate.equals(this.svoudate))
               return false;
     }
      //compare field svoucherno
      if((this.svoucherno==null && bean.svoucherno!=null) || (this.svoucherno!=null && bean.svoucherno==null))
          return false;
        else if(this.svoucherno==null && bean.svoucherno==null){
        }
        else{
          if(!bean.svoucherno.equals(this.svoucherno))
               return false;
     }
      //compare field svouchercheckno
      if((this.svouchercheckno==null && bean.svouchercheckno!=null) || (this.svouchercheckno!=null && bean.svouchercheckno==null))
          return false;
        else if(this.svouchercheckno==null && bean.svouchercheckno==null){
        }
        else{
          if(!bean.svouchercheckno.equals(this.svouchercheckno))
               return false;
     }
      //compare field schildpacknum
      if((this.schildpacknum==null && bean.schildpacknum!=null) || (this.schildpacknum!=null && bean.schildpacknum==null))
          return false;
        else if(this.schildpacknum==null && bean.schildpacknum==null){
        }
        else{
          if(!bean.schildpacknum.equals(this.schildpacknum))
               return false;
     }
      //compare field scurpackno
      if((this.scurpackno==null && bean.scurpackno!=null) || (this.scurpackno!=null && bean.scurpackno==null))
          return false;
        else if(this.scurpackno==null && bean.scurpackno==null){
        }
        else{
          if(!bean.scurpackno.equals(this.scurpackno))
               return false;
     }
      //compare field sbillkind
      if((this.sbillkind==null && bean.sbillkind!=null) || (this.sbillkind!=null && bean.sbillkind==null))
          return false;
        else if(this.sbillkind==null && bean.sbillkind==null){
        }
        else{
          if(!bean.sbillkind.equals(this.sbillkind))
               return false;
     }
      //compare field sfinorgcode
      if((this.sfinorgcode==null && bean.sfinorgcode!=null) || (this.sfinorgcode!=null && bean.sfinorgcode==null))
          return false;
        else if(this.sfinorgcode==null && bean.sfinorgcode==null){
        }
        else{
          if(!bean.sfinorgcode.equals(this.sfinorgcode))
               return false;
     }
      //compare field strename
      if((this.strename==null && bean.strename!=null) || (this.strename!=null && bean.strename==null))
          return false;
        else if(this.strename==null && bean.strename==null){
        }
        else{
          if(!bean.strename.equals(this.strename))
               return false;
     }
      //compare field sbgttypecode
      if((this.sbgttypecode==null && bean.sbgttypecode!=null) || (this.sbgttypecode!=null && bean.sbgttypecode==null))
          return false;
        else if(this.sbgttypecode==null && bean.sbgttypecode==null){
        }
        else{
          if(!bean.sbgttypecode.equals(this.sbgttypecode))
               return false;
     }
      //compare field sbgttypename
      if((this.sbgttypename==null && bean.sbgttypename!=null) || (this.sbgttypename!=null && bean.sbgttypename==null))
          return false;
        else if(this.sbgttypename==null && bean.sbgttypename==null){
        }
        else{
          if(!bean.sbgttypename.equals(this.sbgttypename))
               return false;
     }
      //compare field sbegindate
      if((this.sbegindate==null && bean.sbegindate!=null) || (this.sbegindate!=null && bean.sbegindate==null))
          return false;
        else if(this.sbegindate==null && bean.sbegindate==null){
        }
        else{
          if(!bean.sbegindate.equals(this.sbegindate))
               return false;
     }
      //compare field senddate
      if((this.senddate==null && bean.senddate!=null) || (this.senddate!=null && bean.senddate==null))
          return false;
        else if(this.senddate==null && bean.senddate==null){
        }
        else{
          if(!bean.senddate.equals(this.senddate))
               return false;
     }
      //compare field sallnum
      if((this.sallnum==null && bean.sallnum!=null) || (this.sallnum!=null && bean.sallnum==null))
          return false;
        else if(this.sallnum==null && bean.sallnum==null){
        }
        else{
          if(!bean.sallnum.equals(this.sallnum))
               return false;
     }
      //compare field nallamt
      if((this.nallamt==null && bean.nallamt!=null) || (this.nallamt!=null && bean.nallamt==null))
          return false;
        else if(this.nallamt==null && bean.nallamt==null){
        }
        else{
          if(!bean.nallamt.equals(this.nallamt))
               return false;
     }
      //compare field sxcheckresult
      if((this.sxcheckresult==null && bean.sxcheckresult!=null) || (this.sxcheckresult!=null && bean.sxcheckresult==null))
          return false;
        else if(this.sxcheckresult==null && bean.sxcheckresult==null){
        }
        else{
          if(!bean.sxcheckresult.equals(this.sxcheckresult))
               return false;
     }
      //compare field sxdiffnum
      if((this.sxdiffnum==null && bean.sxdiffnum!=null) || (this.sxdiffnum!=null && bean.sxdiffnum==null))
          return false;
        else if(this.sxdiffnum==null && bean.sxdiffnum==null){
        }
        else{
          if(!bean.sxdiffnum.equals(this.sxdiffnum))
               return false;
     }
      //compare field shold1
      if((this.shold1==null && bean.shold1!=null) || (this.shold1!=null && bean.shold1==null))
          return false;
        else if(this.shold1==null && bean.shold1==null){
        }
        else{
          if(!bean.shold1.equals(this.shold1))
               return false;
     }
      //compare field shold2
      if((this.shold2==null && bean.shold2!=null) || (this.shold2!=null && bean.shold2==null))
          return false;
        else if(this.shold2==null && bean.shold2==null){
        }
        else{
          if(!bean.shold2.equals(this.shold2))
               return false;
     }
      //compare field sext1
      if((this.sext1==null && bean.sext1!=null) || (this.sext1!=null && bean.sext1==null))
          return false;
        else if(this.sext1==null && bean.sext1==null){
        }
        else{
          if(!bean.sext1.equals(this.sext1))
               return false;
     }
      //compare field sext2
      if((this.sext2==null && bean.sext2!=null) || (this.sext2!=null && bean.sext2==null))
          return false;
        else if(this.sext2==null && bean.sext2==null){
        }
        else{
          if(!bean.sext2.equals(this.sext2))
               return false;
     }
      //compare field sext3
      if((this.sext3==null && bean.sext3!=null) || (this.sext3!=null && bean.sext3==null))
          return false;
        else if(this.sext3==null && bean.sext3==null){
        }
        else{
          if(!bean.sext3.equals(this.sext3))
               return false;
     }
      //compare field sext4
      if((this.sext4==null && bean.sext4!=null) || (this.sext4!=null && bean.sext4==null))
          return false;
        else if(this.sext4==null && bean.sext4==null){
        }
        else{
          if(!bean.sext4.equals(this.sext4))
               return false;
     }
      //compare field sext5
      if((this.sext5==null && bean.sext5!=null) || (this.sext5!=null && bean.sext5==null))
          return false;
        else if(this.sext5==null && bean.sext5==null){
        }
        else{
          if(!bean.sext5.equals(this.sext5))
               return false;
     }



        return true;
    }

    /* return hashCode ,if A.equals(B) that A.hashCode()==B.hashCode() */
	public int hashCode()
	{
  
		int _hash_ = 1;
		
        if(this.ivousrlno!=null)
          _hash_ = _hash_ * 31+ this.ivousrlno.hashCode() ;
        if(this.sorgcode!=null)
          _hash_ = _hash_ * 31+ this.sorgcode.hashCode() ;
        if(this.strecode!=null)
          _hash_ = _hash_ * 31+ this.strecode.hashCode() ;
        if(this.sstatus!=null)
          _hash_ = _hash_ * 31+ this.sstatus.hashCode() ;
        if(this.sdemo!=null)
          _hash_ = _hash_ * 31+ this.sdemo.hashCode() ;
        if(this.tssysupdate!=null)
          _hash_ = _hash_ * 31+ this.tssysupdate.hashCode() ;
        if(this.spackageno!=null)
          _hash_ = _hash_ * 31+ this.spackageno.hashCode() ;
        if(this.sadmdivcode!=null)
          _hash_ = _hash_ * 31+ this.sadmdivcode.hashCode() ;
        if(this.sstyear!=null)
          _hash_ = _hash_ * 31+ this.sstyear.hashCode() ;
        if(this.svtcode!=null)
          _hash_ = _hash_ * 31+ this.svtcode.hashCode() ;
        if(this.svoudate!=null)
          _hash_ = _hash_ * 31+ this.svoudate.hashCode() ;
        if(this.svoucherno!=null)
          _hash_ = _hash_ * 31+ this.svoucherno.hashCode() ;
        if(this.svouchercheckno!=null)
          _hash_ = _hash_ * 31+ this.svouchercheckno.hashCode() ;
        if(this.schildpacknum!=null)
          _hash_ = _hash_ * 31+ this.schildpacknum.hashCode() ;
        if(this.scurpackno!=null)
          _hash_ = _hash_ * 31+ this.scurpackno.hashCode() ;
        if(this.sbillkind!=null)
          _hash_ = _hash_ * 31+ this.sbillkind.hashCode() ;
        if(this.sfinorgcode!=null)
          _hash_ = _hash_ * 31+ this.sfinorgcode.hashCode() ;
        if(this.strename!=null)
          _hash_ = _hash_ * 31+ this.strename.hashCode() ;
        if(this.sbgttypecode!=null)
          _hash_ = _hash_ * 31+ this.sbgttypecode.hashCode() ;
        if(this.sbgttypename!=null)
          _hash_ = _hash_ * 31+ this.sbgttypename.hashCode() ;
        if(this.sbegindate!=null)
          _hash_ = _hash_ * 31+ this.sbegindate.hashCode() ;
        if(this.senddate!=null)
          _hash_ = _hash_ * 31+ this.senddate.hashCode() ;
        if(this.sallnum!=null)
          _hash_ = _hash_ * 31+ this.sallnum.hashCode() ;
        if(this.nallamt!=null)
          _hash_ = _hash_ * 31+ this.nallamt.hashCode() ;
        if(this.sxcheckresult!=null)
          _hash_ = _hash_ * 31+ this.sxcheckresult.hashCode() ;
        if(this.sxdiffnum!=null)
          _hash_ = _hash_ * 31+ this.sxdiffnum.hashCode() ;
        if(this.shold1!=null)
          _hash_ = _hash_ * 31+ this.shold1.hashCode() ;
        if(this.shold2!=null)
          _hash_ = _hash_ * 31+ this.shold2.hashCode() ;
        if(this.sext1!=null)
          _hash_ = _hash_ * 31+ this.sext1.hashCode() ;
        if(this.sext2!=null)
          _hash_ = _hash_ * 31+ this.sext2.hashCode() ;
        if(this.sext3!=null)
          _hash_ = _hash_ * 31+ this.sext3.hashCode() ;
        if(this.sext4!=null)
          _hash_ = _hash_ * 31+ this.sext4.hashCode() ;
        if(this.sext5!=null)
          _hash_ = _hash_ * 31+ this.sext5.hashCode() ;

		return _hash_;
	
	}

     /* Creates and returns a copy of this object. */
    public Object clone()
    {
        HtfReportDefrayMainDto bean = new HtfReportDefrayMainDto();

          bean.ivousrlno = this.ivousrlno;

          if (this.sorgcode != null)
            bean.sorgcode = new String(this.sorgcode);
          if (this.strecode != null)
            bean.strecode = new String(this.strecode);
          if (this.sstatus != null)
            bean.sstatus = new String(this.sstatus);
          if (this.sdemo != null)
            bean.sdemo = new String(this.sdemo);
          if (this.tssysupdate != null)
            bean.tssysupdate = (Timestamp) this.tssysupdate.clone();
          if (this.spackageno != null)
            bean.spackageno = new String(this.spackageno);
          if (this.sadmdivcode != null)
            bean.sadmdivcode = new String(this.sadmdivcode);
          if (this.sstyear != null)
            bean.sstyear = new String(this.sstyear);
          if (this.svtcode != null)
            bean.svtcode = new String(this.svtcode);
          if (this.svoudate != null)
            bean.svoudate = new String(this.svoudate);
          if (this.svoucherno != null)
            bean.svoucherno = new String(this.svoucherno);
          if (this.svouchercheckno != null)
            bean.svouchercheckno = new String(this.svouchercheckno);
          if (this.schildpacknum != null)
            bean.schildpacknum = new String(this.schildpacknum);
          if (this.scurpackno != null)
            bean.scurpackno = new String(this.scurpackno);
          if (this.sbillkind != null)
            bean.sbillkind = new String(this.sbillkind);
          if (this.sfinorgcode != null)
            bean.sfinorgcode = new String(this.sfinorgcode);
          if (this.strename != null)
            bean.strename = new String(this.strename);
          if (this.sbgttypecode != null)
            bean.sbgttypecode = new String(this.sbgttypecode);
          if (this.sbgttypename != null)
            bean.sbgttypename = new String(this.sbgttypename);
          if (this.sbegindate != null)
            bean.sbegindate = new String(this.sbegindate);
          if (this.senddate != null)
            bean.senddate = new String(this.senddate);
          if (this.sallnum != null)
            bean.sallnum = new String(this.sallnum);
          if (this.nallamt != null)
            bean.nallamt = new BigDecimal(this.nallamt.toString());
          if (this.sxcheckresult != null)
            bean.sxcheckresult = new String(this.sxcheckresult);
          if (this.sxdiffnum != null)
            bean.sxdiffnum = new String(this.sxdiffnum);
          if (this.shold1 != null)
            bean.shold1 = new String(this.shold1);
          if (this.shold2 != null)
            bean.shold2 = new String(this.shold2);
          if (this.sext1 != null)
            bean.sext1 = new String(this.sext1);
          if (this.sext2 != null)
            bean.sext2 = new String(this.sext2);
          if (this.sext3 != null)
            bean.sext3 = new String(this.sext3);
          if (this.sext4 != null)
            bean.sext4 = new String(this.sext4);
          if (this.sext5 != null)
            bean.sext5 = new String(this.sext5);
  
        return bean;
    }


   /* Returns a string representation of the object. */
    public String toString()
    {
        String sep = "; ";
        StringBuffer sb = new StringBuffer();
        sb.append("HtfReportDefrayMainDto").append(sep);
        sb.append("[ivousrlno]").append(" = ").append(ivousrlno).append(sep);
        sb.append("[sorgcode]").append(" = ").append(sorgcode).append(sep);
        sb.append("[strecode]").append(" = ").append(strecode).append(sep);
        sb.append("[sstatus]").append(" = ").append(sstatus).append(sep);
        sb.append("[sdemo]").append(" = ").append(sdemo).append(sep);
        sb.append("[tssysupdate]").append(" = ").append(tssysupdate).append(sep);
        sb.append("[spackageno]").append(" = ").append(spackageno).append(sep);
        sb.append("[sadmdivcode]").append(" = ").append(sadmdivcode).append(sep);
        sb.append("[sstyear]").append(" = ").append(sstyear).append(sep);
        sb.append("[svtcode]").append(" = ").append(svtcode).append(sep);
        sb.append("[svoudate]").append(" = ").append(svoudate).append(sep);
        sb.append("[svoucherno]").append(" = ").append(svoucherno).append(sep);
        sb.append("[svouchercheckno]").append(" = ").append(svouchercheckno).append(sep);
        sb.append("[schildpacknum]").append(" = ").append(schildpacknum).append(sep);
        sb.append("[scurpackno]").append(" = ").append(scurpackno).append(sep);
        sb.append("[sbillkind]").append(" = ").append(sbillkind).append(sep);
        sb.append("[sfinorgcode]").append(" = ").append(sfinorgcode).append(sep);
        sb.append("[strename]").append(" = ").append(strename).append(sep);
        sb.append("[sbgttypecode]").append(" = ").append(sbgttypecode).append(sep);
        sb.append("[sbgttypename]").append(" = ").append(sbgttypename).append(sep);
        sb.append("[sbegindate]").append(" = ").append(sbegindate).append(sep);
        sb.append("[senddate]").append(" = ").append(senddate).append(sep);
        sb.append("[sallnum]").append(" = ").append(sallnum).append(sep);
        sb.append("[nallamt]").append(" = ").append(nallamt).append(sep);
        sb.append("[sxcheckresult]").append(" = ").append(sxcheckresult).append(sep);
        sb.append("[sxdiffnum]").append(" = ").append(sxdiffnum).append(sep);
        sb.append("[shold1]").append(" = ").append(shold1).append(sep);
        sb.append("[shold2]").append(" = ").append(shold2).append(sep);
        sb.append("[sext1]").append(" = ").append(sext1).append(sep);
        sb.append("[sext2]").append(" = ").append(sext2).append(sep);
        sb.append("[sext3]").append(" = ").append(sext3).append(sep);
        sb.append("[sext4]").append(" = ").append(sext4).append(sep);
        sb.append("[sext5]").append(" = ").append(sext5).append(sep);
            return sb.toString();
    }

  /* Returns value valid checking String , NULL is Valid*/
   public String  checkValid()
  {
  	StringBuffer sb = new StringBuffer() ;

    //check field I_VOUSRLNO
      if (this.getIvousrlno()==null)
             sb.append("I_VOUSRLNO主键不能为空; ");
      
    //check field S_ORGCODE
      if (this.getSorgcode()==null)
             sb.append("S_ORGCODE机构代码不能为空; ");
      if (this.getSorgcode()!=null)
             if (this.getSorgcode().getBytes().length > 12)
                sb.append("S_ORGCODE机构代码宽度不能超过 "+12+"个字符; ");
    
    //check field S_TRECODE
      if (this.getStrecode()==null)
             sb.append("S_TRECODE国库代码不能为空; ");
      if (this.getStrecode()!=null)
             if (this.getStrecode().getBytes().length > 10)
                sb.append("S_TRECODE国库代码宽度不能超过 "+10+"个字符; ");
    
    //check field S_STATUS
      if (this.getSstatus()==null)
             sb.append("S_STATUS状态不能为空; ");
      if (this.getSstatus()!=null)
             if (this.getSstatus().getBytes().length > 5)
                sb.append("S_STATUS状态宽度不能超过 "+5+"个字符; ");
    
    //check field S_DEMO
      if (this.getSdemo()!=null)
             if (this.getSdemo().getBytes().length > 100)
                sb.append("S_DEMO描述宽度不能超过 "+100+"个字符; ");
    
    //don't need check field TS_SYSUPDATE,it is UpdateTimeStamp column
  
    //check field S_PACKAGENO
      if (this.getSpackageno()!=null)
             if (this.getSpackageno().getBytes().length > 8)
                sb.append("S_PACKAGENO包流水号宽度不能超过 "+8+"个字符; ");
    
    //check field S_ADMDIVCODE
      if (this.getSadmdivcode()==null)
             sb.append("S_ADMDIVCODE行政区划代码不能为空; ");
      if (this.getSadmdivcode()!=null)
             if (this.getSadmdivcode().getBytes().length > 9)
                sb.append("S_ADMDIVCODE行政区划代码宽度不能超过 "+9+"个字符; ");
    
    //check field S_STYEAR
      if (this.getSstyear()==null)
             sb.append("S_STYEAR业务年度不能为空; ");
      if (this.getSstyear()!=null)
             if (this.getSstyear().getBytes().length > 4)
                sb.append("S_STYEAR业务年度宽度不能超过 "+4+"个字符; ");
    
    //check field S_VTCODE
      if (this.getSvtcode()==null)
             sb.append("S_VTCODE凭证类型编号不能为空; ");
      if (this.getSvtcode()!=null)
             if (this.getSvtcode().getBytes().length > 4)
                sb.append("S_VTCODE凭证类型编号宽度不能超过 "+4+"个字符; ");
    
    //check field S_VOUDATE
      if (this.getSvoudate()==null)
             sb.append("S_VOUDATE凭证日期不能为空; ");
      if (this.getSvoudate()!=null)
             if (this.getSvoudate().getBytes().length > 8)
                sb.append("S_VOUDATE凭证日期宽度不能超过 "+8+"个字符; ");
    
    //check field S_VOUCHERNO
      if (this.getSvoucherno()==null)
             sb.append("S_VOUCHERNO凭证号不能为空; ");
      if (this.getSvoucherno()!=null)
             if (this.getSvoucherno().getBytes().length > 42)
                sb.append("S_VOUCHERNO凭证号宽度不能超过 "+42+"个字符; ");
    
    //check field S_VOUCHERCHECKNO
      if (this.getSvouchercheckno()==null)
             sb.append("S_VOUCHERCHECKNO对账单号不能为空; ");
      if (this.getSvouchercheckno()!=null)
             if (this.getSvouchercheckno().getBytes().length > 42)
                sb.append("S_VOUCHERCHECKNO对账单号宽度不能超过 "+42+"个字符; ");
    
    //check field S_CHILDPACKNUM
      if (this.getSchildpacknum()==null)
             sb.append("S_CHILDPACKNUM子包总数不能为空; ");
      if (this.getSchildpacknum()!=null)
             if (this.getSchildpacknum().getBytes().length > 10)
                sb.append("S_CHILDPACKNUM子包总数宽度不能超过 "+10+"个字符; ");
    
    //check field S_CURPACKNO
      if (this.getScurpackno()==null)
             sb.append("S_CURPACKNO本包序号不能为空; ");
      if (this.getScurpackno()!=null)
             if (this.getScurpackno().getBytes().length > 10)
                sb.append("S_CURPACKNO本包序号宽度不能超过 "+10+"个字符; ");
    
    //check field S_BILLKIND
      if (this.getSbillkind()==null)
             sb.append("S_BILLKIND报表种类不能为空; ");
      if (this.getSbillkind()!=null)
             if (this.getSbillkind().getBytes().length > 1)
                sb.append("S_BILLKIND报表种类宽度不能超过 "+1+"个字符; ");
    
    //check field S_FINORGCODE
      if (this.getSfinorgcode()==null)
             sb.append("S_FINORGCODE财政机关代码不能为空; ");
      if (this.getSfinorgcode()!=null)
             if (this.getSfinorgcode().getBytes().length > 12)
                sb.append("S_FINORGCODE财政机关代码宽度不能超过 "+12+"个字符; ");
    
    //check field S_TRENAME
      if (this.getStrename()==null)
             sb.append("S_TRENAME国库主体名称不能为空; ");
      if (this.getStrename()!=null)
             if (this.getStrename().getBytes().length > 60)
                sb.append("S_TRENAME国库主体名称宽度不能超过 "+60+"个字符; ");
    
    //check field S_BGTTYPECODE
      if (this.getSbgttypecode()!=null)
             if (this.getSbgttypecode().getBytes().length > 42)
                sb.append("S_BGTTYPECODE预算类型编码宽度不能超过 "+42+"个字符; ");
    
    //check field S_BGTTYPENAME
      if (this.getSbgttypename()!=null)
             if (this.getSbgttypename().getBytes().length > 60)
                sb.append("S_BGTTYPENAME预算类型名称宽度不能超过 "+60+"个字符; ");
    
    //check field S_BEGINDATE
      if (this.getSbegindate()==null)
             sb.append("S_BEGINDATE对账起始日期不能为空; ");
      if (this.getSbegindate()!=null)
             if (this.getSbegindate().getBytes().length > 8)
                sb.append("S_BEGINDATE对账起始日期宽度不能超过 "+8+"个字符; ");
    
    //check field S_ENDDATE
      if (this.getSenddate()==null)
             sb.append("S_ENDDATE对账终止日期不能为空; ");
      if (this.getSenddate()!=null)
             if (this.getSenddate().getBytes().length > 8)
                sb.append("S_ENDDATE对账终止日期宽度不能超过 "+8+"个字符; ");
    
    //check field S_ALLNUM
      if (this.getSallnum()==null)
             sb.append("S_ALLNUM总笔数不能为空; ");
      if (this.getSallnum()!=null)
             if (this.getSallnum().getBytes().length > 10)
                sb.append("S_ALLNUM总笔数宽度不能超过 "+10+"个字符; ");
    
    //check field N_ALLAMT
      if (this.getNallamt()==null)
             sb.append("N_ALLAMT总金额不能为空; ");
      
    //check field S_XCHECKRESULT
      if (this.getSxcheckresult()!=null)
             if (this.getSxcheckresult().getBytes().length > 5)
                sb.append("S_XCHECKRESULT对帐结果宽度不能超过 "+5+"个字符; ");
    
    //check field S_XDIFFNUM
      if (this.getSxdiffnum()!=null)
             if (this.getSxdiffnum().getBytes().length > 10)
                sb.append("S_XDIFFNUM不符笔数宽度不能超过 "+10+"个字符; ");
    
    //check field S_HOLD1
      if (this.getShold1()!=null)
             if (this.getShold1().getBytes().length > 42)
                sb.append("S_HOLD1预留字段1宽度不能超过 "+42+"个字符; ");
    
    //check field S_HOLD2
      if (this.getShold2()!=null)
             if (this.getShold2().getBytes().length > 42)
                sb.append("S_HOLD2预留字段2宽度不能超过 "+42+"个字符; ");
    
    //check field S_EXT1
      if (this.getSext1()!=null)
             if (this.getSext1().getBytes().length > 50)
                sb.append("S_EXT1扩展宽度不能超过 "+50+"个字符; ");
    
    //check field S_EXT2
      if (this.getSext2()!=null)
             if (this.getSext2().getBytes().length > 50)
                sb.append("S_EXT2扩展宽度不能超过 "+50+"个字符; ");
    
    //check field S_EXT3
      if (this.getSext3()!=null)
             if (this.getSext3().getBytes().length > 50)
                sb.append("S_EXT3扩展宽度不能超过 "+50+"个字符; ");
    
    //check field S_EXT4
      if (this.getSext4()!=null)
             if (this.getSext4().getBytes().length > 50)
                sb.append("S_EXT4扩展宽度不能超过 "+50+"个字符; ");
    
    //check field S_EXT5
      if (this.getSext5()!=null)
             if (this.getSext5().getBytes().length > 50)
                sb.append("S_EXT5扩展宽度不能超过 "+50+"个字符; ");
    

 	String msg = sb.toString() ;
	if (msg.length() == 0)
		  return null ;

  return  msg;
  }
  /* Returns value valid checking String , NULL is Valid*/
   public String  checkValid(String[] _columnNames)
  {
  	StringBuffer sb = new StringBuffer() ;
    // check columnNames
    String checkNameMsg = checkColumnNamesValid(_columnNames);
    if (checkNameMsg != null) {
         return checkNameMsg;
    }
    //check field I_VOUSRLNO
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("I_VOUSRLNO")) {
               if (this.getIvousrlno()==null)
                    sb.append("I_VOUSRLNO 主键不能为空; ");
               break;
         }
  }
    
    //check field S_ORGCODE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_ORGCODE")) {
               if (this.getSorgcode()==null)
                    sb.append("S_ORGCODE 机构代码不能为空; ");
               if (this.getSorgcode()!=null)
                    if (this.getSorgcode().getBytes().length > 12)
                        sb.append("S_ORGCODE 机构代码宽度不能超过 "+12+"个字符");
             break;
         }
  }
    
    //check field S_TRECODE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_TRECODE")) {
               if (this.getStrecode()==null)
                    sb.append("S_TRECODE 国库代码不能为空; ");
               if (this.getStrecode()!=null)
                    if (this.getStrecode().getBytes().length > 10)
                        sb.append("S_TRECODE 国库代码宽度不能超过 "+10+"个字符");
             break;
         }
  }
    
    //check field S_STATUS
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_STATUS")) {
               if (this.getSstatus()==null)
                    sb.append("S_STATUS 状态不能为空; ");
               if (this.getSstatus()!=null)
                    if (this.getSstatus().getBytes().length > 5)
                        sb.append("S_STATUS 状态宽度不能超过 "+5+"个字符");
             break;
         }
  }
    
    //check field S_DEMO
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_DEMO")) {
                 if (this.getSdemo()!=null)
                    if (this.getSdemo().getBytes().length > 100)
                        sb.append("S_DEMO 描述宽度不能超过 "+100+"个字符");
             break;
         }
  }
    
    //don't need check field TS_SYSUPDATE,it is UpdateTimeStamp column
  
    //check field S_PACKAGENO
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_PACKAGENO")) {
                 if (this.getSpackageno()!=null)
                    if (this.getSpackageno().getBytes().length > 8)
                        sb.append("S_PACKAGENO 包流水号宽度不能超过 "+8+"个字符");
             break;
         }
  }
    
    //check field S_ADMDIVCODE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_ADMDIVCODE")) {
               if (this.getSadmdivcode()==null)
                    sb.append("S_ADMDIVCODE 行政区划代码不能为空; ");
               if (this.getSadmdivcode()!=null)
                    if (this.getSadmdivcode().getBytes().length > 9)
                        sb.append("S_ADMDIVCODE 行政区划代码宽度不能超过 "+9+"个字符");
             break;
         }
  }
    
    //check field S_STYEAR
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_STYEAR")) {
               if (this.getSstyear()==null)
                    sb.append("S_STYEAR 业务年度不能为空; ");
               if (this.getSstyear()!=null)
                    if (this.getSstyear().getBytes().length > 4)
                        sb.append("S_STYEAR 业务年度宽度不能超过 "+4+"个字符");
             break;
         }
  }
    
    //check field S_VTCODE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_VTCODE")) {
               if (this.getSvtcode()==null)
                    sb.append("S_VTCODE 凭证类型编号不能为空; ");
               if (this.getSvtcode()!=null)
                    if (this.getSvtcode().getBytes().length > 4)
                        sb.append("S_VTCODE 凭证类型编号宽度不能超过 "+4+"个字符");
             break;
         }
  }
    
    //check field S_VOUDATE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_VOUDATE")) {
               if (this.getSvoudate()==null)
                    sb.append("S_VOUDATE 凭证日期不能为空; ");
               if (this.getSvoudate()!=null)
                    if (this.getSvoudate().getBytes().length > 8)
                        sb.append("S_VOUDATE 凭证日期宽度不能超过 "+8+"个字符");
             break;
         }
  }
    
    //check field S_VOUCHERNO
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_VOUCHERNO")) {
               if (this.getSvoucherno()==null)
                    sb.append("S_VOUCHERNO 凭证号不能为空; ");
               if (this.getSvoucherno()!=null)
                    if (this.getSvoucherno().getBytes().length > 42)
                        sb.append("S_VOUCHERNO 凭证号宽度不能超过 "+42+"个字符");
             break;
         }
  }
    
    //check field S_VOUCHERCHECKNO
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_VOUCHERCHECKNO")) {
               if (this.getSvouchercheckno()==null)
                    sb.append("S_VOUCHERCHECKNO 对账单号不能为空; ");
               if (this.getSvouchercheckno()!=null)
                    if (this.getSvouchercheckno().getBytes().length > 42)
                        sb.append("S_VOUCHERCHECKNO 对账单号宽度不能超过 "+42+"个字符");
             break;
         }
  }
    
    //check field S_CHILDPACKNUM
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_CHILDPACKNUM")) {
               if (this.getSchildpacknum()==null)
                    sb.append("S_CHILDPACKNUM 子包总数不能为空; ");
               if (this.getSchildpacknum()!=null)
                    if (this.getSchildpacknum().getBytes().length > 10)
                        sb.append("S_CHILDPACKNUM 子包总数宽度不能超过 "+10+"个字符");
             break;
         }
  }
    
    //check field S_CURPACKNO
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_CURPACKNO")) {
               if (this.getScurpackno()==null)
                    sb.append("S_CURPACKNO 本包序号不能为空; ");
               if (this.getScurpackno()!=null)
                    if (this.getScurpackno().getBytes().length > 10)
                        sb.append("S_CURPACKNO 本包序号宽度不能超过 "+10+"个字符");
             break;
         }
  }
    
    //check field S_BILLKIND
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_BILLKIND")) {
               if (this.getSbillkind()==null)
                    sb.append("S_BILLKIND 报表种类不能为空; ");
               if (this.getSbillkind()!=null)
                    if (this.getSbillkind().getBytes().length > 1)
                        sb.append("S_BILLKIND 报表种类宽度不能超过 "+1+"个字符");
             break;
         }
  }
    
    //check field S_FINORGCODE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_FINORGCODE")) {
               if (this.getSfinorgcode()==null)
                    sb.append("S_FINORGCODE 财政机关代码不能为空; ");
               if (this.getSfinorgcode()!=null)
                    if (this.getSfinorgcode().getBytes().length > 12)
                        sb.append("S_FINORGCODE 财政机关代码宽度不能超过 "+12+"个字符");
             break;
         }
  }
    
    //check field S_TRENAME
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_TRENAME")) {
               if (this.getStrename()==null)
                    sb.append("S_TRENAME 国库主体名称不能为空; ");
               if (this.getStrename()!=null)
                    if (this.getStrename().getBytes().length > 60)
                        sb.append("S_TRENAME 国库主体名称宽度不能超过 "+60+"个字符");
             break;
         }
  }
    
    //check field S_BGTTYPECODE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_BGTTYPECODE")) {
                 if (this.getSbgttypecode()!=null)
                    if (this.getSbgttypecode().getBytes().length > 42)
                        sb.append("S_BGTTYPECODE 预算类型编码宽度不能超过 "+42+"个字符");
             break;
         }
  }
    
    //check field S_BGTTYPENAME
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_BGTTYPENAME")) {
                 if (this.getSbgttypename()!=null)
                    if (this.getSbgttypename().getBytes().length > 60)
                        sb.append("S_BGTTYPENAME 预算类型名称宽度不能超过 "+60+"个字符");
             break;
         }
  }
    
    //check field S_BEGINDATE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_BEGINDATE")) {
               if (this.getSbegindate()==null)
                    sb.append("S_BEGINDATE 对账起始日期不能为空; ");
               if (this.getSbegindate()!=null)
                    if (this.getSbegindate().getBytes().length > 8)
                        sb.append("S_BEGINDATE 对账起始日期宽度不能超过 "+8+"个字符");
             break;
         }
  }
    
    //check field S_ENDDATE
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_ENDDATE")) {
               if (this.getSenddate()==null)
                    sb.append("S_ENDDATE 对账终止日期不能为空; ");
               if (this.getSenddate()!=null)
                    if (this.getSenddate().getBytes().length > 8)
                        sb.append("S_ENDDATE 对账终止日期宽度不能超过 "+8+"个字符");
             break;
         }
  }
    
    //check field S_ALLNUM
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_ALLNUM")) {
               if (this.getSallnum()==null)
                    sb.append("S_ALLNUM 总笔数不能为空; ");
               if (this.getSallnum()!=null)
                    if (this.getSallnum().getBytes().length > 10)
                        sb.append("S_ALLNUM 总笔数宽度不能超过 "+10+"个字符");
             break;
         }
  }
    
    //check field N_ALLAMT
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("N_ALLAMT")) {
               if (this.getNallamt()==null)
                    sb.append("N_ALLAMT 总金额不能为空; ");
               break;
         }
  }
    
    //check field S_XCHECKRESULT
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_XCHECKRESULT")) {
                 if (this.getSxcheckresult()!=null)
                    if (this.getSxcheckresult().getBytes().length > 5)
                        sb.append("S_XCHECKRESULT 对帐结果宽度不能超过 "+5+"个字符");
             break;
         }
  }
    
    //check field S_XDIFFNUM
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_XDIFFNUM")) {
                 if (this.getSxdiffnum()!=null)
                    if (this.getSxdiffnum().getBytes().length > 10)
                        sb.append("S_XDIFFNUM 不符笔数宽度不能超过 "+10+"个字符");
             break;
         }
  }
    
    //check field S_HOLD1
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_HOLD1")) {
                 if (this.getShold1()!=null)
                    if (this.getShold1().getBytes().length > 42)
                        sb.append("S_HOLD1 预留字段1宽度不能超过 "+42+"个字符");
             break;
         }
  }
    
    //check field S_HOLD2
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_HOLD2")) {
                 if (this.getShold2()!=null)
                    if (this.getShold2().getBytes().length > 42)
                        sb.append("S_HOLD2 预留字段2宽度不能超过 "+42+"个字符");
             break;
         }
  }
    
    //check field S_EXT1
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_EXT1")) {
                 if (this.getSext1()!=null)
                    if (this.getSext1().getBytes().length > 50)
                        sb.append("S_EXT1 扩展宽度不能超过 "+50+"个字符");
             break;
         }
  }
    
    //check field S_EXT2
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_EXT2")) {
                 if (this.getSext2()!=null)
                    if (this.getSext2().getBytes().length > 50)
                        sb.append("S_EXT2 扩展宽度不能超过 "+50+"个字符");
             break;
         }
  }
    
    //check field S_EXT3
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_EXT3")) {
                 if (this.getSext3()!=null)
                    if (this.getSext3().getBytes().length > 50)
                        sb.append("S_EXT3 扩展宽度不能超过 "+50+"个字符");
             break;
         }
  }
    
    //check field S_EXT4
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_EXT4")) {
                 if (this.getSext4()!=null)
                    if (this.getSext4().getBytes().length > 50)
                        sb.append("S_EXT4 扩展宽度不能超过 "+50+"个字符");
             break;
         }
  }
    
    //check field S_EXT5
     for (int i = 0; i < _columnNames.length; i++) {
        if (((String) _columnNames[i]).equals("S_EXT5")) {
                 if (this.getSext5()!=null)
                    if (this.getSext5().getBytes().length > 50)
                        sb.append("S_EXT5 扩展宽度不能超过 "+50+"个字符");
             break;
         }
  }
    
 	String msg = sb.toString() ;
	if (msg.length() == 0)
		  return null ;

  return  msg;
  }
  /* Returns value valid checking String , NULL is Valid*/
	public String checkValidExcept(String[] _columnNames) {
		String msg = checkColumnNamesValid(_columnNames);
		if (msg != null) {
			return msg;
		}
		String[] columnCheckNames = new String[columnNames().length
				- _columnNames.length];
		int k = 0;
		for (int i = 0; i < columnNames().length; i++) {
			boolean checkNameInColumn = true;
			for (int j = 0; j < _columnNames.length; j++) {
				if (_columnNames[i].equals(columnNames()[j])) {
					checkNameInColumn = false;
					break;
				}
			}
			if (checkNameInColumn) {
				columnCheckNames[k] = columnNames()[i];
				k++;
			}
		}
		return checkValid(columnCheckNames);
	}
	/* Returns value valid checking String , NULL is Valid */
	public String checkColumnNamesValid(String[] _columnNames) {
		StringBuffer sb = new StringBuffer();
		if (_columnNames.length > columnNames().length) {
			return "输入字段个数多于表中字段个数; ";
		}
		// check columnNames
		for (int i = 0; i < _columnNames.length; i++) {
			boolean checkNameValid = false;
			for (int j = 0; j < columnNames().length; j++) {
				if (_columnNames[i] != null
						&& _columnNames[i].equals(columnNames()[j])) {
					checkNameValid = true;
					break;
				}
			}
			if (!checkNameValid)
				sb.append("输入字段 " + _columnNames[i] + " 不在该表字段中; ");
		}
		String msg = sb.toString();
		if (msg.length() == 0)
			return null;

		return msg;
	}
/*******************************************************
*
*  implement IDto
*
*****************************************************/

  /* if this Dto has children Dtos*/
  public boolean  isParent() {
     return false;
  };

  /* get the children Dtos if this has children*/
  public IDto[]  getChildren() {
     return null;
  };

  /* set the children Dtos if this has children*/
  public void  setChildren(IDto[] _dtos) 
  {
     throw new RuntimeException("此dto没有相关联的子dto，不能进行此操作");
  };
  
  /* return the IPK class  */
    public IPK      getPK(){
      HtfReportDefrayMainPK pk = new HtfReportDefrayMainPK();
      pk.setIvousrlno(getIvousrlno());
      return pk;
    };
}
