package com.cfcc.itfe.persistence.pk;

import java.sql.Date;
import java.math.BigDecimal;
import java.sql.Time;
import java.sql.Timestamp ;
import com.cfcc.jaf.persistence.jaform.parent.IPK ;

/**
 * <p>Title: PK of table: HTR_TAXORG_STOCKDAYRPT</p>
 * <p>Description:  PK Object  </p>
 * <p>Copyright: Copyright (c) 2005</p>
 * <p>Company: CFCC </p>
 * <p>Generation Time: 2014-12-25 15:28:55 </p>
 *  Do NOT change this file by hand.
 *  This java source file is generated by JAF_ORM .
 *
 *  pk.vm version timestamp: 2007-04-06 08:30:00
 * 
 * @author win7
 */

public class HtrTaxorgStockdayrptPK implements IPK
{
    /**
    *   S_TAXORGCODE CHARACTER  , PK   , NOT NULL        */
    protected String staxorgcode;
    /**
    *   S_TRECODE CHARACTER  , PK   , NOT NULL        */
    protected String strecode;
    /**
    *   S_RPTDATE CHARACTER  , PK   , NOT NULL        */
    protected String srptdate;
    /**
    *   S_ACCNO VARCHAR  , PK   , NOT NULL        */
    protected String saccno;
    /**
    *   S_ACCDATE CHARACTER  , PK   , NOT NULL        */
    protected String saccdate;



    /*  Getter S_TAXORGCODE, PK , NOT NULL   */
    public String getStaxorgcode()
    {
        return staxorgcode;
    }

     /*   Setter S_TAXORGCODE, PK , NOT NULL   */
    public void setStaxorgcode(String _staxorgcode) {
        this.staxorgcode = _staxorgcode;
    }
    /*  Getter S_TRECODE, PK , NOT NULL   */
    public String getStrecode()
    {
        return strecode;
    }

     /*   Setter S_TRECODE, PK , NOT NULL   */
    public void setStrecode(String _strecode) {
        this.strecode = _strecode;
    }
    /*  Getter S_RPTDATE, PK , NOT NULL   */
    public String getSrptdate()
    {
        return srptdate;
    }

     /*   Setter S_RPTDATE, PK , NOT NULL   */
    public void setSrptdate(String _srptdate) {
        this.srptdate = _srptdate;
    }
    /*  Getter S_ACCNO, PK , NOT NULL   */
    public String getSaccno()
    {
        return saccno;
    }

     /*   Setter S_ACCNO, PK , NOT NULL   */
    public void setSaccno(String _saccno) {
        this.saccno = _saccno;
    }
    /*  Getter S_ACCDATE, PK , NOT NULL   */
    public String getSaccdate()
    {
        return saccdate;
    }

     /*   Setter S_ACCDATE, PK , NOT NULL   */
    public void setSaccdate(String _saccdate) {
        this.saccdate = _saccdate;
    }


    /* Indicates whether some other object is "equal to" this one. */
    public boolean equals(Object obj)
    {
        if (this == obj)
            return true;

        if (obj == null || !(obj instanceof HtrTaxorgStockdayrptPK))
            return false;

        HtrTaxorgStockdayrptPK bean = (HtrTaxorgStockdayrptPK) obj;

	      //compare field staxorgcode
      if((this.staxorgcode==null && bean.staxorgcode!=null) || (this.staxorgcode!=null && bean.staxorgcode==null))
          return false;
        else if(this.staxorgcode==null && bean.staxorgcode==null){
        }
        else{
          if(!bean.staxorgcode.equals(this.staxorgcode))
               return false;
     }
  	      //compare field strecode
      if((this.strecode==null && bean.strecode!=null) || (this.strecode!=null && bean.strecode==null))
          return false;
        else if(this.strecode==null && bean.strecode==null){
        }
        else{
          if(!bean.strecode.equals(this.strecode))
               return false;
     }
  	      //compare field srptdate
      if((this.srptdate==null && bean.srptdate!=null) || (this.srptdate!=null && bean.srptdate==null))
          return false;
        else if(this.srptdate==null && bean.srptdate==null){
        }
        else{
          if(!bean.srptdate.equals(this.srptdate))
               return false;
     }
  	      //compare field saccno
      if((this.saccno==null && bean.saccno!=null) || (this.saccno!=null && bean.saccno==null))
          return false;
        else if(this.saccno==null && bean.saccno==null){
        }
        else{
          if(!bean.saccno.equals(this.saccno))
               return false;
     }
  	      //compare field saccdate
      if((this.saccdate==null && bean.saccdate!=null) || (this.saccdate!=null && bean.saccdate==null))
          return false;
        else if(this.saccdate==null && bean.saccdate==null){
        }
        else{
          if(!bean.saccdate.equals(this.saccdate))
               return false;
     }
          return true;
    }


   /* return hashCode ,if A.equals(B) that A.hashCode()==B.hashCode() */
	public int hashCode()
	{
		int __hash__ = 1;
		

        if(this.staxorgcode!=null)
          __hash__ = __hash__ * 31+ this.staxorgcode.hashCode() ;

        if(this.strecode!=null)
          __hash__ = __hash__ * 31+ this.strecode.hashCode() ;

        if(this.srptdate!=null)
          __hash__ = __hash__ * 31+ this.srptdate.hashCode() ;

        if(this.saccno!=null)
          __hash__ = __hash__ * 31+ this.saccno.hashCode() ;

        if(this.saccdate!=null)
          __hash__ = __hash__ * 31+ this.saccdate.hashCode() ;

		return __hash__;
	
	}



     /* Creates and returns a copy of this object. */
    public Object clone()
    {
        HtrTaxorgStockdayrptPK bean = new HtrTaxorgStockdayrptPK();
          if(this.staxorgcode!=null){
                  bean.staxorgcode = new String(this.staxorgcode);
            }
             if(this.strecode!=null){
                  bean.strecode = new String(this.strecode);
            }
             if(this.srptdate!=null){
                  bean.srptdate = new String(this.srptdate);
            }
             if(this.saccno!=null){
                  bean.saccno = new String(this.saccno);
            }
             if(this.saccdate!=null){
                  bean.saccdate = new String(this.saccdate);
            }
   
        return bean;
    }


   /* Returns a string representation of the object. */
    public String toString()
    {
        String sep = ", ";
        StringBuffer sb = new StringBuffer();
        sb.append("HtrTaxorgStockdayrptPK").append(":");
            sb.append("[staxorgcode]").append(" = ").append(staxorgcode).append(sep);
            sb.append("[strecode]").append(" = ").append(strecode).append(sep);
            sb.append("[srptdate]").append(" = ").append(srptdate).append(sep);
            sb.append("[saccno]").append(" = ").append(saccno).append(sep);
            sb.append("[saccdate]").append(" = ").append(saccdate).append(sep);
            return sb.toString();
    }


     /* Returns value valid checking String , NULL is Valid*/
   public String  checkValid()
  {
  	StringBuffer sb = new StringBuffer() ;

          
        if (this.getStaxorgcode()==null)
              sb.append("数据库表：HTR_TAXORG_STOCKDAYRPT 字段：S_TAXORGCODE 不能为空; ");
                
       if (this.getStaxorgcode()!=null)
          if (this.getStaxorgcode().getBytes().length > 12)
             sb.append("数据库表：HTR_TAXORG_STOCKDAYRPT 字段：S_TAXORGCODE 宽度不能超过 "+12);
                
        if (this.getStrecode()==null)
              sb.append("数据库表：HTR_TAXORG_STOCKDAYRPT 字段：S_TRECODE 不能为空; ");
                
       if (this.getStrecode()!=null)
          if (this.getStrecode().getBytes().length > 10)
             sb.append("数据库表：HTR_TAXORG_STOCKDAYRPT 字段：S_TRECODE 宽度不能超过 "+10);
                
        if (this.getSrptdate()==null)
              sb.append("数据库表：HTR_TAXORG_STOCKDAYRPT 字段：S_RPTDATE 不能为空; ");
                
       if (this.getSrptdate()!=null)
          if (this.getSrptdate().getBytes().length > 8)
             sb.append("数据库表：HTR_TAXORG_STOCKDAYRPT 字段：S_RPTDATE 宽度不能超过 "+8);
                
        if (this.getSaccno()==null)
              sb.append("数据库表：HTR_TAXORG_STOCKDAYRPT 字段：S_ACCNO 不能为空; ");
                
       if (this.getSaccno()!=null)
          if (this.getSaccno().getBytes().length > 32)
             sb.append("数据库表：HTR_TAXORG_STOCKDAYRPT 字段：S_ACCNO 宽度不能超过 "+32);
                
        if (this.getSaccdate()==null)
              sb.append("数据库表：HTR_TAXORG_STOCKDAYRPT 字段：S_ACCDATE 不能为空; ");
                
       if (this.getSaccdate()!=null)
          if (this.getSaccdate().getBytes().length > 8)
             sb.append("数据库表：HTR_TAXORG_STOCKDAYRPT 字段：S_ACCDATE 宽度不能超过 "+8);
        	String msg = sb.toString() ;
	if (msg.length() == 0)
		return null ;
  	return  msg;
   }

}
