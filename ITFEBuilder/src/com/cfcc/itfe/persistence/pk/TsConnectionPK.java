package com.cfcc.itfe.persistence.pk;

import java.sql.Date;
import java.math.BigDecimal;
import java.sql.Time;
import java.sql.Timestamp ;
import com.cfcc.jaf.persistence.jaform.parent.IPK ;

/**
 * <p>Title: PK of table: TS_CONNECTION</p>
 * <p>Description:  PK Object  </p>
 * <p>Copyright: Copyright (c) 2005</p>
 * <p>Company: CFCC </p>
 * <p>Generation Time: 2014-12-25 15:28:59 </p>
 *  Do NOT change this file by hand.
 *  This java source file is generated by JAF_ORM .
 *
 *  pk.vm version timestamp: 2007-04-06 08:30:00
 * 
 * @author win7
 */

public class TsConnectionPK implements IPK
{
    /**
    *   S_CONNORGCODEA VARCHAR  , PK   , NOT NULL        */
    protected String sconnorgcodea;
    /**
    *   S_CONNORGCODEB VARCHAR  , PK   , NOT NULL        */
    protected String sconnorgcodeb;



    /*  Getter S_CONNORGCODEA, PK , NOT NULL   */
    public String getSconnorgcodea()
    {
        return sconnorgcodea;
    }

     /*   Setter S_CONNORGCODEA, PK , NOT NULL   */
    public void setSconnorgcodea(String _sconnorgcodea) {
        this.sconnorgcodea = _sconnorgcodea;
    }
    /*  Getter S_CONNORGCODEB, PK , NOT NULL   */
    public String getSconnorgcodeb()
    {
        return sconnorgcodeb;
    }

     /*   Setter S_CONNORGCODEB, PK , NOT NULL   */
    public void setSconnorgcodeb(String _sconnorgcodeb) {
        this.sconnorgcodeb = _sconnorgcodeb;
    }


    /* Indicates whether some other object is "equal to" this one. */
    public boolean equals(Object obj)
    {
        if (this == obj)
            return true;

        if (obj == null || !(obj instanceof TsConnectionPK))
            return false;

        TsConnectionPK bean = (TsConnectionPK) obj;

	      //compare field sconnorgcodea
      if((this.sconnorgcodea==null && bean.sconnorgcodea!=null) || (this.sconnorgcodea!=null && bean.sconnorgcodea==null))
          return false;
        else if(this.sconnorgcodea==null && bean.sconnorgcodea==null){
        }
        else{
          if(!bean.sconnorgcodea.equals(this.sconnorgcodea))
               return false;
     }
  	      //compare field sconnorgcodeb
      if((this.sconnorgcodeb==null && bean.sconnorgcodeb!=null) || (this.sconnorgcodeb!=null && bean.sconnorgcodeb==null))
          return false;
        else if(this.sconnorgcodeb==null && bean.sconnorgcodeb==null){
        }
        else{
          if(!bean.sconnorgcodeb.equals(this.sconnorgcodeb))
               return false;
     }
          return true;
    }


   /* return hashCode ,if A.equals(B) that A.hashCode()==B.hashCode() */
	public int hashCode()
	{
		int __hash__ = 1;
		

        if(this.sconnorgcodea!=null)
          __hash__ = __hash__ * 31+ this.sconnorgcodea.hashCode() ;

        if(this.sconnorgcodeb!=null)
          __hash__ = __hash__ * 31+ this.sconnorgcodeb.hashCode() ;

		return __hash__;
	
	}



     /* Creates and returns a copy of this object. */
    public Object clone()
    {
        TsConnectionPK bean = new TsConnectionPK();
          if(this.sconnorgcodea!=null){
                  bean.sconnorgcodea = new String(this.sconnorgcodea);
            }
             if(this.sconnorgcodeb!=null){
                  bean.sconnorgcodeb = new String(this.sconnorgcodeb);
            }
   
        return bean;
    }


   /* Returns a string representation of the object. */
    public String toString()
    {
        String sep = ", ";
        StringBuffer sb = new StringBuffer();
        sb.append("TsConnectionPK").append(":");
            sb.append("[sconnorgcodea]").append(" = ").append(sconnorgcodea).append(sep);
            sb.append("[sconnorgcodeb]").append(" = ").append(sconnorgcodeb).append(sep);
            return sb.toString();
    }


     /* Returns value valid checking String , NULL is Valid*/
   public String  checkValid()
  {
  	StringBuffer sb = new StringBuffer() ;

          
        if (this.getSconnorgcodea()==null)
              sb.append("数据库表：TS_CONNECTION 字段：S_CONNORGCODEA 不能为空; ");
                
       if (this.getSconnorgcodea()!=null)
          if (this.getSconnorgcodea().getBytes().length > 12)
             sb.append("数据库表：TS_CONNECTION 字段：S_CONNORGCODEA 宽度不能超过 "+12);
                
        if (this.getSconnorgcodeb()==null)
              sb.append("数据库表：TS_CONNECTION 字段：S_CONNORGCODEB 不能为空; ");
                
       if (this.getSconnorgcodeb()!=null)
          if (this.getSconnorgcodeb().getBytes().length > 12)
             sb.append("数据库表：TS_CONNECTION 字段：S_CONNORGCODEB 宽度不能超过 "+12);
        	String msg = sb.toString() ;
	if (msg.length() == 0)
		return null ;
  	return  msg;
   }

}
