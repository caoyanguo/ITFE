package com.cfcc.itfe.persistence.pk;

import java.sql.Date;
import java.math.BigDecimal;
import java.sql.Time;
import java.sql.Timestamp ;
import com.cfcc.jaf.persistence.jaform.parent.IPK ;

/**
 * <p>Title: PK of table: TS_SYSFUNC</p>
 * <p>Description:  PK Object  </p>
 * <p>Copyright: Copyright (c) 2005</p>
 * <p>Company: CFCC </p>
 * <p>Generation Time: 2014-12-25 15:29:01 </p>
 *  Do NOT change this file by hand.
 *  This java source file is generated by JAF_ORM .
 *
 *  pk.vm version timestamp: 2007-04-06 08:30:00
 * 
 * @author win7
 */

public class TsSysfuncPK implements IPK
{
    /**
    *   S_FUNCCODE VARCHAR  , PK   , NOT NULL        */
    protected String sfunccode;



    /*  Getter S_FUNCCODE, PK , NOT NULL   */
    public String getSfunccode()
    {
        return sfunccode;
    }

     /*   Setter S_FUNCCODE, PK , NOT NULL   */
    public void setSfunccode(String _sfunccode) {
        this.sfunccode = _sfunccode;
    }


    /* Indicates whether some other object is "equal to" this one. */
    public boolean equals(Object obj)
    {
        if (this == obj)
            return true;

        if (obj == null || !(obj instanceof TsSysfuncPK))
            return false;

        TsSysfuncPK bean = (TsSysfuncPK) obj;

	      //compare field sfunccode
      if((this.sfunccode==null && bean.sfunccode!=null) || (this.sfunccode!=null && bean.sfunccode==null))
          return false;
        else if(this.sfunccode==null && bean.sfunccode==null){
        }
        else{
          if(!bean.sfunccode.equals(this.sfunccode))
               return false;
     }
          return true;
    }


   /* return hashCode ,if A.equals(B) that A.hashCode()==B.hashCode() */
	public int hashCode()
	{
		int __hash__ = 1;
		

        if(this.sfunccode!=null)
          __hash__ = __hash__ * 31+ this.sfunccode.hashCode() ;

		return __hash__;
	
	}



     /* Creates and returns a copy of this object. */
    public Object clone()
    {
        TsSysfuncPK bean = new TsSysfuncPK();
          if(this.sfunccode!=null){
                  bean.sfunccode = new String(this.sfunccode);
            }
   
        return bean;
    }


   /* Returns a string representation of the object. */
    public String toString()
    {
        String sep = ", ";
        StringBuffer sb = new StringBuffer();
        sb.append("TsSysfuncPK").append(":");
            sb.append("[sfunccode]").append(" = ").append(sfunccode).append(sep);
            return sb.toString();
    }


     /* Returns value valid checking String , NULL is Valid*/
   public String  checkValid()
  {
  	StringBuffer sb = new StringBuffer() ;

          
        if (this.getSfunccode()==null)
              sb.append("数据库表：TS_SYSFUNC 字段：S_FUNCCODE 不能为空; ");
                
       if (this.getSfunccode()!=null)
          if (this.getSfunccode().getBytes().length > 30)
             sb.append("数据库表：TS_SYSFUNC 字段：S_FUNCCODE 宽度不能超过 "+30);
        	String msg = sb.toString() ;
	if (msg.length() == 0)
		return null ;
  	return  msg;
   }

}
