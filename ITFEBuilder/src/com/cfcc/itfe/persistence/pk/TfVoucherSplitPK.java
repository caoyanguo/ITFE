package com.cfcc.itfe.persistence.pk;

import java.sql.Date;
import java.math.BigDecimal;
import java.sql.Time;
import java.sql.Timestamp ;
import com.cfcc.jaf.persistence.jaform.parent.IPK ;

/**
 * <p>Title: PK of table: TF_VOUCHER_SPLIT</p>
 * <p>Description: 凭证拆分表 PK Object  </p>
 * <p>Copyright: Copyright (c) 2005</p>
 * <p>Company: CFCC </p>
 * <p>Generation Time: 2014-12-25 15:28:59 </p>
 *  Do NOT change this file by hand.
 *  This java source file is generated by JAF_ORM .
 *
 *  pk.vm version timestamp: 2007-04-06 08:30:00
 * 
 * @author win7
 */

public class TfVoucherSplitPK implements IPK
{
    /**
    *  原凭证流水号 I_VOUSRLNO BIGINT  , PK   , NOT NULL        */
    protected Long ivousrlno;
    /**
    *  拆分凭证号 S_SPLIT_NO VARCHAR  , PK   , NOT NULL        */
    protected String ssplitno;
    /**
    *  业务类型 S_VTCODE VARCHAR  , PK   , NOT NULL        */
    protected String svtcode;
    /**
    *  委托日期 S_COMMITDATE VARCHAR  , PK   , NOT NULL        */
    protected String scommitdate;



    /* 原凭证流水号 Getter I_VOUSRLNO, PK , NOT NULL   */
    public Long getIvousrlno()
    {
        return ivousrlno;
    }

     /*  原凭证流水号 Setter I_VOUSRLNO, PK , NOT NULL   */
    public void setIvousrlno(Long _ivousrlno) {
        this.ivousrlno = _ivousrlno;
    }
    /* 拆分凭证号 Getter S_SPLIT_NO, PK , NOT NULL   */
    public String getSsplitno()
    {
        return ssplitno;
    }

     /*  拆分凭证号 Setter S_SPLIT_NO, PK , NOT NULL   */
    public void setSsplitno(String _ssplitno) {
        this.ssplitno = _ssplitno;
    }
    /* 业务类型 Getter S_VTCODE, PK , NOT NULL   */
    public String getSvtcode()
    {
        return svtcode;
    }

     /*  业务类型 Setter S_VTCODE, PK , NOT NULL   */
    public void setSvtcode(String _svtcode) {
        this.svtcode = _svtcode;
    }
    /* 委托日期 Getter S_COMMITDATE, PK , NOT NULL   */
    public String getScommitdate()
    {
        return scommitdate;
    }

     /*  委托日期 Setter S_COMMITDATE, PK , NOT NULL   */
    public void setScommitdate(String _scommitdate) {
        this.scommitdate = _scommitdate;
    }


    /* Indicates whether some other object is "equal to" this one. */
    public boolean equals(Object obj)
    {
        if (this == obj)
            return true;

        if (obj == null || !(obj instanceof TfVoucherSplitPK))
            return false;

        TfVoucherSplitPK bean = (TfVoucherSplitPK) obj;

	      //compare field ivousrlno
      if((this.ivousrlno==null && bean.ivousrlno!=null) || (this.ivousrlno!=null && bean.ivousrlno==null))
          return false;
        else if(this.ivousrlno==null && bean.ivousrlno==null){
        }
        else{
          if(!bean.ivousrlno.equals(this.ivousrlno))
               return false;
     }
  	      //compare field ssplitno
      if((this.ssplitno==null && bean.ssplitno!=null) || (this.ssplitno!=null && bean.ssplitno==null))
          return false;
        else if(this.ssplitno==null && bean.ssplitno==null){
        }
        else{
          if(!bean.ssplitno.equals(this.ssplitno))
               return false;
     }
  	      //compare field svtcode
      if((this.svtcode==null && bean.svtcode!=null) || (this.svtcode!=null && bean.svtcode==null))
          return false;
        else if(this.svtcode==null && bean.svtcode==null){
        }
        else{
          if(!bean.svtcode.equals(this.svtcode))
               return false;
     }
  	      //compare field scommitdate
      if((this.scommitdate==null && bean.scommitdate!=null) || (this.scommitdate!=null && bean.scommitdate==null))
          return false;
        else if(this.scommitdate==null && bean.scommitdate==null){
        }
        else{
          if(!bean.scommitdate.equals(this.scommitdate))
               return false;
     }
          return true;
    }


   /* return hashCode ,if A.equals(B) that A.hashCode()==B.hashCode() */
	public int hashCode()
	{
		int __hash__ = 1;
		

        if(this.ivousrlno!=null)
          __hash__ = __hash__ * 31+ this.ivousrlno.hashCode() ;

        if(this.ssplitno!=null)
          __hash__ = __hash__ * 31+ this.ssplitno.hashCode() ;

        if(this.svtcode!=null)
          __hash__ = __hash__ * 31+ this.svtcode.hashCode() ;

        if(this.scommitdate!=null)
          __hash__ = __hash__ * 31+ this.scommitdate.hashCode() ;

		return __hash__;
	
	}



     /* Creates and returns a copy of this object. */
    public Object clone()
    {
        TfVoucherSplitPK bean = new TfVoucherSplitPK();
          if(this.ivousrlno!=null){
                  bean.ivousrlno = new Long(this.ivousrlno.toString());
            }
             if(this.ssplitno!=null){
                  bean.ssplitno = new String(this.ssplitno);
            }
             if(this.svtcode!=null){
                  bean.svtcode = new String(this.svtcode);
            }
             if(this.scommitdate!=null){
                  bean.scommitdate = new String(this.scommitdate);
            }
   
        return bean;
    }


   /* Returns a string representation of the object. */
    public String toString()
    {
        String sep = ", ";
        StringBuffer sb = new StringBuffer();
        sb.append("TfVoucherSplitPK").append(":");
            sb.append("[ivousrlno]").append(" = ").append(ivousrlno).append(sep);
            sb.append("[ssplitno]").append(" = ").append(ssplitno).append(sep);
            sb.append("[svtcode]").append(" = ").append(svtcode).append(sep);
            sb.append("[scommitdate]").append(" = ").append(scommitdate).append(sep);
            return sb.toString();
    }


     /* Returns value valid checking String , NULL is Valid*/
   public String  checkValid()
  {
  	StringBuffer sb = new StringBuffer() ;

          
        if (this.getIvousrlno()==null)
              sb.append("数据库表：TF_VOUCHER_SPLIT 字段：I_VOUSRLNO 不能为空; ");
                        
        if (this.getSsplitno()==null)
              sb.append("数据库表：TF_VOUCHER_SPLIT 字段：S_SPLIT_NO 不能为空; ");
                
       if (this.getSsplitno()!=null)
          if (this.getSsplitno().getBytes().length > 50)
             sb.append("数据库表：TF_VOUCHER_SPLIT 字段：S_SPLIT_NO 宽度不能超过 "+50);
                
        if (this.getSvtcode()==null)
              sb.append("数据库表：TF_VOUCHER_SPLIT 字段：S_VTCODE 不能为空; ");
                
       if (this.getSvtcode()!=null)
          if (this.getSvtcode().getBytes().length > 4)
             sb.append("数据库表：TF_VOUCHER_SPLIT 字段：S_VTCODE 宽度不能超过 "+4);
                
        if (this.getScommitdate()==null)
              sb.append("数据库表：TF_VOUCHER_SPLIT 字段：S_COMMITDATE 不能为空; ");
                
       if (this.getScommitdate()!=null)
          if (this.getScommitdate().getBytes().length > 8)
             sb.append("数据库表：TF_VOUCHER_SPLIT 字段：S_COMMITDATE 宽度不能超过 "+8);
        	String msg = sb.toString() ;
	if (msg.length() == 0)
		return null ;
  	return  msg;
   }

}
