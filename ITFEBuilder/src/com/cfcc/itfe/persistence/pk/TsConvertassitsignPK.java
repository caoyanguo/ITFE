package com.cfcc.itfe.persistence.pk;

import java.sql.Date;
import java.math.BigDecimal;
import java.sql.Time;
import java.sql.Timestamp ;
import com.cfcc.jaf.persistence.jaform.parent.IPK ;

/**
 * <p>Title: PK of table: TS_CONVERTASSITSIGN</p>
 * <p>Description:  PK Object  </p>
 * <p>Copyright: Copyright (c) 2005</p>
 * <p>Company: CFCC </p>
 * <p>Generation Time: 2014-12-25 15:28:59 </p>
 *  Do NOT change this file by hand.
 *  This java source file is generated by JAF_ORM .
 *
 *  pk.vm version timestamp: 2007-04-06 08:30:00
 * 
 * @author win7
 */

public class TsConvertassitsignPK implements IPK
{
    /**
    *   S_ORGCODE VARCHAR  , PK   , NOT NULL        */
    protected String sorgcode;
    /**
    *   S_TRECODE VARCHAR  , PK   , NOT NULL        */
    protected String strecode;
    /**
    *   S_TBSASSITSIGN VARCHAR  , PK   , NOT NULL        */
    protected String stbsassitsign;
    /**
    *   S_BUDGETSUBCODE VARCHAR  , PK   , NOT NULL        */
    protected String sbudgetsubcode;



    /*  Getter S_ORGCODE, PK , NOT NULL   */
    public String getSorgcode()
    {
        return sorgcode;
    }

     /*   Setter S_ORGCODE, PK , NOT NULL   */
    public void setSorgcode(String _sorgcode) {
        this.sorgcode = _sorgcode;
    }
    /*  Getter S_TRECODE, PK , NOT NULL   */
    public String getStrecode()
    {
        return strecode;
    }

     /*   Setter S_TRECODE, PK , NOT NULL   */
    public void setStrecode(String _strecode) {
        this.strecode = _strecode;
    }
    /*  Getter S_TBSASSITSIGN, PK , NOT NULL   */
    public String getStbsassitsign()
    {
        return stbsassitsign;
    }

     /*   Setter S_TBSASSITSIGN, PK , NOT NULL   */
    public void setStbsassitsign(String _stbsassitsign) {
        this.stbsassitsign = _stbsassitsign;
    }
    /*  Getter S_BUDGETSUBCODE, PK , NOT NULL   */
    public String getSbudgetsubcode()
    {
        return sbudgetsubcode;
    }

     /*   Setter S_BUDGETSUBCODE, PK , NOT NULL   */
    public void setSbudgetsubcode(String _sbudgetsubcode) {
        this.sbudgetsubcode = _sbudgetsubcode;
    }


    /* Indicates whether some other object is "equal to" this one. */
    public boolean equals(Object obj)
    {
        if (this == obj)
            return true;

        if (obj == null || !(obj instanceof TsConvertassitsignPK))
            return false;

        TsConvertassitsignPK bean = (TsConvertassitsignPK) obj;

	      //compare field sorgcode
      if((this.sorgcode==null && bean.sorgcode!=null) || (this.sorgcode!=null && bean.sorgcode==null))
          return false;
        else if(this.sorgcode==null && bean.sorgcode==null){
        }
        else{
          if(!bean.sorgcode.equals(this.sorgcode))
               return false;
     }
  	      //compare field strecode
      if((this.strecode==null && bean.strecode!=null) || (this.strecode!=null && bean.strecode==null))
          return false;
        else if(this.strecode==null && bean.strecode==null){
        }
        else{
          if(!bean.strecode.equals(this.strecode))
               return false;
     }
  	      //compare field stbsassitsign
      if((this.stbsassitsign==null && bean.stbsassitsign!=null) || (this.stbsassitsign!=null && bean.stbsassitsign==null))
          return false;
        else if(this.stbsassitsign==null && bean.stbsassitsign==null){
        }
        else{
          if(!bean.stbsassitsign.equals(this.stbsassitsign))
               return false;
     }
  	      //compare field sbudgetsubcode
      if((this.sbudgetsubcode==null && bean.sbudgetsubcode!=null) || (this.sbudgetsubcode!=null && bean.sbudgetsubcode==null))
          return false;
        else if(this.sbudgetsubcode==null && bean.sbudgetsubcode==null){
        }
        else{
          if(!bean.sbudgetsubcode.equals(this.sbudgetsubcode))
               return false;
     }
          return true;
    }


   /* return hashCode ,if A.equals(B) that A.hashCode()==B.hashCode() */
	public int hashCode()
	{
		int __hash__ = 1;
		

        if(this.sorgcode!=null)
          __hash__ = __hash__ * 31+ this.sorgcode.hashCode() ;

        if(this.strecode!=null)
          __hash__ = __hash__ * 31+ this.strecode.hashCode() ;

        if(this.stbsassitsign!=null)
          __hash__ = __hash__ * 31+ this.stbsassitsign.hashCode() ;

        if(this.sbudgetsubcode!=null)
          __hash__ = __hash__ * 31+ this.sbudgetsubcode.hashCode() ;

		return __hash__;
	
	}



     /* Creates and returns a copy of this object. */
    public Object clone()
    {
        TsConvertassitsignPK bean = new TsConvertassitsignPK();
          if(this.sorgcode!=null){
                  bean.sorgcode = new String(this.sorgcode);
            }
             if(this.strecode!=null){
                  bean.strecode = new String(this.strecode);
            }
             if(this.stbsassitsign!=null){
                  bean.stbsassitsign = new String(this.stbsassitsign);
            }
             if(this.sbudgetsubcode!=null){
                  bean.sbudgetsubcode = new String(this.sbudgetsubcode);
            }
   
        return bean;
    }


   /* Returns a string representation of the object. */
    public String toString()
    {
        String sep = ", ";
        StringBuffer sb = new StringBuffer();
        sb.append("TsConvertassitsignPK").append(":");
            sb.append("[sorgcode]").append(" = ").append(sorgcode).append(sep);
            sb.append("[strecode]").append(" = ").append(strecode).append(sep);
            sb.append("[stbsassitsign]").append(" = ").append(stbsassitsign).append(sep);
            sb.append("[sbudgetsubcode]").append(" = ").append(sbudgetsubcode).append(sep);
            return sb.toString();
    }


     /* Returns value valid checking String , NULL is Valid*/
   public String  checkValid()
  {
  	StringBuffer sb = new StringBuffer() ;

          
        if (this.getSorgcode()==null)
              sb.append("数据库表：TS_CONVERTASSITSIGN 字段：S_ORGCODE 不能为空; ");
                
       if (this.getSorgcode()!=null)
          if (this.getSorgcode().getBytes().length > 12)
             sb.append("数据库表：TS_CONVERTASSITSIGN 字段：S_ORGCODE 宽度不能超过 "+12);
                
        if (this.getStrecode()==null)
              sb.append("数据库表：TS_CONVERTASSITSIGN 字段：S_TRECODE 不能为空; ");
                
       if (this.getStrecode()!=null)
          if (this.getStrecode().getBytes().length > 10)
             sb.append("数据库表：TS_CONVERTASSITSIGN 字段：S_TRECODE 宽度不能超过 "+10);
                
        if (this.getStbsassitsign()==null)
              sb.append("数据库表：TS_CONVERTASSITSIGN 字段：S_TBSASSITSIGN 不能为空; ");
                
       if (this.getStbsassitsign()!=null)
          if (this.getStbsassitsign().getBytes().length > 30)
             sb.append("数据库表：TS_CONVERTASSITSIGN 字段：S_TBSASSITSIGN 宽度不能超过 "+30);
                
        if (this.getSbudgetsubcode()==null)
              sb.append("数据库表：TS_CONVERTASSITSIGN 字段：S_BUDGETSUBCODE 不能为空; ");
                
       if (this.getSbudgetsubcode()!=null)
          if (this.getSbudgetsubcode().getBytes().length > 30)
             sb.append("数据库表：TS_CONVERTASSITSIGN 字段：S_BUDGETSUBCODE 宽度不能超过 "+30);
        	String msg = sb.toString() ;
	if (msg.length() == 0)
		return null ;
  	return  msg;
   }

}
